#!meta

{"kernelInfo":{"defaultKernelName":"pwsh","items":[{"aliases":[],"name":"pwsh"}]}}

#!pwsh

. ./nbs_header.ps1
. ./core.ps1

#!pwsh

# rustup component add clippy rust-src rustfmt

#!pwsh

# rustup target add wasm32-unknown-unknown

#!pwsh

rustup update

#!pwsh

if (!(Search-Command "cargo-outdated")) {
    { cargo install --git https://github.com/i574n/cargo-outdated.git --locked } | Invoke-Block -OnError Continue
}

#!pwsh

if (!(Search-Command "sccache")) {
    { cargo install sccache } | Invoke-Block -OnError Continue
}

#!pwsh

if (!(Search-Command "wasm-pack")) {
    { cargo install wasm-pack --locked } | Invoke-Block -OnError Continue
}

#!pwsh

if (!(Search-Command "trunk")) {
    { cargo install trunk --version 0.21.5 } | Invoke-Block -OnError Continue
}

#!pwsh

if (!(Search-Command "leptosfmt")) {
    { cargo install --git https://github.com/bram209/leptosfmt.git --locked } | Invoke-Block -OnError Continue
}

#!pwsh

if (!(Search-Command "nix")) {
    { ~/.bun/bin/bunx --bun playwright@1.44.0 install } | Invoke-Block
}

#!pwsh

[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

#!pwsh

{ Install-Module -Name PowerShellGet -Force -AllowClobber -Scope CurrentUser } | Invoke-Block -OnError Continue

#!pwsh

{ Set-PSRepository -Name PSGallery -InstallationPolicy Trusted } | Invoke-Block -OnError Continue

#!pwsh

{ ~/.bun/bin/bun install --cwd .. --frozen-lockfile } | Invoke-Block

#!pwsh

{ . "$ScriptDir/dep_spiral.ps1" } | Invoke-Block

#!pwsh

{ . "$ScriptDir/dep_spiral_extension.ps1" } | Invoke-Block -OnError Continue

#!pwsh

{ . "$ScriptDir/dep_fable.ps1" } | Invoke-Block

#!pwsh

if (!(Test-Path ../deps/hyperui/.next/package.json)) {
    { . "$ScriptDir/dep_hyperui.ps1" } | Invoke-Block
}
