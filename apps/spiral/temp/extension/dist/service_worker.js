"use strict";(()=>{function n(){return chrome||window.browser}var c=typeof n().runtime<"u";console.log("service_worker.ts / isExtension:",c);self.onmessage=async r=>{console.log("service_worker.ts / onmessage / event:",r)};function l(r){let e=42;for(let t=0;t<r.length;t++)e=(e<<5)+e+r.charCodeAt(t);return Math.round(Math.abs(e/6))}function u(r){return{id:l(r),priority:1,action:{type:chrome.declarativeNetRequest.RuleActionType.MODIFY_HEADERS,responseHeaders:[{header:"Content-Security-Policy",operation:chrome.declarativeNetRequest.HeaderOperation.SET,value:"default-src * 'unsafe-inline' 'unsafe-eval' 'wasm-unsafe-eval' 'wasm-eval' data: blob:;"},{header:"content-security-policy-report-only",operation:chrome.declarativeNetRequest.HeaderOperation.REMOVE},{header:"Referrer-Policy",operation:chrome.declarativeNetRequest.HeaderOperation.REMOVE},{header:"x-content-security-policy",operation:chrome.declarativeNetRequest.HeaderOperation.REMOVE},{header:"X-Frame-Options",operation:chrome.declarativeNetRequest.HeaderOperation.REMOVE},{header:"x-webkit-csp",operation:chrome.declarativeNetRequest.HeaderOperation.REMOVE}]},condition:{urlFilter:`*${r}*`,resourceTypes:[chrome.declarativeNetRequest.ResourceType.MAIN_FRAME,chrome.declarativeNetRequest.ResourceType.SUB_FRAME]}}}chrome.runtime.onInstalled.addListener(()=>{console.log("service_worker.ts / chrome.runtime.onInstalled")});var s={};chrome.runtime.onMessage.addListener((r,e,t)=>{if(console.log("service_worker.js / onMessage / request:",r,"/ sender:",e,"/ reloadCount:",e.tab?.id&&s[e.tab.id]),r.message&&r.message.includes("WebAssembly")){let a=e.url||e.tab?.url||e.origin||"",i=a.match(/^https?\:\/\/([^\/?#]+)(?:[\/?#]|$)/i);if(a=i&&i[1]||"",!a)console.log("service_worker.js / onMessage / no filter");else return(async()=>{let o=u(a);await chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:[o.id],addRules:[o]}),chrome.runtime.lastError?console.log("service_worker.js / onMessage / updateDynamicRules / rule:",o,"/ error:",chrome.runtime.lastError):console.log("service_worker.js / onMessage / updateDynamicRules / rule:",o),e.tab?.id&&(s[e.tab.id]=(s[e.tab.id]||0)+1,s[e.tab.id]<2&&await chrome.tabs.reload(e.tab.id)),t({rule:o})})(),!0}});})();
