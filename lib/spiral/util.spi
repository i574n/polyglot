/// # util

/// ### ski
union rec ski =
    | I
    | K
    | S
    | App : ski * ski

inl rec eval ski =
    match ski with
    | App (App (K, x), y) => x |> eval
    | App (App (App (S, x), y), z) => App (App (x, z), App (y, z)) |> eval
    | App (I, x) => x |> eval
    | App (K, x) => App (K, eval x)
    | App (f, x) => App (eval f, x) |> eval
    | _ => ski
