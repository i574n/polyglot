inl types () =
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"std::env::VarError\")>]\n#endif\ntype std_env_VarError = class end"

nominal var_error = $'std_env_VarError'

/// ## get_environment_variable
inl get_environment_variable (var : string) : string =
    run_target function
        | Fsharp (Native) => fun () =>
            inl var = join var
            var |> $'System.Environment.GetEnvironmentVariable'
        | Rust (Native) => fun () =>
            open rust_operators
            !\\(var, $'"std::env::var(&*$0)"')
            |> fun x => x : resultm.result' sm'.std_string var_error
            |> resultm.map' sm'.from_std_string
            |> resultm.unwrap_or' (join "")
        | target => fun () => null ()

/// ## get_environment_variable_comptime
inl get_environment_variable_comptime (var : string) : string =
    run_target function
        | Rust (Native) => fun () =>
            open rust_operators
            !\($'"env\!(\\\"" + !var + "\\\")"')
            |> sm'.from_std_string
        | target => fun () => null ()

/// ## get_entry_assembly_name
inl get_entry_assembly_name () : string =
    run_target function
        | Fsharp (Native) => fun () =>
            $'System.Reflection.Assembly.GetEntryAssembly().GetName().Name'
        | Rust (Native) => fun () =>
            "CARGO_PKG_NAME" |> get_environment_variable
        | target => fun () => null ()
