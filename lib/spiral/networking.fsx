#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::string::String")>]
type std_string_String = class end
#else
type std_string_String = string
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("&$0")>]
type Ref<'T> = class end
#else
type Ref<'T> = 'T
#endif

#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("mut $0")>]
#endif
type Mut<'T> = class end
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("Vec<$0>")>]
#endif
type Vec<'T> = class end
module TraceState = let mutable trace_state = None
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("std::env::VarError")>]
#endif
type std_env_VarError = class end
type IOsEnviron = abstract environ: x: unit -> obj
#if FABLE_COMPILER
[<Fable.Core.Erase; Fable.Core.Emit("str")>]
type Str = class end
#else
type Str = string
#endif

type [<Struct>] US0 =
    | US0_0
    | US0_1
    | US0_2
    | US0_3
    | US0_4
and Mut0 = {mutable l0 : int64}
and Mut1 = {mutable l0 : (string -> unit)}
and Mut2 = {mutable l0 : bool}
and Mut3 = {mutable l0 : string}
and Mut4 = {mutable l0 : US0}
and [<Struct>] US1 =
    | US1_0 of f0_0 : string
    | US1_1
and [<Struct>] US2 =
    | US2_0
    | US2_1
    | US2_2
and [<Struct>] US3 =
    | US3_0 of f0_0 : US2
    | US3_1 of f1_0 : US2
    | US3_2 of f2_0 : US2
    | US3_3 of f3_0 : US2
    | US3_4 of f4_0 : US2
and [<Struct>] US4 =
    | US4_0 of f0_0 : US0
    | US4_1
and [<Struct>] US5 =
    | US5_0 of f0_0 : int64
    | US5_1
and [<Struct>] US6 =
    | US6_0 of f0_0 : bool
    | US6_1
and [<Struct>] US7 =
    | US7_0 of f0_0 : bool
    | US7_1 of f1_0 : exn
and [<Struct>] US8 =
    | US8_0 of f0_0 : bool
    | US8_1 of f1_0 : exn
and [<Struct>] US9 =
    | US9_0 of f0_0 : int32
    | US9_1
let rec method1 () : string =
    let v0 : string = "TRACE_LEVEL"
    v0
and method3 () : string =
    let v0 : string = ""
    v0
and closure1 () (v0 : string) : US1 =
    US1_0(v0)
and method4 () : (string -> US1) =
    closure1()
and method2 (v0 : string) : string =
    let v1 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v2 : string = "std::env::var(&*$0)"
    let v3 : Result<std_string_String, std_env_VarError> = Fable.Core.RustInterop.emitRustExpr v0 v2 
    let v4 : string = "true; let _result_map_ = $0.map(|x| { //"
    let v5 : bool = Fable.Core.RustInterop.emitRustExpr v3 v4 
    let v6 : string = "x"
    let v7 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v6 
    let v8 : string = "fable_library_rust::String_::fromString($0)"
    let v9 : string = Fable.Core.RustInterop.emitRustExpr v7 v8 
    let v10 : string = "true; $0 })"
    let v11 : bool = Fable.Core.RustInterop.emitRustExpr v9 v10 
    let v12 : string = "_result_map_"
    let v13 : Result<string, std_env_VarError> = Fable.Core.RustInterop.emitRustExpr () v12 
    let v14 : string = method3()
    let v15 : string = "$0.unwrap_or($1)"
    let v16 : string = Fable.Core.RustInterop.emitRustExpr struct (v13, v14) v15 
    let _v1 = v16 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v17 : string = "std::env::var(&*$0)"
    let v18 : Result<std_string_String, std_env_VarError> = Fable.Core.RustInterop.emitRustExpr v0 v17 
    let v19 : string = "true; let _result_map_ = $0.map(|x| { //"
    let v20 : bool = Fable.Core.RustInterop.emitRustExpr v18 v19 
    let v21 : string = "x"
    let v22 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v21 
    let v23 : string = "fable_library_rust::String_::fromString($0)"
    let v24 : string = Fable.Core.RustInterop.emitRustExpr v22 v23 
    let v25 : string = "true; $0 })"
    let v26 : bool = Fable.Core.RustInterop.emitRustExpr v24 v25 
    let v27 : string = "_result_map_"
    let v28 : Result<string, std_env_VarError> = Fable.Core.RustInterop.emitRustExpr () v27 
    let v29 : string = method3()
    let v30 : string = "$0.unwrap_or($1)"
    let v31 : string = Fable.Core.RustInterop.emitRustExpr struct (v28, v29) v30 
    let _v1 = v31 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v32 : string = "std::env::var(&*$0)"
    let v33 : Result<std_string_String, std_env_VarError> = Fable.Core.RustInterop.emitRustExpr v0 v32 
    let v34 : string = "true; let _result_map_ = $0.map(|x| { //"
    let v35 : bool = Fable.Core.RustInterop.emitRustExpr v33 v34 
    let v36 : string = "x"
    let v37 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v36 
    let v38 : string = "fable_library_rust::String_::fromString($0)"
    let v39 : string = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let v40 : string = "true; $0 })"
    let v41 : bool = Fable.Core.RustInterop.emitRustExpr v39 v40 
    let v42 : string = "_result_map_"
    let v43 : Result<string, std_env_VarError> = Fable.Core.RustInterop.emitRustExpr () v42 
    let v44 : string = method3()
    let v45 : string = "$0.unwrap_or($1)"
    let v46 : string = Fable.Core.RustInterop.emitRustExpr struct (v43, v44) v45 
    let _v1 = v46 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v47 : string = "process.env[$0] ?? \"\""
    let v48 : string = Fable.Core.JsInterop.emitJsExpr v0 v47 
    let _v1 = v48 
    #endif
#if FABLE_COMPILER_PYTHON
    let v49 : string = "os"
    let v50 : IOsEnviron = Fable.Core.PyInterop.importAll v49 
    let v51 : string = "v50.environ"
    let v52 : obj = Fable.Core.PyInterop.emitPyExpr () v51 
    let v55 : string = "v52.get($0)"
    let v56 : string = Fable.Core.PyInterop.emitPyExpr v0 v55 
    let mutable _v56 = None
    #if !FABLE_COMPILER && !WASM && !CONTRACT
    let v59 : (string -> string option) = Option.ofObj
    let v60 : string option = v59 v56
    v60 
    #else
    Some v56 
    #endif
    |> fun x -> _v56 <- Some x
    let v61 : string option = match _v56 with Some x -> x | None -> failwith "optionm'.of_obj / _v56=None"
    let v64 : (string -> US1) = method4()
    let v65 : US1 option = v61 |> Option.map v64 
    let v76 : US1 = US1_1
    let v77 : US1 = v65 |> Option.defaultValue v76 
    let v84 : string =
        match v77 with
        | US1_1 -> (* None *)
            let v82 : string = ""
            v82
        | US1_0(v81) -> (* Some *)
            v81
    let _v1 = v84 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v85 : US2 = US2_1
    let v86 : US3 = US3_0(v85)
    let v87 : string = $"env.get_environment_variable / target: {v86} / var: {v0}"
    let v88 : string = failwith<string> v87
    let _v1 = v88 
    #endif
#else
    let v89 : (string -> string) = System.Environment.GetEnvironmentVariable
    let v90 : string = v89 v0
    let mutable _v90 = None
    #if !FABLE_COMPILER && !WASM && !CONTRACT
    let v91 : (string -> string option) = Option.ofObj
    let v92 : string option = v91 v90
    v92 
    #else
    Some v90 
    #endif
    |> fun x -> _v90 <- Some x
    let v93 : string option = match _v90 with Some x -> x | None -> failwith "optionm'.of_obj / _v90=None"
    let v96 : (string -> US1) = method4()
    let v97 : US1 option = v93 |> Option.map v96 
    let v108 : US1 = US1_1
    let v109 : US1 = v97 |> Option.defaultValue v108 
    let v116 : string =
        match v109 with
        | US1_1 -> (* None *)
            let v114 : string = ""
            v114
        | US1_0(v113) -> (* Some *)
            v113
    let _v1 = v116 
    #endif
    let v117 : string = _v1 
    v117
and method5 () : string =
    let v0 : string = "AUTOMATION"
    v0
and closure2 () (v0 : string) : unit =
    ()
and method0 (v0 : US0) : struct (Mut0 * Mut1 * Mut2 * Mut3 * Mut4 * int64 option) =
    let v1 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v2 : string = method1()
    let v3 : string = method2(v2)
    
    
    
    
    
    let v4 : bool = "Verbose" = v3
    let v8 : US4 =
        if v4 then
            let v5 : US0 = US0_0
            US4_0(v5)
        else
            US4_1
    let v49 : US4 =
        match v8 with
        | US4_1 -> (* None *)
            let v11 : bool = "Debug" = v3
            let v15 : US4 =
                if v11 then
                    let v12 : US0 = US0_1
                    US4_0(v12)
                else
                    US4_1
            match v15 with
            | US4_1 -> (* None *)
                let v18 : bool = "Info" = v3
                let v22 : US4 =
                    if v18 then
                        let v19 : US0 = US0_2
                        US4_0(v19)
                    else
                        US4_1
                match v22 with
                | US4_1 -> (* None *)
                    let v25 : bool = "Warning" = v3
                    let v29 : US4 =
                        if v25 then
                            let v26 : US0 = US0_3
                            US4_0(v26)
                        else
                            US4_1
                    match v29 with
                    | US4_1 -> (* None *)
                        let v32 : bool = "Critical" = v3
                        let v36 : US4 =
                            if v32 then
                                let v33 : US0 = US0_4
                                US4_0(v33)
                            else
                                US4_1
                        match v36 with
                        | US4_1 -> (* None *)
                            US4_1
                        | US4_0(v37) -> (* Some *)
                            US4_0(v37)
                    | US4_0(v30) -> (* Some *)
                        US4_0(v30)
                | US4_0(v23) -> (* Some *)
                    US4_0(v23)
            | US4_0(v16) -> (* Some *)
                US4_0(v16)
        | US4_0(v9) -> (* Some *)
            US4_0(v9)
    let v50 : string = method5()
    let v51 : string = method2(v50)
    let v52 : bool = v51 = "True"
    let v62 : US5 =
        if v52 then
            let v53 : System.DateTime = System.DateTime.Now
            let v56 : (System.DateTime -> int64) = _.Ticks
            let v57 : int64 = v56 v53
            US5_0(v57)
        else
            US5_1
    let _v1 = struct (v49, v62) 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v63 : US4 = US4_1
    let v64 : US5 = US5_1
    let _v1 = struct (v63, v64) 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v65 : string = "AUTOMATION"
    let v66 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v67 : string = "env!(\"" + v65 + "\")"
    let v68 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v67 
    let v69 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v70 : string = "String::from($0)"
    let v71 : std_string_String = Fable.Core.RustInterop.emitRustExpr v68 v70 
    let _v69 = v71 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v72 : string = "String::from($0)"
    let v73 : std_string_String = Fable.Core.RustInterop.emitRustExpr v68 v72 
    let _v69 = v73 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v74 : string = "String::from($0)"
    let v75 : std_string_String = Fable.Core.RustInterop.emitRustExpr v68 v74 
    let _v69 = v75 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v76 : std_string_String = v68 |> unbox<std_string_String>
    let _v69 = v76 
    #endif
#if FABLE_COMPILER_PYTHON
    let v79 : std_string_String = v68 |> unbox<std_string_String>
    let _v69 = v79 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v82 : std_string_String = v68 |> unbox<std_string_String>
    let _v69 = v82 
    #endif
#else
    let v85 : std_string_String = v68 |> unbox<std_string_String>
    let _v69 = v85 
    #endif
    let v88 : std_string_String = _v69 
    let v93 : string = "fable_library_rust::String_::fromString($0)"
    let v94 : string = Fable.Core.RustInterop.emitRustExpr v88 v93 
    let _v66 = v94 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v95 : string = "env!(\"" + v65 + "\")"
    let v96 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v95 
    let v97 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v98 : string = "String::from($0)"
    let v99 : std_string_String = Fable.Core.RustInterop.emitRustExpr v96 v98 
    let _v97 = v99 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v100 : string = "String::from($0)"
    let v101 : std_string_String = Fable.Core.RustInterop.emitRustExpr v96 v100 
    let _v97 = v101 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v102 : string = "String::from($0)"
    let v103 : std_string_String = Fable.Core.RustInterop.emitRustExpr v96 v102 
    let _v97 = v103 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v104 : std_string_String = v96 |> unbox<std_string_String>
    let _v97 = v104 
    #endif
#if FABLE_COMPILER_PYTHON
    let v107 : std_string_String = v96 |> unbox<std_string_String>
    let _v97 = v107 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v110 : std_string_String = v96 |> unbox<std_string_String>
    let _v97 = v110 
    #endif
#else
    let v113 : std_string_String = v96 |> unbox<std_string_String>
    let _v97 = v113 
    #endif
    let v116 : std_string_String = _v97 
    let v121 : string = "fable_library_rust::String_::fromString($0)"
    let v122 : string = Fable.Core.RustInterop.emitRustExpr v116 v121 
    let _v66 = v122 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v123 : string = "env!(\"" + v65 + "\")"
    let v124 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v123 
    let v125 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v126 : string = "String::from($0)"
    let v127 : std_string_String = Fable.Core.RustInterop.emitRustExpr v124 v126 
    let _v125 = v127 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v128 : string = "String::from($0)"
    let v129 : std_string_String = Fable.Core.RustInterop.emitRustExpr v124 v128 
    let _v125 = v129 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v130 : string = "String::from($0)"
    let v131 : std_string_String = Fable.Core.RustInterop.emitRustExpr v124 v130 
    let _v125 = v131 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v132 : std_string_String = v124 |> unbox<std_string_String>
    let _v125 = v132 
    #endif
#if FABLE_COMPILER_PYTHON
    let v135 : std_string_String = v124 |> unbox<std_string_String>
    let _v125 = v135 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v138 : std_string_String = v124 |> unbox<std_string_String>
    let _v125 = v138 
    #endif
#else
    let v141 : std_string_String = v124 |> unbox<std_string_String>
    let _v125 = v141 
    #endif
    let v144 : std_string_String = _v125 
    let v149 : string = "fable_library_rust::String_::fromString($0)"
    let v150 : string = Fable.Core.RustInterop.emitRustExpr v144 v149 
    let _v66 = v150 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v151 : string = null |> unbox<string>
    let _v66 = v151 
    #endif
#if FABLE_COMPILER_PYTHON
    let v154 : string = null |> unbox<string>
    let _v66 = v154 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v157 : string = null |> unbox<string>
    let _v66 = v157 
    #endif
#else
    let v160 : string = null |> unbox<string>
    let _v66 = v160 
    #endif
    let v163 : string = _v66 
    let v168 : string = "True"
    let v169 : bool = v163 <> v168 
    let v178 : US5 =
        if v169 then
            US5_1
        else
            let v173 : string = $"near_sdk::env::block_timestamp()"
            let v174 : uint64 = Fable.Core.RustInterop.emitRustExpr () v173 
            let v175 : (uint64 -> int64) = int64
            let v176 : int64 = v175 v174
            US5_0(v176)
    let v179 : US4 = US4_1
    let _v1 = struct (v179, v178) 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v180 : string = method1()
    let v181 : string = method2(v180)
    
    
    
    
    
    let v182 : bool = "Verbose" = v181
    let v186 : US4 =
        if v182 then
            let v183 : US0 = US0_0
            US4_0(v183)
        else
            US4_1
    let v227 : US4 =
        match v186 with
        | US4_1 -> (* None *)
            let v189 : bool = "Debug" = v181
            let v193 : US4 =
                if v189 then
                    let v190 : US0 = US0_1
                    US4_0(v190)
                else
                    US4_1
            match v193 with
            | US4_1 -> (* None *)
                let v196 : bool = "Info" = v181
                let v200 : US4 =
                    if v196 then
                        let v197 : US0 = US0_2
                        US4_0(v197)
                    else
                        US4_1
                match v200 with
                | US4_1 -> (* None *)
                    let v203 : bool = "Warning" = v181
                    let v207 : US4 =
                        if v203 then
                            let v204 : US0 = US0_3
                            US4_0(v204)
                        else
                            US4_1
                    match v207 with
                    | US4_1 -> (* None *)
                        let v210 : bool = "Critical" = v181
                        let v214 : US4 =
                            if v210 then
                                let v211 : US0 = US0_4
                                US4_0(v211)
                            else
                                US4_1
                        match v214 with
                        | US4_1 -> (* None *)
                            US4_1
                        | US4_0(v215) -> (* Some *)
                            US4_0(v215)
                    | US4_0(v208) -> (* Some *)
                        US4_0(v208)
                | US4_0(v201) -> (* Some *)
                    US4_0(v201)
            | US4_0(v194) -> (* Some *)
                US4_0(v194)
        | US4_0(v187) -> (* Some *)
            US4_0(v187)
    let v228 : string = method5()
    let v229 : string = method2(v228)
    let v230 : bool = v229 = "True"
    let v240 : US5 =
        if v230 then
            let v231 : System.DateTime = System.DateTime.Now
            let v234 : (System.DateTime -> int64) = _.Ticks
            let v235 : int64 = v234 v231
            US5_0(v235)
        else
            US5_1
    let _v1 = struct (v227, v240) 
    #endif
#if FABLE_COMPILER_PYTHON
    let v241 : string = method1()
    let v242 : string = method2(v241)
    
    
    
    
    
    let v243 : bool = "Verbose" = v242
    let v247 : US4 =
        if v243 then
            let v244 : US0 = US0_0
            US4_0(v244)
        else
            US4_1
    let v288 : US4 =
        match v247 with
        | US4_1 -> (* None *)
            let v250 : bool = "Debug" = v242
            let v254 : US4 =
                if v250 then
                    let v251 : US0 = US0_1
                    US4_0(v251)
                else
                    US4_1
            match v254 with
            | US4_1 -> (* None *)
                let v257 : bool = "Info" = v242
                let v261 : US4 =
                    if v257 then
                        let v258 : US0 = US0_2
                        US4_0(v258)
                    else
                        US4_1
                match v261 with
                | US4_1 -> (* None *)
                    let v264 : bool = "Warning" = v242
                    let v268 : US4 =
                        if v264 then
                            let v265 : US0 = US0_3
                            US4_0(v265)
                        else
                            US4_1
                    match v268 with
                    | US4_1 -> (* None *)
                        let v271 : bool = "Critical" = v242
                        let v275 : US4 =
                            if v271 then
                                let v272 : US0 = US0_4
                                US4_0(v272)
                            else
                                US4_1
                        match v275 with
                        | US4_1 -> (* None *)
                            US4_1
                        | US4_0(v276) -> (* Some *)
                            US4_0(v276)
                    | US4_0(v269) -> (* Some *)
                        US4_0(v269)
                | US4_0(v262) -> (* Some *)
                    US4_0(v262)
            | US4_0(v255) -> (* Some *)
                US4_0(v255)
        | US4_0(v248) -> (* Some *)
            US4_0(v248)
    let v289 : string = method5()
    let v290 : string = method2(v289)
    let v291 : bool = v290 = "True"
    let v301 : US5 =
        if v291 then
            let v292 : System.DateTime = System.DateTime.Now
            let v295 : (System.DateTime -> int64) = _.Ticks
            let v296 : int64 = v295 v292
            US5_0(v296)
        else
            US5_1
    let _v1 = struct (v288, v301) 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v302 : string = method1()
    let v303 : string = method2(v302)
    
    
    
    
    
    let v304 : bool = "Verbose" = v303
    let v308 : US4 =
        if v304 then
            let v305 : US0 = US0_0
            US4_0(v305)
        else
            US4_1
    let v349 : US4 =
        match v308 with
        | US4_1 -> (* None *)
            let v311 : bool = "Debug" = v303
            let v315 : US4 =
                if v311 then
                    let v312 : US0 = US0_1
                    US4_0(v312)
                else
                    US4_1
            match v315 with
            | US4_1 -> (* None *)
                let v318 : bool = "Info" = v303
                let v322 : US4 =
                    if v318 then
                        let v319 : US0 = US0_2
                        US4_0(v319)
                    else
                        US4_1
                match v322 with
                | US4_1 -> (* None *)
                    let v325 : bool = "Warning" = v303
                    let v329 : US4 =
                        if v325 then
                            let v326 : US0 = US0_3
                            US4_0(v326)
                        else
                            US4_1
                    match v329 with
                    | US4_1 -> (* None *)
                        let v332 : bool = "Critical" = v303
                        let v336 : US4 =
                            if v332 then
                                let v333 : US0 = US0_4
                                US4_0(v333)
                            else
                                US4_1
                        match v336 with
                        | US4_1 -> (* None *)
                            US4_1
                        | US4_0(v337) -> (* Some *)
                            US4_0(v337)
                    | US4_0(v330) -> (* Some *)
                        US4_0(v330)
                | US4_0(v323) -> (* Some *)
                    US4_0(v323)
            | US4_0(v316) -> (* Some *)
                US4_0(v316)
        | US4_0(v309) -> (* Some *)
            US4_0(v309)
    let v350 : string = method5()
    let v351 : string = method2(v350)
    let v352 : bool = v351 = "True"
    let v362 : US5 =
        if v352 then
            let v353 : System.DateTime = System.DateTime.Now
            let v356 : (System.DateTime -> int64) = _.Ticks
            let v357 : int64 = v356 v353
            US5_0(v357)
        else
            US5_1
    let _v1 = struct (v349, v362) 
    #endif
#else
    let v363 : string = method1()
    let v364 : string = method2(v363)
    
    
    
    
    
    let v365 : bool = "Verbose" = v364
    let v369 : US4 =
        if v365 then
            let v366 : US0 = US0_0
            US4_0(v366)
        else
            US4_1
    let v410 : US4 =
        match v369 with
        | US4_1 -> (* None *)
            let v372 : bool = "Debug" = v364
            let v376 : US4 =
                if v372 then
                    let v373 : US0 = US0_1
                    US4_0(v373)
                else
                    US4_1
            match v376 with
            | US4_1 -> (* None *)
                let v379 : bool = "Info" = v364
                let v383 : US4 =
                    if v379 then
                        let v380 : US0 = US0_2
                        US4_0(v380)
                    else
                        US4_1
                match v383 with
                | US4_1 -> (* None *)
                    let v386 : bool = "Warning" = v364
                    let v390 : US4 =
                        if v386 then
                            let v387 : US0 = US0_3
                            US4_0(v387)
                        else
                            US4_1
                    match v390 with
                    | US4_1 -> (* None *)
                        let v393 : bool = "Critical" = v364
                        let v397 : US4 =
                            if v393 then
                                let v394 : US0 = US0_4
                                US4_0(v394)
                            else
                                US4_1
                        match v397 with
                        | US4_1 -> (* None *)
                            US4_1
                        | US4_0(v398) -> (* Some *)
                            US4_0(v398)
                    | US4_0(v391) -> (* Some *)
                        US4_0(v391)
                | US4_0(v384) -> (* Some *)
                    US4_0(v384)
            | US4_0(v377) -> (* Some *)
                US4_0(v377)
        | US4_0(v370) -> (* Some *)
            US4_0(v370)
    let v411 : string = method5()
    let v412 : string = method2(v411)
    let v413 : bool = v412 = "True"
    let v423 : US5 =
        if v413 then
            let v414 : System.DateTime = System.DateTime.Now
            let v417 : (System.DateTime -> int64) = _.Ticks
            let v418 : int64 = v417 v414
            US5_0(v418)
        else
            US5_1
    let _v1 = struct (v410, v423) 
    #endif
    let struct (v424 : US4, v425 : US5) = _v1 
    let v489 : Mut0 = {l0 = 1L} : Mut0
    let v490 : (string -> unit) = closure2()
    let v491 : Mut1 = {l0 = v490} : Mut1
    let v492 : Mut2 = {l0 = true} : Mut2
    let v493 : string = ""
    let v494 : Mut3 = {l0 = v493} : Mut3
    let v497 : US0 =
        match v424 with
        | US4_1 -> (* None *)
            v0
        | US4_0(v495) -> (* Some *)
            v495
    let v498 : Mut4 = {l0 = v497} : Mut4
    let v505 : int64 option =
        match v425 with
        | US5_1 -> (* None *)
            let v503 : int64 option = None
            v503
        | US5_0(v499) -> (* Some *)
            let v500 : int64 option = Some v499 
            v500
    struct (v489, v491, v492, v494, v498, v505)
and closure0 () () : unit =
    let v0 : bool = TraceState.trace_state.IsNone
    if v0 then
        let v1 : US0 = US0_0
        let struct (v2 : Mut0, v3 : Mut1, v4 : Mut2, v5 : Mut3, v6 : Mut4, v7 : int64 option) = method0(v1)
        let v8 : struct (Mut0 * Mut1 * Mut2 * Mut3 * Mut4 * int64 option) option = Some struct (v2, v3, v4, v5, v6, v7) 
        TraceState.trace_state <- v8 
        ()
and method6 (v0 : US0) : bool =
    let v1 : unit = ()
    let v2 : (unit -> unit) = closure0()
    let v3 : unit = (fun () -> v2 (); v1) ()
    let struct (v17 : Mut0, v18 : Mut1, v19 : Mut2, v20 : Mut3, v21 : Mut4, v22 : int64 option) = TraceState.trace_state.Value
    let v35 : US0 = v21.l0
    let v36 : bool = v19.l0
    let v37 : bool = v36 = false
    if v37 then
        false
    else
        let v38 : int32 = [ US0_0, 0; US0_1, 1; US0_2, 2; US0_3, 3; US0_4, 4 ] |> Map |> Map.find v0
        let v39 : int32 = [ US0_0, 0; US0_1, 1; US0_2, 2; US0_3, 3; US0_4, 4 ] |> Map |> Map.find v35
        let v40 : bool = v38 >= v39
        v40
and closure6 () (v0 : int64) : US5 =
    US5_0(v0)
and method8 () : (int64 -> US5) =
    closure6()
and method9 () : string =
    let v0 : string = "hh:mm:ss"
    v0
and method10 () : string =
    let v0 : string = "HH:mm:ss"
    v0
and method7 (v0 : Mut0, v1 : Mut1, v2 : Mut2, v3 : Mut3, v4 : Mut4, v5 : int64 option) : string =
    let v6 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v7 : (int64 -> US5) = method8()
    let v8 : US5 option = v5 |> Option.map v7 
    let v19 : US5 = US5_1
    let v20 : US5 = v8 |> Option.defaultValue v19 
    let v60 : System.DateTime =
        match v20 with
        | US5_1 -> (* None *)
            let v56 : System.DateTime = System.DateTime.Now
            v56
        | US5_0(v24) -> (* Some *)
            let v25 : System.DateTime = System.DateTime.Now
            let v28 : (System.DateTime -> int64) = _.Ticks
            let v29 : int64 = v28 v25
            let v32 : int64 = v29 - v24
            let v33 : (int64 -> System.TimeSpan) = System.TimeSpan 
            let v34 : System.TimeSpan = v33 v32
            let v37 : (System.TimeSpan -> int32) = _.Hours
            let v38 : int32 = v37 v34
            let v41 : (System.TimeSpan -> int32) = _.Minutes
            let v42 : int32 = v41 v34
            let v45 : (System.TimeSpan -> int32) = _.Seconds
            let v46 : int32 = v45 v34
            let v49 : (System.TimeSpan -> int32) = _.Milliseconds
            let v50 : int32 = v49 v34
            let v53 : System.DateTime = System.DateTime (1, 1, 1, v38, v42, v46, v50)
            v53
    let v61 : string = method9()
    let v64 : (string -> string) = v60.ToString
    let v65 : string = v64 v61
    let _v6 = v65 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v68 : (int64 -> US5) = method8()
    let v69 : US5 option = v5 |> Option.map v68 
    let v80 : US5 = US5_1
    let v81 : US5 = v69 |> Option.defaultValue v80 
    let v121 : System.DateTime =
        match v81 with
        | US5_1 -> (* None *)
            let v117 : System.DateTime = System.DateTime.Now
            v117
        | US5_0(v85) -> (* Some *)
            let v86 : System.DateTime = System.DateTime.Now
            let v89 : (System.DateTime -> int64) = _.Ticks
            let v90 : int64 = v89 v86
            let v93 : int64 = v90 - v85
            let v94 : (int64 -> System.TimeSpan) = System.TimeSpan 
            let v95 : System.TimeSpan = v94 v93
            let v98 : (System.TimeSpan -> int32) = _.Hours
            let v99 : int32 = v98 v95
            let v102 : (System.TimeSpan -> int32) = _.Minutes
            let v103 : int32 = v102 v95
            let v106 : (System.TimeSpan -> int32) = _.Seconds
            let v107 : int32 = v106 v95
            let v110 : (System.TimeSpan -> int32) = _.Milliseconds
            let v111 : int32 = v110 v95
            let v114 : System.DateTime = System.DateTime (1, 1, 1, v99, v103, v107, v111)
            v114
    let v122 : string = method9()
    let v125 : (string -> string) = v121.ToString
    let v126 : string = v125 v122
    let _v6 = v126 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v129 : string = $"near_sdk::env::block_timestamp()"
    let v130 : uint64 = Fable.Core.RustInterop.emitRustExpr () v129 
    let v131 : (int64 -> US5) = method8()
    let v132 : US5 option = v5 |> Option.map v131 
    let v143 : US5 = US5_1
    let v144 : US5 = v132 |> Option.defaultValue v143 
    let v153 : uint64 =
        match v144 with
        | US5_1 -> (* None *)
            v130
        | US5_0(v148) -> (* Some *)
            let v149 : (int64 -> uint64) = uint64
            let v150 : uint64 = v149 v148
            let v151 : uint64 = v130 - v150
            v151
    let v154 : uint64 = v153 / 1000000000UL
    let v155 : uint64 = v154 % 60UL
    let v156 : uint64 = v154 / 60UL
    let v157 : uint64 = v156 % 60UL
    let v158 : uint64 = v154 / 3600UL
    let v159 : uint64 = v158 % 24UL
    let v160 : string = $"format!(\"{{:02}}:{{:02}}:{{:02}}\", $0, $1, $2)"
    let v161 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v159, v157, v155) v160 
    let v162 : string = "fable_library_rust::String_::fromString($0)"
    let v163 : string = Fable.Core.RustInterop.emitRustExpr v161 v162 
    let _v6 = v163 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v164 : (int64 -> US5) = method8()
    let v165 : US5 option = v5 |> Option.map v164 
    let v176 : US5 = US5_1
    let v177 : US5 = v165 |> Option.defaultValue v176 
    let v217 : System.DateTime =
        match v177 with
        | US5_1 -> (* None *)
            let v213 : System.DateTime = System.DateTime.Now
            v213
        | US5_0(v181) -> (* Some *)
            let v182 : System.DateTime = System.DateTime.Now
            let v185 : (System.DateTime -> int64) = _.Ticks
            let v186 : int64 = v185 v182
            let v189 : int64 = v186 - v181
            let v190 : (int64 -> System.TimeSpan) = System.TimeSpan 
            let v191 : System.TimeSpan = v190 v189
            let v194 : (System.TimeSpan -> int32) = _.Hours
            let v195 : int32 = v194 v191
            let v198 : (System.TimeSpan -> int32) = _.Minutes
            let v199 : int32 = v198 v191
            let v202 : (System.TimeSpan -> int32) = _.Seconds
            let v203 : int32 = v202 v191
            let v206 : (System.TimeSpan -> int32) = _.Milliseconds
            let v207 : int32 = v206 v191
            let v210 : System.DateTime = System.DateTime (1, 1, 1, v195, v199, v203, v207)
            v210
    let v218 : string = method10()
    let v221 : (string -> string) = v217.ToString
    let v222 : string = v221 v218
    let _v6 = v222 
    #endif
#if FABLE_COMPILER_PYTHON
    let v225 : (int64 -> US5) = method8()
    let v226 : US5 option = v5 |> Option.map v225 
    let v237 : US5 = US5_1
    let v238 : US5 = v226 |> Option.defaultValue v237 
    let v278 : System.DateTime =
        match v238 with
        | US5_1 -> (* None *)
            let v274 : System.DateTime = System.DateTime.Now
            v274
        | US5_0(v242) -> (* Some *)
            let v243 : System.DateTime = System.DateTime.Now
            let v246 : (System.DateTime -> int64) = _.Ticks
            let v247 : int64 = v246 v243
            let v250 : int64 = v247 - v242
            let v251 : (int64 -> System.TimeSpan) = System.TimeSpan 
            let v252 : System.TimeSpan = v251 v250
            let v255 : (System.TimeSpan -> int32) = _.Hours
            let v256 : int32 = v255 v252
            let v259 : (System.TimeSpan -> int32) = _.Minutes
            let v260 : int32 = v259 v252
            let v263 : (System.TimeSpan -> int32) = _.Seconds
            let v264 : int32 = v263 v252
            let v267 : (System.TimeSpan -> int32) = _.Milliseconds
            let v268 : int32 = v267 v252
            let v271 : System.DateTime = System.DateTime (1, 1, 1, v256, v260, v264, v268)
            v271
    let v279 : string = method10()
    let v282 : (string -> string) = v278.ToString
    let v283 : string = v282 v279
    let _v6 = v283 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v286 : (int64 -> US5) = method8()
    let v287 : US5 option = v5 |> Option.map v286 
    let v298 : US5 = US5_1
    let v299 : US5 = v287 |> Option.defaultValue v298 
    let v339 : System.DateTime =
        match v299 with
        | US5_1 -> (* None *)
            let v335 : System.DateTime = System.DateTime.Now
            v335
        | US5_0(v303) -> (* Some *)
            let v304 : System.DateTime = System.DateTime.Now
            let v307 : (System.DateTime -> int64) = _.Ticks
            let v308 : int64 = v307 v304
            let v311 : int64 = v308 - v303
            let v312 : (int64 -> System.TimeSpan) = System.TimeSpan 
            let v313 : System.TimeSpan = v312 v311
            let v316 : (System.TimeSpan -> int32) = _.Hours
            let v317 : int32 = v316 v313
            let v320 : (System.TimeSpan -> int32) = _.Minutes
            let v321 : int32 = v320 v313
            let v324 : (System.TimeSpan -> int32) = _.Seconds
            let v325 : int32 = v324 v313
            let v328 : (System.TimeSpan -> int32) = _.Milliseconds
            let v329 : int32 = v328 v313
            let v332 : System.DateTime = System.DateTime (1, 1, 1, v317, v321, v325, v329)
            v332
    let v340 : string = method10()
    let v343 : (string -> string) = v339.ToString
    let v344 : string = v343 v340
    let _v6 = v344 
    #endif
#else
    let v347 : (int64 -> US5) = method8()
    let v348 : US5 option = v5 |> Option.map v347 
    let v359 : US5 = US5_1
    let v360 : US5 = v348 |> Option.defaultValue v359 
    let v400 : System.DateTime =
        match v360 with
        | US5_1 -> (* None *)
            let v396 : System.DateTime = System.DateTime.Now
            v396
        | US5_0(v364) -> (* Some *)
            let v365 : System.DateTime = System.DateTime.Now
            let v368 : (System.DateTime -> int64) = _.Ticks
            let v369 : int64 = v368 v365
            let v372 : int64 = v369 - v364
            let v373 : (int64 -> System.TimeSpan) = System.TimeSpan 
            let v374 : System.TimeSpan = v373 v372
            let v377 : (System.TimeSpan -> int32) = _.Hours
            let v378 : int32 = v377 v374
            let v381 : (System.TimeSpan -> int32) = _.Minutes
            let v382 : int32 = v381 v374
            let v385 : (System.TimeSpan -> int32) = _.Seconds
            let v386 : int32 = v385 v374
            let v389 : (System.TimeSpan -> int32) = _.Milliseconds
            let v390 : int32 = v389 v374
            let v393 : System.DateTime = System.DateTime (1, 1, 1, v378, v382, v386, v390)
            v393
    let v401 : string = method10()
    let v404 : (string -> string) = v400.ToString
    let v405 : string = v404 v401
    let _v6 = v405 
    #endif
    let v408 : string = _v6 
    v408
and method13 () : string =
    let v0 : string = ""
    v0
and closure7 (v0 : Mut3, v1 : string) () : unit =
    let v2 : string = v0.l0
    let v3 : string = v2 + v1 
    v0.l0 <- v3
    ()
and method12 (v0 : char) : string =
    let v1 : string = method13()
    let v2 : Mut3 = {l0 = v1} : Mut3
    let v3 : string = $"{v0}"
    let v6 : unit = ()
    let v7 : (unit -> unit) = closure7(v2, v3)
    let v8 : unit = (fun () -> v7 (); v6) ()
    let v11 : string = v2.l0
    v11
and method14 () : string =
    let v0 : string = "\u001b[0m"
    v0
and method11 () : string =
    
    
    
    
    
    let v0 : string = "Verbose"
    let v1 : (unit -> string) = v0.ToLower
    let v2 : string = v1 ()
    let v5 : char = v2.[int 0]
    let v6 : string = method12(v5)
    let v7 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v8 : string = "inline_colorization::color_bright_black"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v11 
    let _v10 = v12 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v13 : string = "&*$0"
    let v14 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v13 
    let _v10 = v14 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v15 : string = "&*$0"
    let v16 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v15 
    let _v10 = v16 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v10 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v20 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v10 = v20 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v23 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v10 = v23 
    #endif
#else
    let v26 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v10 = v26 
    #endif
    let v29 : Ref<Str> = _v10 
    let v34 : string = "inline_colorization::color_reset"
    let v35 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : string = $"format!(\"{{}}{{}}{{}}\", $0, $1, $2)"
    let v37 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v9, v29, v35) v36 
    let v38 : string = "fable_library_rust::String_::fromString($0)"
    let v39 : string = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let _v7 = v39 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v40 : string = "inline_colorization::color_bright_black"
    let v41 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "&*$0"
    let v44 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v43 
    let _v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "&*$0"
    let v46 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v45 
    let _v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "&*$0"
    let v48 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v47 
    let _v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v42 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v52 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v42 = v52 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v42 = v55 
    #endif
#else
    let v58 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v42 = v58 
    #endif
    let v61 : Ref<Str> = _v42 
    let v66 : string = "inline_colorization::color_reset"
    let v67 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v66 
    let v68 : string = $"format!(\"{{}}{{}}{{}}\", $0, $1, $2)"
    let v69 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v41, v61, v67) v68 
    let v70 : string = "fable_library_rust::String_::fromString($0)"
    let v71 : string = Fable.Core.RustInterop.emitRustExpr v69 v70 
    let _v7 = v71 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v72 : string = "inline_colorization::color_bright_black"
    let v73 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v72 
    let v74 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v75 : string = "&*$0"
    let v76 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v75 
    let _v74 = v76 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v77 : string = "&*$0"
    let v78 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v77 
    let _v74 = v78 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v79 : string = "&*$0"
    let v80 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v79 
    let _v74 = v80 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v81 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v74 = v81 
    #endif
#if FABLE_COMPILER_PYTHON
    let v84 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v74 = v84 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v87 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v74 = v87 
    #endif
#else
    let v90 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v74 = v90 
    #endif
    let v93 : Ref<Str> = _v74 
    let v98 : string = "inline_colorization::color_reset"
    let v99 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v98 
    let v100 : string = $"format!(\"{{}}{{}}{{}}\", $0, $1, $2)"
    let v101 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v73, v93, v99) v100 
    let v102 : string = "fable_library_rust::String_::fromString($0)"
    let v103 : string = Fable.Core.RustInterop.emitRustExpr v101 v102 
    let _v7 = v103 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v104 : string = "\u001b[90m"
    let v105 : string = method14()
    let v106 : string = v104 + v6 
    let v107 : string = v106 + v105 
    let _v7 = v107 
    #endif
#if FABLE_COMPILER_PYTHON
    let v108 : string = "\u001b[90m"
    let v109 : string = method14()
    let v110 : string = v108 + v6 
    let v111 : string = v110 + v109 
    let _v7 = v111 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v112 : string = "\u001b[90m"
    let v113 : string = method14()
    let v114 : string = v112 + v6 
    let v115 : string = v114 + v113 
    let _v7 = v115 
    #endif
#else
    let v116 : string = "\u001b[90m"
    let v117 : string = method14()
    let v118 : string = v116 + v6 
    let v119 : string = v118 + v117 
    let _v7 = v119 
    #endif
    let v120 : string = _v7 
    v120
and method16 (v0 : int32, v1 : string) : string =
    let v2 : string = method13()
    let v3 : Mut3 = {l0 = v2} : Mut3
    let v4 : string = "{ "
    let v5 : string = $"{v4}"
    let v8 : unit = ()
    let v9 : (unit -> unit) = closure7(v3, v5)
    let v10 : unit = (fun () -> v9 (); v8) ()
    let v13 : string = "port"
    let v14 : string = $"{v13}"
    let v17 : unit = ()
    let v18 : (unit -> unit) = closure7(v3, v14)
    let v19 : unit = (fun () -> v18 (); v17) ()
    let v22 : string = " = "
    let v23 : string = $"{v22}"
    let v26 : unit = ()
    let v27 : (unit -> unit) = closure7(v3, v23)
    let v28 : unit = (fun () -> v27 (); v26) ()
    let v31 : string = $"{v0}"
    let v34 : unit = ()
    let v35 : (unit -> unit) = closure7(v3, v31)
    let v36 : unit = (fun () -> v35 (); v34) ()
    let v39 : string = "; "
    let v40 : string = $"{v39}"
    let v43 : unit = ()
    let v44 : (unit -> unit) = closure7(v3, v40)
    let v45 : unit = (fun () -> v44 (); v43) ()
    let v48 : string = "ex"
    let v49 : string = $"{v48}"
    let v52 : unit = ()
    let v53 : (unit -> unit) = closure7(v3, v49)
    let v54 : unit = (fun () -> v53 (); v52) ()
    let v57 : string = $"{v22}"
    let v60 : unit = ()
    let v61 : (unit -> unit) = closure7(v3, v57)
    let v62 : unit = (fun () -> v61 (); v60) ()
    let v65 : string = $"{v1}"
    let v68 : unit = ()
    let v69 : (unit -> unit) = closure7(v3, v65)
    let v70 : unit = (fun () -> v69 (); v68) ()
    let v73 : string = " }"
    let v74 : string = $"{v73}"
    let v77 : unit = ()
    let v78 : (unit -> unit) = closure7(v3, v74)
    let v79 : unit = (fun () -> v78 (); v77) ()
    let v82 : string = v3.l0
    v82
and method17 (v0 : string) : string =
    let v1 : char list = []
    let v2 : (char list -> (char [])) = List.toArray
    let v3 : (char []) = v2 v1
    let v6 : string = v0.TrimStart v3 
    let v24 : char list = []
    let v25 : char list = '/' :: v24 
    let v28 : char list = ' ' :: v25 
    let v31 : (char list -> (char [])) = List.toArray
    let v32 : (char []) = v31 v28
    let v35 : string = v6.TrimEnd v32 
    v35
and method15 (v0 : Mut0, v1 : Mut1, v2 : Mut2, v3 : Mut3, v4 : Mut4, v5 : int64 option, v6 : string, v7 : string, v8 : int32, v9 : string) : string =
    let v10 : string = method16(v8, v9)
    let v11 : int64 = v0.l0
    let v12 : string = "networking.test_port_open"
    let v13 : string = $"{v6} {v7} #{v11} %s{v12} / {v10}"
    method17(v13)
and closure8 (v0 : Mut0) () : unit =
    let v1 : int64 = v0.l0
    let v2 : int64 = v1 + 1L
    v0.l0 <- v2
    ()
and closure10 (v0 : string) () : unit =
    let v1 : (string -> unit) = System.Console.WriteLine
    v1 v0
and closure9 () (v0 : string) : unit =
    let v1 : unit = ()
    let v2 : (unit -> unit) = closure10(v0)
    let v3 : unit = (fun () -> v2 (); v1) ()
    ()
and method18 (v0 : string) : unit =
    let v1 : unit = ()
    let v2 : (unit -> unit) = closure0()
    let v3 : unit = (fun () -> v2 (); v1) ()
    let struct (v17 : Mut0, v18 : Mut1, v19 : Mut2, v20 : Mut3, v21 : Mut4, v22 : int64 option) = TraceState.trace_state.Value
    let v35 : unit = ()
    let v36 : (unit -> unit) = closure8(v17)
    let v37 : unit = (fun () -> v36 (); v35) ()
    let v40 : (string -> unit) = closure9()
    let v41 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v42 : string = @"println!(""{}"", $0)"
    Fable.Core.RustInterop.emitRustExpr v0 v42 
    let _v41 = () 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v43 : string = @"println!(""{}"", $0)"
    Fable.Core.RustInterop.emitRustExpr v0 v43 
    let _v41 = () 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v44 : string = v20.l0
    let v45 : bool = v44 = ""
    let v53 : string =
        if v45 then
            v0
        else
            let v46 : bool = v0 = ""
            if v46 then
                let v47 : string = v20.l0
                v47
            else
                let v48 : string = v20.l0
                let v49 : string = "\n"
                let v50 : string = v48 + v49 
                let v51 : string = v50 + v0 
                v51
    let v54 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v55 : string = "&*$0"
    let v56 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v53 v55 
    let _v54 = v56 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v57 : string = "&*$0"
    let v58 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v53 v57 
    let _v54 = v58 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v59 : string = "&*$0"
    let v60 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v53 v59 
    let _v54 = v60 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v61 : Ref<Str> = v53 |> unbox<Ref<Str>>
    let _v54 = v61 
    #endif
#if FABLE_COMPILER_PYTHON
    let v64 : Ref<Str> = v53 |> unbox<Ref<Str>>
    let _v54 = v64 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v67 : Ref<Str> = v53 |> unbox<Ref<Str>>
    let _v54 = v67 
    #endif
#else
    let v70 : Ref<Str> = v53 |> unbox<Ref<Str>>
    let _v54 = v70 
    #endif
    let v73 : Ref<Str> = _v54 
    let v78 : string = $"$0.chars()"
    let v79 : Mut<_> = Fable.Core.RustInterop.emitRustExpr v73 v78 
    let v80 : string = "$0"
    let v81 : _ = Fable.Core.RustInterop.emitRustExpr v79 v80 
    let v82 : string = "$0.collect::<Vec<_>>()"
    let v83 : Vec<char> = Fable.Core.RustInterop.emitRustExpr v81 v82 
    let v84 : string = "$0.chunks(15000).map(|x| x.into_iter().map(|x| x.clone()).collect::<Vec<_>>()).collect::<Vec<_>>()"
    let v85 : Vec<Vec<char>> = Fable.Core.RustInterop.emitRustExpr v83 v84 
    let v86 : string = "true; let _vec_map : Vec<_> = $0.into_iter().map(|x| { //"
    let v87 : bool = Fable.Core.RustInterop.emitRustExpr v85 v86 
    let v88 : string = "x"
    let v89 : Vec<char> = Fable.Core.RustInterop.emitRustExpr () v88 
    let v90 : string = "String::from_iter($0)"
    let v91 : std_string_String = Fable.Core.RustInterop.emitRustExpr v89 v90 
    let v92 : string = "true; $0 }).collect::<Vec<_>>()"
    let v93 : bool = Fable.Core.RustInterop.emitRustExpr v91 v92 
    let v94 : string = "_vec_map"
    let v95 : Vec<std_string_String> = Fable.Core.RustInterop.emitRustExpr () v94 
    let v96 : string = "$0.len()"
    let v97 : unativeint = Fable.Core.RustInterop.emitRustExpr v95 v96 
    let v98 : (unativeint -> int32) = int32
    let v99 : int32 = v98 v97
    let v100 : string = ""
    let v101 : bool = v0 <> v100 
    let v105 : bool =
        if v101 then
            let v104 : bool = v99 <= 1
            v104
        else
            false
    if v105 then
        v20.l0 <- v53
        ()
    else
        v20.l0 <- v100
        let v106 : string = "true; $0.into_iter().for_each(|x| { //"
        let v107 : bool = Fable.Core.RustInterop.emitRustExpr v95 v106 
        let v108 : string = "x"
        let v109 : std_string_String = Fable.Core.RustInterop.emitRustExpr () v108 
        let v110 : string = $"true; near_sdk::log!(\"{{}}\", $0)"
        let v111 : bool = Fable.Core.RustInterop.emitRustExpr v109 v110 
        let v112 : string = $"true"
        let v113 : bool = Fable.Core.RustInterop.emitRustExpr () v112 
        let v114 : string = "true; }); //"
        let v115 : bool = Fable.Core.RustInterop.emitRustExpr () v114 
        ()
    let _v41 = () 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    v40 v0
    let _v41 = () 
    #endif
#if FABLE_COMPILER_PYTHON
    v40 v0
    let _v41 = () 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    v40 v0
    let _v41 = () 
    #endif
#else
    v40 v0
    let _v41 = () 
    #endif
    _v41 
    let v116 : (string -> unit) = v18.l0
    v116 v0
and closure5 (v0 : int32, v1 : string) () : unit =
    let v2 : US0 = US0_0
    let v3 : bool = method6(v2)
    if v3 then
        let v4 : unit = ()
        let v5 : (unit -> unit) = closure0()
        let v6 : unit = (fun () -> v5 (); v4) ()
        let struct (v20 : Mut0, v21 : Mut1, v22 : Mut2, v23 : Mut3, v24 : Mut4, v25 : int64 option) = TraceState.trace_state.Value
        let v38 : string = method7(v20, v21, v22, v23, v24, v25)
        let v39 : string = method11()
        let v40 : string = method15(v20, v21, v22, v23, v24, v25, v38, v39, v0, v1)
        method18(v40)
and closure4 (v0 : string) (v1 : int32) : Async<bool> =
    let v2 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v3 : Async<bool> = null |> unbox<Async<bool>>
    let _v2 = v3 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v6 : Async<bool> = null |> unbox<Async<bool>>
    let _v2 = v6 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v9 : Async<bool> = null |> unbox<Async<bool>>
    let _v2 = v9 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v12 : Async<bool> = null |> unbox<Async<bool>>
    let _v2 = v12 
    #endif
#if FABLE_COMPILER_PYTHON
    let v15 : Async<bool> = null |> unbox<Async<bool>>
    let _v2 = v15 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v18 : unit = ()
    let _v18 =
        async {
            let v19 : Async<System.Threading.CancellationToken> = Async.CancellationToken
            let! v19 = v19 
            let v20 : System.Threading.CancellationToken = v19 
            let v21 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
            use v21 = v21 
            let v22 : System.Net.Sockets.TcpClient = v21 
            try
            let v23 : System.Threading.Tasks.ValueTask = v22.ConnectAsync (v0, v1, v20)
            let v24 : (unit -> System.Threading.Tasks.Task) = v23.AsTask
            let v25 : System.Threading.Tasks.Task = v24 ()
            let v26 : unit = ()
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v27 : Async<unit> = null |> unbox<Async<unit>>
            let _v26 = v27 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v30 : Async<unit> = null |> unbox<Async<unit>>
            let _v26 = v30 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v33 : Async<unit> = null |> unbox<Async<unit>>
            let _v26 = v33 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v36 : Async<unit> = null |> unbox<Async<unit>>
            let _v26 = v36 
            #endif
#if FABLE_COMPILER_PYTHON
            let v39 : Async<unit> = null |> unbox<Async<unit>>
            let _v26 = v39 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v42 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
            let v43 : Async<unit> = v42 v25
            let _v26 = v43 
            #endif
#else
            let v44 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
            let v45 : Async<unit> = v44 v25
            let _v26 = v45 
            #endif
            let v46 : Async<unit> = _v26 
            do! v46 
            return true 
            with ex ->
                let v51 : exn = ex
                let v52 : unit = ()
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v53 : string = $"%A{v51}"
                let _v52 = v53 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v56 : string = $"%A{v51}"
                let _v52 = v56 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v59 : string = $"%A{v51}"
                let _v52 = v59 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v62 : string = $"%A{v51}"
                let _v52 = v62 
                #endif
#if FABLE_COMPILER_PYTHON
                let v65 : string = $"%A{v51}"
                let _v52 = v65 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v68 : string = $"%A{v51}"
                let _v52 = v68 
                #endif
#else
                let v71 : string = $"{v51.GetType ()}: {v51.Message}"
                let _v52 = v71 
                #endif
                let v72 : string = _v52 
                let v77 : unit = ()
                let v78 : (unit -> unit) = closure5(v1, v72)
                let v79 : unit = (fun () -> v78 (); v77) ()
                return false 
                (*
                ()
            *)
            (*
            let v119 : bool = *)
            (*
            ()
        *)
        }
        (*
        ()
    *)
    let v120 : Async<bool> = _v18 
    let _v2 = v120 
    #endif
#else
    let v121 : unit = ()
    let _v121 =
        async {
            let v122 : Async<System.Threading.CancellationToken> = Async.CancellationToken
            let! v122 = v122 
            let v123 : System.Threading.CancellationToken = v122 
            let v124 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
            use v124 = v124 
            let v125 : System.Net.Sockets.TcpClient = v124 
            try
            let v126 : System.Threading.Tasks.ValueTask = v125.ConnectAsync (v0, v1, v123)
            let v127 : (unit -> System.Threading.Tasks.Task) = v126.AsTask
            let v128 : System.Threading.Tasks.Task = v127 ()
            let v129 : unit = ()
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v130 : Async<unit> = null |> unbox<Async<unit>>
            let _v129 = v130 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v133 : Async<unit> = null |> unbox<Async<unit>>
            let _v129 = v133 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v136 : Async<unit> = null |> unbox<Async<unit>>
            let _v129 = v136 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v139 : Async<unit> = null |> unbox<Async<unit>>
            let _v129 = v139 
            #endif
#if FABLE_COMPILER_PYTHON
            let v142 : Async<unit> = null |> unbox<Async<unit>>
            let _v129 = v142 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v145 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
            let v146 : Async<unit> = v145 v128
            let _v129 = v146 
            #endif
#else
            let v147 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
            let v148 : Async<unit> = v147 v128
            let _v129 = v148 
            #endif
            let v149 : Async<unit> = _v129 
            do! v149 
            return true 
            with ex ->
                let v154 : exn = ex
                let v155 : unit = ()
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v156 : string = $"%A{v154}"
                let _v155 = v156 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v159 : string = $"%A{v154}"
                let _v155 = v159 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v162 : string = $"%A{v154}"
                let _v155 = v162 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v165 : string = $"%A{v154}"
                let _v155 = v165 
                #endif
#if FABLE_COMPILER_PYTHON
                let v168 : string = $"%A{v154}"
                let _v155 = v168 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v171 : string = $"%A{v154}"
                let _v155 = v171 
                #endif
#else
                let v174 : string = $"{v154.GetType ()}: {v154.Message}"
                let _v155 = v174 
                #endif
                let v175 : string = _v155 
                let v180 : unit = ()
                let v181 : (unit -> unit) = closure5(v1, v175)
                let v182 : unit = (fun () -> v181 (); v180) ()
                return false 
                (*
                ()
            *)
            (*
            let v222 : bool = *)
            (*
            ()
        *)
        }
        (*
        ()
    *)
    let v223 : Async<bool> = _v121 
    let _v2 = v223 
    #endif
    let v224 : Async<bool> = _v2 
    v224
and closure3 () (v0 : string) : (int32 -> Async<bool>) =
    closure4(v0)
and closure14 () (v0 : bool) : US7 =
    US7_0(v0)
and method19 () : (bool -> US7) =
    closure14()
and closure15 () (v0 : exn) : US7 =
    US7_1(v0)
and method20 () : (exn -> US7) =
    closure15()
and method22 (v0 : int32) : string =
    let v1 : string = method13()
    let v2 : Mut3 = {l0 = v1} : Mut3
    let v3 : string = "{ "
    let v4 : string = $"{v3}"
    let v7 : unit = ()
    let v8 : (unit -> unit) = closure7(v2, v4)
    let v9 : unit = (fun () -> v8 (); v7) ()
    let v12 : string = "timeout"
    let v13 : string = $"{v12}"
    let v16 : unit = ()
    let v17 : (unit -> unit) = closure7(v2, v13)
    let v18 : unit = (fun () -> v17 (); v16) ()
    let v21 : string = " = "
    let v22 : string = $"{v21}"
    let v25 : unit = ()
    let v26 : (unit -> unit) = closure7(v2, v22)
    let v27 : unit = (fun () -> v26 (); v25) ()
    let v30 : string = $"{v0}"
    let v33 : unit = ()
    let v34 : (unit -> unit) = closure7(v2, v30)
    let v35 : unit = (fun () -> v34 (); v33) ()
    let v38 : string = " }"
    let v39 : string = $"{v38}"
    let v42 : unit = ()
    let v43 : (unit -> unit) = closure7(v2, v39)
    let v44 : unit = (fun () -> v43 (); v42) ()
    let v47 : string = v2.l0
    v47
and method21 (v0 : Mut0, v1 : Mut1, v2 : Mut2, v3 : Mut3, v4 : Mut4, v5 : int64 option, v6 : string, v7 : string, v8 : int32) : string =
    let v9 : string = method22(v8)
    let v10 : int64 = v0.l0
    let v11 : string = "async.run_with_timeout_async"
    let v12 : string = $"{v6} {v7} #{v10} %s{v11} / {v9}"
    method17(v12)
and closure16 (v0 : int32) () : unit =
    let v1 : US0 = US0_0
    let v2 : bool = method6(v1)
    if v2 then
        let v3 : unit = ()
        let v4 : (unit -> unit) = closure0()
        let v5 : unit = (fun () -> v4 (); v3) ()
        let struct (v19 : Mut0, v20 : Mut1, v21 : Mut2, v22 : Mut3, v23 : Mut4, v24 : int64 option) = TraceState.trace_state.Value
        let v37 : string = method7(v19, v20, v21, v22, v23, v24)
        let v38 : string = method11()
        let v39 : string = method21(v19, v20, v21, v22, v23, v24, v37, v38, v0)
        method18(v39)
and method23 () : string =
    
    
    
    
    
    let v0 : string = "Critical"
    let v1 : (unit -> string) = v0.ToLower
    let v2 : string = v1 ()
    let v5 : char = v2.[int 0]
    let v6 : string = method12(v5)
    let v7 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v8 : string = "inline_colorization::color_bright_red"
    let v9 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v8 
    let v10 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v11 : string = "&*$0"
    let v12 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v11 
    let _v10 = v12 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v13 : string = "&*$0"
    let v14 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v13 
    let _v10 = v14 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v15 : string = "&*$0"
    let v16 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v15 
    let _v10 = v16 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v17 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v10 = v17 
    #endif
#if FABLE_COMPILER_PYTHON
    let v20 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v10 = v20 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v23 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v10 = v23 
    #endif
#else
    let v26 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v10 = v26 
    #endif
    let v29 : Ref<Str> = _v10 
    let v34 : string = "inline_colorization::color_reset"
    let v35 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v34 
    let v36 : string = $"format!(\"{{}}{{}}{{}}\", $0, $1, $2)"
    let v37 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v9, v29, v35) v36 
    let v38 : string = "fable_library_rust::String_::fromString($0)"
    let v39 : string = Fable.Core.RustInterop.emitRustExpr v37 v38 
    let _v7 = v39 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v40 : string = "inline_colorization::color_bright_red"
    let v41 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v40 
    let v42 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v43 : string = "&*$0"
    let v44 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v43 
    let _v42 = v44 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v45 : string = "&*$0"
    let v46 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v45 
    let _v42 = v46 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v47 : string = "&*$0"
    let v48 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v47 
    let _v42 = v48 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v49 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v42 = v49 
    #endif
#if FABLE_COMPILER_PYTHON
    let v52 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v42 = v52 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v55 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v42 = v55 
    #endif
#else
    let v58 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v42 = v58 
    #endif
    let v61 : Ref<Str> = _v42 
    let v66 : string = "inline_colorization::color_reset"
    let v67 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v66 
    let v68 : string = $"format!(\"{{}}{{}}{{}}\", $0, $1, $2)"
    let v69 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v41, v61, v67) v68 
    let v70 : string = "fable_library_rust::String_::fromString($0)"
    let v71 : string = Fable.Core.RustInterop.emitRustExpr v69 v70 
    let _v7 = v71 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v72 : string = "inline_colorization::color_bright_red"
    let v73 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v72 
    let v74 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v75 : string = "&*$0"
    let v76 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v75 
    let _v74 = v76 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v77 : string = "&*$0"
    let v78 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v77 
    let _v74 = v78 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v79 : string = "&*$0"
    let v80 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr v6 v79 
    let _v74 = v80 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v81 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v74 = v81 
    #endif
#if FABLE_COMPILER_PYTHON
    let v84 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v74 = v84 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v87 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v74 = v87 
    #endif
#else
    let v90 : Ref<Str> = v6 |> unbox<Ref<Str>>
    let _v74 = v90 
    #endif
    let v93 : Ref<Str> = _v74 
    let v98 : string = "inline_colorization::color_reset"
    let v99 : Ref<Str> = Fable.Core.RustInterop.emitRustExpr () v98 
    let v100 : string = $"format!(\"{{}}{{}}{{}}\", $0, $1, $2)"
    let v101 : std_string_String = Fable.Core.RustInterop.emitRustExpr struct (v73, v93, v99) v100 
    let v102 : string = "fable_library_rust::String_::fromString($0)"
    let v103 : string = Fable.Core.RustInterop.emitRustExpr v101 v102 
    let _v7 = v103 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v104 : string = "\u001b[91m"
    let v105 : string = method14()
    let v106 : string = v104 + v6 
    let v107 : string = v106 + v105 
    let _v7 = v107 
    #endif
#if FABLE_COMPILER_PYTHON
    let v108 : string = "\u001b[91m"
    let v109 : string = method14()
    let v110 : string = v108 + v6 
    let v111 : string = v110 + v109 
    let _v7 = v111 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v112 : string = "\u001b[91m"
    let v113 : string = method14()
    let v114 : string = v112 + v6 
    let v115 : string = v114 + v113 
    let _v7 = v115 
    #endif
#else
    let v116 : string = "\u001b[91m"
    let v117 : string = method14()
    let v118 : string = v116 + v6 
    let v119 : string = v118 + v117 
    let _v7 = v119 
    #endif
    let v120 : string = _v7 
    v120
and method25 (v0 : int32, v1 : string) : string =
    let v2 : string = method13()
    let v3 : Mut3 = {l0 = v2} : Mut3
    let v4 : string = "{ "
    let v5 : string = $"{v4}"
    let v8 : unit = ()
    let v9 : (unit -> unit) = closure7(v3, v5)
    let v10 : unit = (fun () -> v9 (); v8) ()
    let v13 : string = "timeout"
    let v14 : string = $"{v13}"
    let v17 : unit = ()
    let v18 : (unit -> unit) = closure7(v3, v14)
    let v19 : unit = (fun () -> v18 (); v17) ()
    let v22 : string = " = "
    let v23 : string = $"{v22}"
    let v26 : unit = ()
    let v27 : (unit -> unit) = closure7(v3, v23)
    let v28 : unit = (fun () -> v27 (); v26) ()
    let v31 : string = $"{v0}"
    let v34 : unit = ()
    let v35 : (unit -> unit) = closure7(v3, v31)
    let v36 : unit = (fun () -> v35 (); v34) ()
    let v39 : string = "; "
    let v40 : string = $"{v39}"
    let v43 : unit = ()
    let v44 : (unit -> unit) = closure7(v3, v40)
    let v45 : unit = (fun () -> v44 (); v43) ()
    let v48 : string = "ex"
    let v49 : string = $"{v48}"
    let v52 : unit = ()
    let v53 : (unit -> unit) = closure7(v3, v49)
    let v54 : unit = (fun () -> v53 (); v52) ()
    let v57 : string = $"{v22}"
    let v60 : unit = ()
    let v61 : (unit -> unit) = closure7(v3, v57)
    let v62 : unit = (fun () -> v61 (); v60) ()
    let v65 : string = $"{v1}"
    let v68 : unit = ()
    let v69 : (unit -> unit) = closure7(v3, v65)
    let v70 : unit = (fun () -> v69 (); v68) ()
    let v73 : string = " }"
    let v74 : string = $"{v73}"
    let v77 : unit = ()
    let v78 : (unit -> unit) = closure7(v3, v74)
    let v79 : unit = (fun () -> v78 (); v77) ()
    let v82 : string = v3.l0
    v82
and method24 (v0 : Mut0, v1 : Mut1, v2 : Mut2, v3 : Mut3, v4 : Mut4, v5 : int64 option, v6 : string, v7 : string, v8 : int32, v9 : string) : string =
    let v10 : string = method25(v8, v9)
    let v11 : int64 = v0.l0
    let v12 : string = "async.run_with_timeout_async**"
    let v13 : string = $"{v6} {v7} #{v11} %s{v12} / {v10}"
    method17(v13)
and closure17 (v0 : int32, v1 : exn) () : unit =
    let v2 : US0 = US0_4
    let v3 : bool = method6(v2)
    if v3 then
        let v4 : unit = ()
        let v5 : (unit -> unit) = closure0()
        let v6 : unit = (fun () -> v5 (); v4) ()
        let struct (v20 : Mut0, v21 : Mut1, v22 : Mut2, v23 : Mut3, v24 : Mut4, v25 : int64 option) = TraceState.trace_state.Value
        let v38 : string = method7(v20, v21, v22, v23, v24, v25)
        let v39 : string = method23()
        let v40 : unit = ()
        
#if FABLE_COMPILER || WASM || CONTRACT
        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
        let v41 : string = $"%A{v1}"
        let _v40 = v41 
        #endif
#if FABLE_COMPILER_RUST && WASM
        let v44 : string = $"%A{v1}"
        let _v40 = v44 
        #endif
#if FABLE_COMPILER_RUST && CONTRACT
        let v47 : string = $"%A{v1}"
        let _v40 = v47 
        #endif
#if FABLE_COMPILER_TYPESCRIPT
        let v50 : string = $"%A{v1}"
        let _v40 = v50 
        #endif
#if FABLE_COMPILER_PYTHON
        let v53 : string = $"%A{v1}"
        let _v40 = v53 
        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
        let v56 : string = $"%A{v1}"
        let _v40 = v56 
        #endif
#else
        let v59 : string = $"{v1.GetType ()}: {v1.Message}"
        let _v40 = v59 
        #endif
        let v60 : string = _v40 
        let v65 : string = method24(v20, v21, v22, v23, v24, v25, v38, v39, v0, v60)
        method18(v65)
and closure13 (v0 : int32, v1 : string) (v2 : int32) : Async<bool> =
    let v3 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v4 : Async<bool> = null |> unbox<Async<bool>>
    let _v3 = v4 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v7 : Async<bool> = null |> unbox<Async<bool>>
    let _v3 = v7 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : Async<bool> = null |> unbox<Async<bool>>
    let _v3 = v10 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Async<bool> = null |> unbox<Async<bool>>
    let _v3 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v16 : Async<bool> = null |> unbox<Async<bool>>
    let _v3 = v16 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v19 : unit = ()
    let _v19 =
        async {
            let v20 : unit = ()
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v21 : Async<bool> = null |> unbox<Async<bool>>
            let _v20 = v21 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v24 : Async<bool> = null |> unbox<Async<bool>>
            let _v20 = v24 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v27 : Async<bool> = null |> unbox<Async<bool>>
            let _v20 = v27 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v30 : Async<bool> = null |> unbox<Async<bool>>
            let _v20 = v30 
            #endif
#if FABLE_COMPILER_PYTHON
            let v33 : Async<bool> = null |> unbox<Async<bool>>
            let _v20 = v33 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v36 : unit = ()
            let _v36 =
                async {
                    let v37 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                    let! v37 = v37 
                    let v38 : System.Threading.CancellationToken = v37 
                    let v39 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                    use v39 = v39 
                    let v40 : System.Net.Sockets.TcpClient = v39 
                    try
                    let v41 : System.Threading.Tasks.ValueTask = v40.ConnectAsync (v1, v2, v38)
                    let v42 : (unit -> System.Threading.Tasks.Task) = v41.AsTask
                    let v43 : System.Threading.Tasks.Task = v42 ()
                    let v44 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v45 : Async<unit> = null |> unbox<Async<unit>>
                    let _v44 = v45 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v48 : Async<unit> = null |> unbox<Async<unit>>
                    let _v44 = v48 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v51 : Async<unit> = null |> unbox<Async<unit>>
                    let _v44 = v51 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v54 : Async<unit> = null |> unbox<Async<unit>>
                    let _v44 = v54 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v57 : Async<unit> = null |> unbox<Async<unit>>
                    let _v44 = v57 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v60 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                    let v61 : Async<unit> = v60 v43
                    let _v44 = v61 
                    #endif
#else
                    let v62 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                    let v63 : Async<unit> = v62 v43
                    let _v44 = v63 
                    #endif
                    let v64 : Async<unit> = _v44 
                    do! v64 
                    return true 
                    with ex ->
                        let v69 : exn = ex
                        let v70 : unit = ()
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v71 : string = $"%A{v69}"
                        let _v70 = v71 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v74 : string = $"%A{v69}"
                        let _v70 = v74 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v77 : string = $"%A{v69}"
                        let _v70 = v77 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v80 : string = $"%A{v69}"
                        let _v70 = v80 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v83 : string = $"%A{v69}"
                        let _v70 = v83 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v86 : string = $"%A{v69}"
                        let _v70 = v86 
                        #endif
#else
                        let v89 : string = $"{v69.GetType ()}: {v69.Message}"
                        let _v70 = v89 
                        #endif
                        let v90 : string = _v70 
                        let v95 : unit = ()
                        let v96 : (unit -> unit) = closure5(v2, v90)
                        let v97 : unit = (fun () -> v96 (); v95) ()
                        return false 
                        (*
                        ()
                    *)
                    (*
                    let v137 : bool = *)
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v138 : Async<bool> = _v36 
            let _v20 = v138 
            #endif
#else
            let v139 : unit = ()
            let _v139 =
                async {
                    let v140 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                    let! v140 = v140 
                    let v141 : System.Threading.CancellationToken = v140 
                    let v142 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                    use v142 = v142 
                    let v143 : System.Net.Sockets.TcpClient = v142 
                    try
                    let v144 : System.Threading.Tasks.ValueTask = v143.ConnectAsync (v1, v2, v141)
                    let v145 : (unit -> System.Threading.Tasks.Task) = v144.AsTask
                    let v146 : System.Threading.Tasks.Task = v145 ()
                    let v147 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v148 : Async<unit> = null |> unbox<Async<unit>>
                    let _v147 = v148 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v151 : Async<unit> = null |> unbox<Async<unit>>
                    let _v147 = v151 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v154 : Async<unit> = null |> unbox<Async<unit>>
                    let _v147 = v154 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v157 : Async<unit> = null |> unbox<Async<unit>>
                    let _v147 = v157 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v160 : Async<unit> = null |> unbox<Async<unit>>
                    let _v147 = v160 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v163 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                    let v164 : Async<unit> = v163 v146
                    let _v147 = v164 
                    #endif
#else
                    let v165 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                    let v166 : Async<unit> = v165 v146
                    let _v147 = v166 
                    #endif
                    let v167 : Async<unit> = _v147 
                    do! v167 
                    return true 
                    with ex ->
                        let v172 : exn = ex
                        let v173 : unit = ()
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v174 : string = $"%A{v172}"
                        let _v173 = v174 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v177 : string = $"%A{v172}"
                        let _v173 = v177 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v180 : string = $"%A{v172}"
                        let _v173 = v180 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v183 : string = $"%A{v172}"
                        let _v173 = v183 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v186 : string = $"%A{v172}"
                        let _v173 = v186 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v189 : string = $"%A{v172}"
                        let _v173 = v189 
                        #endif
#else
                        let v192 : string = $"{v172.GetType ()}: {v172.Message}"
                        let _v173 = v192 
                        #endif
                        let v193 : string = _v173 
                        let v198 : unit = ()
                        let v199 : (unit -> unit) = closure5(v2, v193)
                        let v200 : unit = (fun () -> v199 (); v198) ()
                        return false 
                        (*
                        ()
                    *)
                    (*
                    let v240 : bool = *)
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v241 : Async<bool> = _v139 
            let _v20 = v241 
            #endif
            let v242 : Async<bool> = _v20 
            let v247 : unit = ()
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v248 : Async<US6> = null |> unbox<Async<US6>>
            let _v247 = v248 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v251 : Async<US6> = null |> unbox<Async<US6>>
            let _v247 = v251 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v254 : Async<US6> = null |> unbox<Async<US6>>
            let _v247 = v254 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v257 : Async<US6> = null |> unbox<Async<US6>>
            let _v247 = v257 
            #endif
#if FABLE_COMPILER_PYTHON
            let v260 : Async<US6> = null |> unbox<Async<US6>>
            let _v247 = v260 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v263 : unit = ()
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v264 : Async<US6> = null |> unbox<Async<US6>>
            let _v263 = v264 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v267 : Async<US6> = null |> unbox<Async<US6>>
            let _v263 = v267 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v270 : Async<US6> = null |> unbox<Async<US6>>
            let _v263 = v270 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v273 : Async<US6> = null |> unbox<Async<US6>>
            let _v263 = v273 
            #endif
#if FABLE_COMPILER_PYTHON
            let v276 : Async<US6> = null |> unbox<Async<US6>>
            let _v263 = v276 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v279 : unit = ()
            let _v279 =
                async {
                    let v280 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v281 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v280 = v281 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v284 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v280 = v284 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v287 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v280 = v287 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v290 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v280 = v290 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v293 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v280 = v293 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v296 : Async<Async<bool>> = Async.StartChild (v242, v0)
                    let _v280 = v296 
                    #endif
#else
                    let v297 : Async<Async<bool>> = Async.StartChild (v242, v0)
                    let _v280 = v297 
                    #endif
                    let v298 : Async<Async<bool>> = _v280 
                    let! v298 = v298 
                    let v303 : Async<bool> = v298 
                    let v304 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v305 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v304 = v305 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v308 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v304 = v308 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v311 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v304 = v311 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v314 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v304 = v314 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v317 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v304 = v317 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v320 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v321 : Async<Choice<bool, exn>> = v320 v303
                    let _v304 = v321 
                    #endif
#else
                    let v322 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v323 : Async<Choice<bool, exn>> = v322 v303
                    let _v304 = v323 
                    #endif
                    let v324 : Async<Choice<bool, exn>> = _v304 
                    let v329 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v330 : Async<US7> = null |> unbox<Async<US7>>
                    let _v329 = v330 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v333 : Async<US7> = null |> unbox<Async<US7>>
                    let _v329 = v333 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v336 : Async<US7> = null |> unbox<Async<US7>>
                    let _v329 = v336 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v339 : Async<US7> = null |> unbox<Async<US7>>
                    let _v329 = v339 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v342 : Async<US7> = null |> unbox<Async<US7>>
                    let _v329 = v342 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v345 : unit = ()
                    let _v345 =
                        async {
                            let! v324 = v324 
                            let v346 : Choice<bool, exn> = v324 
                            let v347 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v348 : US7 = null |> unbox<US7>
                            let _v347 = v348 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v351 : US7 = null |> unbox<US7>
                            let _v347 = v351 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v354 : US7 = null |> unbox<US7>
                            let _v347 = v354 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v357 : US7 = null |> unbox<US7>
                            let _v347 = v357 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v360 : US7 = null |> unbox<US7>
                            let _v347 = v360 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v363 : (bool -> US7) = method19()
                            let v364 : (exn -> US7) = method20()
                            let v365 : US7 = match v346 with Choice1Of2 x -> v363 x | Choice2Of2 x -> v364 x
                            let _v347 = v365 
                            #endif
#else
                            let v366 : (bool -> US7) = method19()
                            let v367 : (exn -> US7) = method20()
                            let v368 : US7 = match v346 with Choice1Of2 x -> v366 x | Choice2Of2 x -> v367 x
                            let _v347 = v368 
                            #endif
                            let v369 : US7 = _v347 
                            return v369 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v374 : Async<US7> = _v345 
                    let _v329 = v374 
                    #endif
#else
                    let v375 : unit = ()
                    let _v375 =
                        async {
                            let! v324 = v324 
                            let v376 : Choice<bool, exn> = v324 
                            let v377 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v378 : US7 = null |> unbox<US7>
                            let _v377 = v378 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v381 : US7 = null |> unbox<US7>
                            let _v377 = v381 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v384 : US7 = null |> unbox<US7>
                            let _v377 = v384 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v387 : US7 = null |> unbox<US7>
                            let _v377 = v387 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v390 : US7 = null |> unbox<US7>
                            let _v377 = v390 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v393 : (bool -> US7) = method19()
                            let v394 : (exn -> US7) = method20()
                            let v395 : US7 = match v376 with Choice1Of2 x -> v393 x | Choice2Of2 x -> v394 x
                            let _v377 = v395 
                            #endif
#else
                            let v396 : (bool -> US7) = method19()
                            let v397 : (exn -> US7) = method20()
                            let v398 : US7 = match v376 with Choice1Of2 x -> v396 x | Choice2Of2 x -> v397 x
                            let _v377 = v398 
                            #endif
                            let v399 : US7 = _v377 
                            return v399 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v404 : Async<US7> = _v375 
                    let _v329 = v404 
                    #endif
                    let v405 : Async<US7> = _v329 
                    let v410 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v411 : Async<US8> = null |> unbox<Async<US8>>
                    let _v410 = v411 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v414 : Async<US8> = null |> unbox<Async<US8>>
                    let _v410 = v414 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v417 : Async<US8> = null |> unbox<Async<US8>>
                    let _v410 = v417 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v420 : Async<US8> = null |> unbox<Async<US8>>
                    let _v410 = v420 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v423 : Async<US8> = null |> unbox<Async<US8>>
                    let _v410 = v423 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v426 : unit = ()
                    let _v426 =
                        async {
                            let! v405 = v405 
                            let v427 : US7 = v405 
                            let v433 : US8 =
                                match v427 with
                                | US7_0(v428) -> (* C1of2 *)
                                    US8_0(v428)
                                | US7_1(v430) -> (* C2of2 *)
                                    US8_1(v430)
                            return v433 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v434 : Async<US8> = _v426 
                    let _v410 = v434 
                    #endif
#else
                    let v435 : unit = ()
                    let _v435 =
                        async {
                            let! v405 = v405 
                            let v436 : US7 = v405 
                            let v442 : US8 =
                                match v436 with
                                | US7_0(v437) -> (* C1of2 *)
                                    US8_0(v437)
                                | US7_1(v439) -> (* C2of2 *)
                                    US8_1(v439)
                            return v442 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v443 : Async<US8> = _v435 
                    let _v410 = v443 
                    #endif
                    let v444 : Async<US8> = _v410 
                    let v449 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v450 : Async<US6> = null |> unbox<Async<US6>>
                    let _v449 = v450 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v453 : Async<US6> = null |> unbox<Async<US6>>
                    let _v449 = v453 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v456 : Async<US6> = null |> unbox<Async<US6>>
                    let _v449 = v456 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v459 : Async<US6> = null |> unbox<Async<US6>>
                    let _v449 = v459 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v462 : Async<US6> = null |> unbox<Async<US6>>
                    let _v449 = v462 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v465 : unit = ()
                    let _v465 =
                        async {
                            let! v444 = v444 
                            let v466 : US8 = v444 
                            let v590 : US6 =
                                match v466 with
                                | US8_1(v469) -> (* Error *)
                                    let v470 : string = $"%A{v469}"
                                    let v473 : string = "System.TimeoutException"
                                    let v474 : bool = v470.Contains v473 
                                    if v474 then
                                        let v477 : unit = ()
                                        let v478 : (unit -> unit) = closure16(v0)
                                        let v479 : unit = (fun () -> v478 (); v477) ()
                                        US6_1
                                    else
                                        let v520 : unit = ()
                                        let v521 : (unit -> unit) = closure17(v0, v469)
                                        let v522 : unit = (fun () -> v521 (); v520) ()
                                        US6_1
                                | US8_0(v467) -> (* Ok *)
                                    US6_0(v467)
                            return v590 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v591 : Async<US6> = _v465 
                    let _v449 = v591 
                    #endif
#else
                    let v592 : unit = ()
                    let _v592 =
                        async {
                            let! v444 = v444 
                            let v593 : US8 = v444 
                            let v717 : US6 =
                                match v593 with
                                | US8_1(v596) -> (* Error *)
                                    let v597 : string = $"%A{v596}"
                                    let v600 : string = "System.TimeoutException"
                                    let v601 : bool = v597.Contains v600 
                                    if v601 then
                                        let v604 : unit = ()
                                        let v605 : (unit -> unit) = closure16(v0)
                                        let v606 : unit = (fun () -> v605 (); v604) ()
                                        US6_1
                                    else
                                        let v647 : unit = ()
                                        let v648 : (unit -> unit) = closure17(v0, v596)
                                        let v649 : unit = (fun () -> v648 (); v647) ()
                                        US6_1
                                | US8_0(v594) -> (* Ok *)
                                    US6_0(v594)
                            return v717 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v718 : Async<US6> = _v592 
                    let _v449 = v718 
                    #endif
                    let v719 : Async<US6> = _v449 
                    return! v719 
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v724 : Async<US6> = _v279 
            let _v263 = v724 
            #endif
#else
            let v725 : unit = ()
            let _v725 =
                async {
                    let v726 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v727 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v726 = v727 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v730 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v726 = v730 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v733 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v726 = v733 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v736 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v726 = v736 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v739 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v726 = v739 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v742 : Async<Async<bool>> = Async.StartChild (v242, v0)
                    let _v726 = v742 
                    #endif
#else
                    let v743 : Async<Async<bool>> = Async.StartChild (v242, v0)
                    let _v726 = v743 
                    #endif
                    let v744 : Async<Async<bool>> = _v726 
                    let! v744 = v744 
                    let v749 : Async<bool> = v744 
                    let v750 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v751 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v750 = v751 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v754 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v750 = v754 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v757 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v750 = v757 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v760 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v750 = v760 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v763 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v750 = v763 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v766 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v767 : Async<Choice<bool, exn>> = v766 v749
                    let _v750 = v767 
                    #endif
#else
                    let v768 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v769 : Async<Choice<bool, exn>> = v768 v749
                    let _v750 = v769 
                    #endif
                    let v770 : Async<Choice<bool, exn>> = _v750 
                    let v775 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v776 : Async<US7> = null |> unbox<Async<US7>>
                    let _v775 = v776 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v779 : Async<US7> = null |> unbox<Async<US7>>
                    let _v775 = v779 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v782 : Async<US7> = null |> unbox<Async<US7>>
                    let _v775 = v782 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v785 : Async<US7> = null |> unbox<Async<US7>>
                    let _v775 = v785 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v788 : Async<US7> = null |> unbox<Async<US7>>
                    let _v775 = v788 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v791 : unit = ()
                    let _v791 =
                        async {
                            let! v770 = v770 
                            let v792 : Choice<bool, exn> = v770 
                            let v793 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v794 : US7 = null |> unbox<US7>
                            let _v793 = v794 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v797 : US7 = null |> unbox<US7>
                            let _v793 = v797 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v800 : US7 = null |> unbox<US7>
                            let _v793 = v800 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v803 : US7 = null |> unbox<US7>
                            let _v793 = v803 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v806 : US7 = null |> unbox<US7>
                            let _v793 = v806 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v809 : (bool -> US7) = method19()
                            let v810 : (exn -> US7) = method20()
                            let v811 : US7 = match v792 with Choice1Of2 x -> v809 x | Choice2Of2 x -> v810 x
                            let _v793 = v811 
                            #endif
#else
                            let v812 : (bool -> US7) = method19()
                            let v813 : (exn -> US7) = method20()
                            let v814 : US7 = match v792 with Choice1Of2 x -> v812 x | Choice2Of2 x -> v813 x
                            let _v793 = v814 
                            #endif
                            let v815 : US7 = _v793 
                            return v815 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v820 : Async<US7> = _v791 
                    let _v775 = v820 
                    #endif
#else
                    let v821 : unit = ()
                    let _v821 =
                        async {
                            let! v770 = v770 
                            let v822 : Choice<bool, exn> = v770 
                            let v823 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v824 : US7 = null |> unbox<US7>
                            let _v823 = v824 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v827 : US7 = null |> unbox<US7>
                            let _v823 = v827 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v830 : US7 = null |> unbox<US7>
                            let _v823 = v830 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v833 : US7 = null |> unbox<US7>
                            let _v823 = v833 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v836 : US7 = null |> unbox<US7>
                            let _v823 = v836 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v839 : (bool -> US7) = method19()
                            let v840 : (exn -> US7) = method20()
                            let v841 : US7 = match v822 with Choice1Of2 x -> v839 x | Choice2Of2 x -> v840 x
                            let _v823 = v841 
                            #endif
#else
                            let v842 : (bool -> US7) = method19()
                            let v843 : (exn -> US7) = method20()
                            let v844 : US7 = match v822 with Choice1Of2 x -> v842 x | Choice2Of2 x -> v843 x
                            let _v823 = v844 
                            #endif
                            let v845 : US7 = _v823 
                            return v845 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v850 : Async<US7> = _v821 
                    let _v775 = v850 
                    #endif
                    let v851 : Async<US7> = _v775 
                    let v856 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v857 : Async<US8> = null |> unbox<Async<US8>>
                    let _v856 = v857 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v860 : Async<US8> = null |> unbox<Async<US8>>
                    let _v856 = v860 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v863 : Async<US8> = null |> unbox<Async<US8>>
                    let _v856 = v863 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v866 : Async<US8> = null |> unbox<Async<US8>>
                    let _v856 = v866 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v869 : Async<US8> = null |> unbox<Async<US8>>
                    let _v856 = v869 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v872 : unit = ()
                    let _v872 =
                        async {
                            let! v851 = v851 
                            let v873 : US7 = v851 
                            let v879 : US8 =
                                match v873 with
                                | US7_0(v874) -> (* C1of2 *)
                                    US8_0(v874)
                                | US7_1(v876) -> (* C2of2 *)
                                    US8_1(v876)
                            return v879 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v880 : Async<US8> = _v872 
                    let _v856 = v880 
                    #endif
#else
                    let v881 : unit = ()
                    let _v881 =
                        async {
                            let! v851 = v851 
                            let v882 : US7 = v851 
                            let v888 : US8 =
                                match v882 with
                                | US7_0(v883) -> (* C1of2 *)
                                    US8_0(v883)
                                | US7_1(v885) -> (* C2of2 *)
                                    US8_1(v885)
                            return v888 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v889 : Async<US8> = _v881 
                    let _v856 = v889 
                    #endif
                    let v890 : Async<US8> = _v856 
                    let v895 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v896 : Async<US6> = null |> unbox<Async<US6>>
                    let _v895 = v896 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v899 : Async<US6> = null |> unbox<Async<US6>>
                    let _v895 = v899 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v902 : Async<US6> = null |> unbox<Async<US6>>
                    let _v895 = v902 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v905 : Async<US6> = null |> unbox<Async<US6>>
                    let _v895 = v905 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v908 : Async<US6> = null |> unbox<Async<US6>>
                    let _v895 = v908 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v911 : unit = ()
                    let _v911 =
                        async {
                            let! v890 = v890 
                            let v912 : US8 = v890 
                            let v1036 : US6 =
                                match v912 with
                                | US8_1(v915) -> (* Error *)
                                    let v916 : string = $"%A{v915}"
                                    let v919 : string = "System.TimeoutException"
                                    let v920 : bool = v916.Contains v919 
                                    if v920 then
                                        let v923 : unit = ()
                                        let v924 : (unit -> unit) = closure16(v0)
                                        let v925 : unit = (fun () -> v924 (); v923) ()
                                        US6_1
                                    else
                                        let v966 : unit = ()
                                        let v967 : (unit -> unit) = closure17(v0, v915)
                                        let v968 : unit = (fun () -> v967 (); v966) ()
                                        US6_1
                                | US8_0(v913) -> (* Ok *)
                                    US6_0(v913)
                            return v1036 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1037 : Async<US6> = _v911 
                    let _v895 = v1037 
                    #endif
#else
                    let v1038 : unit = ()
                    let _v1038 =
                        async {
                            let! v890 = v890 
                            let v1039 : US8 = v890 
                            let v1163 : US6 =
                                match v1039 with
                                | US8_1(v1042) -> (* Error *)
                                    let v1043 : string = $"%A{v1042}"
                                    let v1046 : string = "System.TimeoutException"
                                    let v1047 : bool = v1043.Contains v1046 
                                    if v1047 then
                                        let v1050 : unit = ()
                                        let v1051 : (unit -> unit) = closure16(v0)
                                        let v1052 : unit = (fun () -> v1051 (); v1050) ()
                                        US6_1
                                    else
                                        let v1093 : unit = ()
                                        let v1094 : (unit -> unit) = closure17(v0, v1042)
                                        let v1095 : unit = (fun () -> v1094 (); v1093) ()
                                        US6_1
                                | US8_0(v1040) -> (* Ok *)
                                    US6_0(v1040)
                            return v1163 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1164 : Async<US6> = _v1038 
                    let _v895 = v1164 
                    #endif
                    let v1165 : Async<US6> = _v895 
                    return! v1165 
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v1170 : Async<US6> = _v725 
            let _v263 = v1170 
            #endif
            let v1171 : Async<US6> = _v263 
            let _v247 = v1171 
            #endif
#else
            let v1176 : unit = ()
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v1177 : Async<US6> = null |> unbox<Async<US6>>
            let _v1176 = v1177 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v1180 : Async<US6> = null |> unbox<Async<US6>>
            let _v1176 = v1180 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v1183 : Async<US6> = null |> unbox<Async<US6>>
            let _v1176 = v1183 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v1186 : Async<US6> = null |> unbox<Async<US6>>
            let _v1176 = v1186 
            #endif
#if FABLE_COMPILER_PYTHON
            let v1189 : Async<US6> = null |> unbox<Async<US6>>
            let _v1176 = v1189 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v1192 : unit = ()
            let _v1192 =
                async {
                    let v1193 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1194 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v1193 = v1194 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1197 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v1193 = v1197 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1200 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v1193 = v1200 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1203 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v1193 = v1203 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1206 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v1193 = v1206 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1209 : Async<Async<bool>> = Async.StartChild (v242, v0)
                    let _v1193 = v1209 
                    #endif
#else
                    let v1210 : Async<Async<bool>> = Async.StartChild (v242, v0)
                    let _v1193 = v1210 
                    #endif
                    let v1211 : Async<Async<bool>> = _v1193 
                    let! v1211 = v1211 
                    let v1216 : Async<bool> = v1211 
                    let v1217 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1218 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v1217 = v1218 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1221 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v1217 = v1221 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1224 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v1217 = v1224 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1227 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v1217 = v1227 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1230 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v1217 = v1230 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1233 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v1234 : Async<Choice<bool, exn>> = v1233 v1216
                    let _v1217 = v1234 
                    #endif
#else
                    let v1235 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v1236 : Async<Choice<bool, exn>> = v1235 v1216
                    let _v1217 = v1236 
                    #endif
                    let v1237 : Async<Choice<bool, exn>> = _v1217 
                    let v1242 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1243 : Async<US7> = null |> unbox<Async<US7>>
                    let _v1242 = v1243 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1246 : Async<US7> = null |> unbox<Async<US7>>
                    let _v1242 = v1246 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1249 : Async<US7> = null |> unbox<Async<US7>>
                    let _v1242 = v1249 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1252 : Async<US7> = null |> unbox<Async<US7>>
                    let _v1242 = v1252 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1255 : Async<US7> = null |> unbox<Async<US7>>
                    let _v1242 = v1255 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1258 : unit = ()
                    let _v1258 =
                        async {
                            let! v1237 = v1237 
                            let v1259 : Choice<bool, exn> = v1237 
                            let v1260 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1261 : US7 = null |> unbox<US7>
                            let _v1260 = v1261 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1264 : US7 = null |> unbox<US7>
                            let _v1260 = v1264 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1267 : US7 = null |> unbox<US7>
                            let _v1260 = v1267 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1270 : US7 = null |> unbox<US7>
                            let _v1260 = v1270 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1273 : US7 = null |> unbox<US7>
                            let _v1260 = v1273 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1276 : (bool -> US7) = method19()
                            let v1277 : (exn -> US7) = method20()
                            let v1278 : US7 = match v1259 with Choice1Of2 x -> v1276 x | Choice2Of2 x -> v1277 x
                            let _v1260 = v1278 
                            #endif
#else
                            let v1279 : (bool -> US7) = method19()
                            let v1280 : (exn -> US7) = method20()
                            let v1281 : US7 = match v1259 with Choice1Of2 x -> v1279 x | Choice2Of2 x -> v1280 x
                            let _v1260 = v1281 
                            #endif
                            let v1282 : US7 = _v1260 
                            return v1282 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1287 : Async<US7> = _v1258 
                    let _v1242 = v1287 
                    #endif
#else
                    let v1288 : unit = ()
                    let _v1288 =
                        async {
                            let! v1237 = v1237 
                            let v1289 : Choice<bool, exn> = v1237 
                            let v1290 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1291 : US7 = null |> unbox<US7>
                            let _v1290 = v1291 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1294 : US7 = null |> unbox<US7>
                            let _v1290 = v1294 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1297 : US7 = null |> unbox<US7>
                            let _v1290 = v1297 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1300 : US7 = null |> unbox<US7>
                            let _v1290 = v1300 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1303 : US7 = null |> unbox<US7>
                            let _v1290 = v1303 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1306 : (bool -> US7) = method19()
                            let v1307 : (exn -> US7) = method20()
                            let v1308 : US7 = match v1289 with Choice1Of2 x -> v1306 x | Choice2Of2 x -> v1307 x
                            let _v1290 = v1308 
                            #endif
#else
                            let v1309 : (bool -> US7) = method19()
                            let v1310 : (exn -> US7) = method20()
                            let v1311 : US7 = match v1289 with Choice1Of2 x -> v1309 x | Choice2Of2 x -> v1310 x
                            let _v1290 = v1311 
                            #endif
                            let v1312 : US7 = _v1290 
                            return v1312 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1317 : Async<US7> = _v1288 
                    let _v1242 = v1317 
                    #endif
                    let v1318 : Async<US7> = _v1242 
                    let v1323 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1324 : Async<US8> = null |> unbox<Async<US8>>
                    let _v1323 = v1324 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1327 : Async<US8> = null |> unbox<Async<US8>>
                    let _v1323 = v1327 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1330 : Async<US8> = null |> unbox<Async<US8>>
                    let _v1323 = v1330 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1333 : Async<US8> = null |> unbox<Async<US8>>
                    let _v1323 = v1333 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1336 : Async<US8> = null |> unbox<Async<US8>>
                    let _v1323 = v1336 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1339 : unit = ()
                    let _v1339 =
                        async {
                            let! v1318 = v1318 
                            let v1340 : US7 = v1318 
                            let v1346 : US8 =
                                match v1340 with
                                | US7_0(v1341) -> (* C1of2 *)
                                    US8_0(v1341)
                                | US7_1(v1343) -> (* C2of2 *)
                                    US8_1(v1343)
                            return v1346 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1347 : Async<US8> = _v1339 
                    let _v1323 = v1347 
                    #endif
#else
                    let v1348 : unit = ()
                    let _v1348 =
                        async {
                            let! v1318 = v1318 
                            let v1349 : US7 = v1318 
                            let v1355 : US8 =
                                match v1349 with
                                | US7_0(v1350) -> (* C1of2 *)
                                    US8_0(v1350)
                                | US7_1(v1352) -> (* C2of2 *)
                                    US8_1(v1352)
                            return v1355 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1356 : Async<US8> = _v1348 
                    let _v1323 = v1356 
                    #endif
                    let v1357 : Async<US8> = _v1323 
                    let v1362 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1363 : Async<US6> = null |> unbox<Async<US6>>
                    let _v1362 = v1363 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1366 : Async<US6> = null |> unbox<Async<US6>>
                    let _v1362 = v1366 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1369 : Async<US6> = null |> unbox<Async<US6>>
                    let _v1362 = v1369 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1372 : Async<US6> = null |> unbox<Async<US6>>
                    let _v1362 = v1372 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1375 : Async<US6> = null |> unbox<Async<US6>>
                    let _v1362 = v1375 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1378 : unit = ()
                    let _v1378 =
                        async {
                            let! v1357 = v1357 
                            let v1379 : US8 = v1357 
                            let v1503 : US6 =
                                match v1379 with
                                | US8_1(v1382) -> (* Error *)
                                    let v1383 : string = $"%A{v1382}"
                                    let v1386 : string = "System.TimeoutException"
                                    let v1387 : bool = v1383.Contains v1386 
                                    if v1387 then
                                        let v1390 : unit = ()
                                        let v1391 : (unit -> unit) = closure16(v0)
                                        let v1392 : unit = (fun () -> v1391 (); v1390) ()
                                        US6_1
                                    else
                                        let v1433 : unit = ()
                                        let v1434 : (unit -> unit) = closure17(v0, v1382)
                                        let v1435 : unit = (fun () -> v1434 (); v1433) ()
                                        US6_1
                                | US8_0(v1380) -> (* Ok *)
                                    US6_0(v1380)
                            return v1503 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1504 : Async<US6> = _v1378 
                    let _v1362 = v1504 
                    #endif
#else
                    let v1505 : unit = ()
                    let _v1505 =
                        async {
                            let! v1357 = v1357 
                            let v1506 : US8 = v1357 
                            let v1630 : US6 =
                                match v1506 with
                                | US8_1(v1509) -> (* Error *)
                                    let v1510 : string = $"%A{v1509}"
                                    let v1513 : string = "System.TimeoutException"
                                    let v1514 : bool = v1510.Contains v1513 
                                    if v1514 then
                                        let v1517 : unit = ()
                                        let v1518 : (unit -> unit) = closure16(v0)
                                        let v1519 : unit = (fun () -> v1518 (); v1517) ()
                                        US6_1
                                    else
                                        let v1560 : unit = ()
                                        let v1561 : (unit -> unit) = closure17(v0, v1509)
                                        let v1562 : unit = (fun () -> v1561 (); v1560) ()
                                        US6_1
                                | US8_0(v1507) -> (* Ok *)
                                    US6_0(v1507)
                            return v1630 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1631 : Async<US6> = _v1505 
                    let _v1362 = v1631 
                    #endif
                    let v1632 : Async<US6> = _v1362 
                    return! v1632 
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v1637 : Async<US6> = _v1192 
            let _v1176 = v1637 
            #endif
#else
            let v1638 : unit = ()
            let _v1638 =
                async {
                    let v1639 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1640 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v1639 = v1640 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1643 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v1639 = v1643 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1646 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v1639 = v1646 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1649 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v1639 = v1649 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1652 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v1639 = v1652 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1655 : Async<Async<bool>> = Async.StartChild (v242, v0)
                    let _v1639 = v1655 
                    #endif
#else
                    let v1656 : Async<Async<bool>> = Async.StartChild (v242, v0)
                    let _v1639 = v1656 
                    #endif
                    let v1657 : Async<Async<bool>> = _v1639 
                    let! v1657 = v1657 
                    let v1662 : Async<bool> = v1657 
                    let v1663 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1664 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v1663 = v1664 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1667 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v1663 = v1667 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1670 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v1663 = v1670 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1673 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v1663 = v1673 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1676 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v1663 = v1676 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1679 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v1680 : Async<Choice<bool, exn>> = v1679 v1662
                    let _v1663 = v1680 
                    #endif
#else
                    let v1681 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v1682 : Async<Choice<bool, exn>> = v1681 v1662
                    let _v1663 = v1682 
                    #endif
                    let v1683 : Async<Choice<bool, exn>> = _v1663 
                    let v1688 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1689 : Async<US7> = null |> unbox<Async<US7>>
                    let _v1688 = v1689 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1692 : Async<US7> = null |> unbox<Async<US7>>
                    let _v1688 = v1692 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1695 : Async<US7> = null |> unbox<Async<US7>>
                    let _v1688 = v1695 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1698 : Async<US7> = null |> unbox<Async<US7>>
                    let _v1688 = v1698 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1701 : Async<US7> = null |> unbox<Async<US7>>
                    let _v1688 = v1701 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1704 : unit = ()
                    let _v1704 =
                        async {
                            let! v1683 = v1683 
                            let v1705 : Choice<bool, exn> = v1683 
                            let v1706 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1707 : US7 = null |> unbox<US7>
                            let _v1706 = v1707 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1710 : US7 = null |> unbox<US7>
                            let _v1706 = v1710 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1713 : US7 = null |> unbox<US7>
                            let _v1706 = v1713 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1716 : US7 = null |> unbox<US7>
                            let _v1706 = v1716 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1719 : US7 = null |> unbox<US7>
                            let _v1706 = v1719 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1722 : (bool -> US7) = method19()
                            let v1723 : (exn -> US7) = method20()
                            let v1724 : US7 = match v1705 with Choice1Of2 x -> v1722 x | Choice2Of2 x -> v1723 x
                            let _v1706 = v1724 
                            #endif
#else
                            let v1725 : (bool -> US7) = method19()
                            let v1726 : (exn -> US7) = method20()
                            let v1727 : US7 = match v1705 with Choice1Of2 x -> v1725 x | Choice2Of2 x -> v1726 x
                            let _v1706 = v1727 
                            #endif
                            let v1728 : US7 = _v1706 
                            return v1728 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1733 : Async<US7> = _v1704 
                    let _v1688 = v1733 
                    #endif
#else
                    let v1734 : unit = ()
                    let _v1734 =
                        async {
                            let! v1683 = v1683 
                            let v1735 : Choice<bool, exn> = v1683 
                            let v1736 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1737 : US7 = null |> unbox<US7>
                            let _v1736 = v1737 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1740 : US7 = null |> unbox<US7>
                            let _v1736 = v1740 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1743 : US7 = null |> unbox<US7>
                            let _v1736 = v1743 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1746 : US7 = null |> unbox<US7>
                            let _v1736 = v1746 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1749 : US7 = null |> unbox<US7>
                            let _v1736 = v1749 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1752 : (bool -> US7) = method19()
                            let v1753 : (exn -> US7) = method20()
                            let v1754 : US7 = match v1735 with Choice1Of2 x -> v1752 x | Choice2Of2 x -> v1753 x
                            let _v1736 = v1754 
                            #endif
#else
                            let v1755 : (bool -> US7) = method19()
                            let v1756 : (exn -> US7) = method20()
                            let v1757 : US7 = match v1735 with Choice1Of2 x -> v1755 x | Choice2Of2 x -> v1756 x
                            let _v1736 = v1757 
                            #endif
                            let v1758 : US7 = _v1736 
                            return v1758 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1763 : Async<US7> = _v1734 
                    let _v1688 = v1763 
                    #endif
                    let v1764 : Async<US7> = _v1688 
                    let v1769 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1770 : Async<US8> = null |> unbox<Async<US8>>
                    let _v1769 = v1770 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1773 : Async<US8> = null |> unbox<Async<US8>>
                    let _v1769 = v1773 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1776 : Async<US8> = null |> unbox<Async<US8>>
                    let _v1769 = v1776 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1779 : Async<US8> = null |> unbox<Async<US8>>
                    let _v1769 = v1779 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1782 : Async<US8> = null |> unbox<Async<US8>>
                    let _v1769 = v1782 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1785 : unit = ()
                    let _v1785 =
                        async {
                            let! v1764 = v1764 
                            let v1786 : US7 = v1764 
                            let v1792 : US8 =
                                match v1786 with
                                | US7_0(v1787) -> (* C1of2 *)
                                    US8_0(v1787)
                                | US7_1(v1789) -> (* C2of2 *)
                                    US8_1(v1789)
                            return v1792 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1793 : Async<US8> = _v1785 
                    let _v1769 = v1793 
                    #endif
#else
                    let v1794 : unit = ()
                    let _v1794 =
                        async {
                            let! v1764 = v1764 
                            let v1795 : US7 = v1764 
                            let v1801 : US8 =
                                match v1795 with
                                | US7_0(v1796) -> (* C1of2 *)
                                    US8_0(v1796)
                                | US7_1(v1798) -> (* C2of2 *)
                                    US8_1(v1798)
                            return v1801 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1802 : Async<US8> = _v1794 
                    let _v1769 = v1802 
                    #endif
                    let v1803 : Async<US8> = _v1769 
                    let v1808 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v1809 : Async<US6> = null |> unbox<Async<US6>>
                    let _v1808 = v1809 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v1812 : Async<US6> = null |> unbox<Async<US6>>
                    let _v1808 = v1812 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v1815 : Async<US6> = null |> unbox<Async<US6>>
                    let _v1808 = v1815 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v1818 : Async<US6> = null |> unbox<Async<US6>>
                    let _v1808 = v1818 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v1821 : Async<US6> = null |> unbox<Async<US6>>
                    let _v1808 = v1821 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v1824 : unit = ()
                    let _v1824 =
                        async {
                            let! v1803 = v1803 
                            let v1825 : US8 = v1803 
                            let v1949 : US6 =
                                match v1825 with
                                | US8_1(v1828) -> (* Error *)
                                    let v1829 : string = $"%A{v1828}"
                                    let v1832 : string = "System.TimeoutException"
                                    let v1833 : bool = v1829.Contains v1832 
                                    if v1833 then
                                        let v1836 : unit = ()
                                        let v1837 : (unit -> unit) = closure16(v0)
                                        let v1838 : unit = (fun () -> v1837 (); v1836) ()
                                        US6_1
                                    else
                                        let v1879 : unit = ()
                                        let v1880 : (unit -> unit) = closure17(v0, v1828)
                                        let v1881 : unit = (fun () -> v1880 (); v1879) ()
                                        US6_1
                                | US8_0(v1826) -> (* Ok *)
                                    US6_0(v1826)
                            return v1949 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v1950 : Async<US6> = _v1824 
                    let _v1808 = v1950 
                    #endif
#else
                    let v1951 : unit = ()
                    let _v1951 =
                        async {
                            let! v1803 = v1803 
                            let v1952 : US8 = v1803 
                            let v2076 : US6 =
                                match v1952 with
                                | US8_1(v1955) -> (* Error *)
                                    let v1956 : string = $"%A{v1955}"
                                    let v1959 : string = "System.TimeoutException"
                                    let v1960 : bool = v1956.Contains v1959 
                                    if v1960 then
                                        let v1963 : unit = ()
                                        let v1964 : (unit -> unit) = closure16(v0)
                                        let v1965 : unit = (fun () -> v1964 (); v1963) ()
                                        US6_1
                                    else
                                        let v2006 : unit = ()
                                        let v2007 : (unit -> unit) = closure17(v0, v1955)
                                        let v2008 : unit = (fun () -> v2007 (); v2006) ()
                                        US6_1
                                | US8_0(v1953) -> (* Ok *)
                                    US6_0(v1953)
                            return v2076 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2077 : Async<US6> = _v1951 
                    let _v1808 = v2077 
                    #endif
                    let v2078 : Async<US6> = _v1808 
                    return! v2078 
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v2083 : Async<US6> = _v1638 
            let _v1176 = v2083 
            #endif
            let v2084 : Async<US6> = _v1176 
            let _v247 = v2084 
            #endif
            let v2089 : Async<US6> = _v247 
            let! v2089 = v2089 
            let v2094 : US6 = v2089 
            let v2097 : bool =
                match v2094 with
                | US6_1 -> (* None *)
                    false
                | US6_0(v2095) -> (* Some *)
                    v2095
            return v2097 
            (*
            ()
        *)
        }
        (*
        ()
    *)
    let v2098 : Async<bool> = _v19 
    let _v3 = v2098 
    #endif
#else
    let v2099 : unit = ()
    let _v2099 =
        async {
            let v2100 : unit = ()
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2101 : Async<bool> = null |> unbox<Async<bool>>
            let _v2100 = v2101 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2104 : Async<bool> = null |> unbox<Async<bool>>
            let _v2100 = v2104 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2107 : Async<bool> = null |> unbox<Async<bool>>
            let _v2100 = v2107 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2110 : Async<bool> = null |> unbox<Async<bool>>
            let _v2100 = v2110 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2113 : Async<bool> = null |> unbox<Async<bool>>
            let _v2100 = v2113 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2116 : unit = ()
            let _v2116 =
                async {
                    let v2117 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                    let! v2117 = v2117 
                    let v2118 : System.Threading.CancellationToken = v2117 
                    let v2119 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                    use v2119 = v2119 
                    let v2120 : System.Net.Sockets.TcpClient = v2119 
                    try
                    let v2121 : System.Threading.Tasks.ValueTask = v2120.ConnectAsync (v1, v2, v2118)
                    let v2122 : (unit -> System.Threading.Tasks.Task) = v2121.AsTask
                    let v2123 : System.Threading.Tasks.Task = v2122 ()
                    let v2124 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2125 : Async<unit> = null |> unbox<Async<unit>>
                    let _v2124 = v2125 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2128 : Async<unit> = null |> unbox<Async<unit>>
                    let _v2124 = v2128 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2131 : Async<unit> = null |> unbox<Async<unit>>
                    let _v2124 = v2131 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2134 : Async<unit> = null |> unbox<Async<unit>>
                    let _v2124 = v2134 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2137 : Async<unit> = null |> unbox<Async<unit>>
                    let _v2124 = v2137 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2140 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                    let v2141 : Async<unit> = v2140 v2123
                    let _v2124 = v2141 
                    #endif
#else
                    let v2142 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                    let v2143 : Async<unit> = v2142 v2123
                    let _v2124 = v2143 
                    #endif
                    let v2144 : Async<unit> = _v2124 
                    do! v2144 
                    return true 
                    with ex ->
                        let v2149 : exn = ex
                        let v2150 : unit = ()
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2151 : string = $"%A{v2149}"
                        let _v2150 = v2151 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2154 : string = $"%A{v2149}"
                        let _v2150 = v2154 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2157 : string = $"%A{v2149}"
                        let _v2150 = v2157 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2160 : string = $"%A{v2149}"
                        let _v2150 = v2160 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2163 : string = $"%A{v2149}"
                        let _v2150 = v2163 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2166 : string = $"%A{v2149}"
                        let _v2150 = v2166 
                        #endif
#else
                        let v2169 : string = $"{v2149.GetType ()}: {v2149.Message}"
                        let _v2150 = v2169 
                        #endif
                        let v2170 : string = _v2150 
                        let v2175 : unit = ()
                        let v2176 : (unit -> unit) = closure5(v2, v2170)
                        let v2177 : unit = (fun () -> v2176 (); v2175) ()
                        return false 
                        (*
                        ()
                    *)
                    (*
                    let v2217 : bool = *)
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v2218 : Async<bool> = _v2116 
            let _v2100 = v2218 
            #endif
#else
            let v2219 : unit = ()
            let _v2219 =
                async {
                    let v2220 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                    let! v2220 = v2220 
                    let v2221 : System.Threading.CancellationToken = v2220 
                    let v2222 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                    use v2222 = v2222 
                    let v2223 : System.Net.Sockets.TcpClient = v2222 
                    try
                    let v2224 : System.Threading.Tasks.ValueTask = v2223.ConnectAsync (v1, v2, v2221)
                    let v2225 : (unit -> System.Threading.Tasks.Task) = v2224.AsTask
                    let v2226 : System.Threading.Tasks.Task = v2225 ()
                    let v2227 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2228 : Async<unit> = null |> unbox<Async<unit>>
                    let _v2227 = v2228 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2231 : Async<unit> = null |> unbox<Async<unit>>
                    let _v2227 = v2231 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2234 : Async<unit> = null |> unbox<Async<unit>>
                    let _v2227 = v2234 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2237 : Async<unit> = null |> unbox<Async<unit>>
                    let _v2227 = v2237 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2240 : Async<unit> = null |> unbox<Async<unit>>
                    let _v2227 = v2240 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2243 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                    let v2244 : Async<unit> = v2243 v2226
                    let _v2227 = v2244 
                    #endif
#else
                    let v2245 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                    let v2246 : Async<unit> = v2245 v2226
                    let _v2227 = v2246 
                    #endif
                    let v2247 : Async<unit> = _v2227 
                    do! v2247 
                    return true 
                    with ex ->
                        let v2252 : exn = ex
                        let v2253 : unit = ()
                        
#if FABLE_COMPILER || WASM || CONTRACT
                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                        let v2254 : string = $"%A{v2252}"
                        let _v2253 = v2254 
                        #endif
#if FABLE_COMPILER_RUST && WASM
                        let v2257 : string = $"%A{v2252}"
                        let _v2253 = v2257 
                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                        let v2260 : string = $"%A{v2252}"
                        let _v2253 = v2260 
                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                        let v2263 : string = $"%A{v2252}"
                        let _v2253 = v2263 
                        #endif
#if FABLE_COMPILER_PYTHON
                        let v2266 : string = $"%A{v2252}"
                        let _v2253 = v2266 
                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                        let v2269 : string = $"%A{v2252}"
                        let _v2253 = v2269 
                        #endif
#else
                        let v2272 : string = $"{v2252.GetType ()}: {v2252.Message}"
                        let _v2253 = v2272 
                        #endif
                        let v2273 : string = _v2253 
                        let v2278 : unit = ()
                        let v2279 : (unit -> unit) = closure5(v2, v2273)
                        let v2280 : unit = (fun () -> v2279 (); v2278) ()
                        return false 
                        (*
                        ()
                    *)
                    (*
                    let v2320 : bool = *)
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v2321 : Async<bool> = _v2219 
            let _v2100 = v2321 
            #endif
            let v2322 : Async<bool> = _v2100 
            let v2327 : unit = ()
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2328 : Async<US6> = null |> unbox<Async<US6>>
            let _v2327 = v2328 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2331 : Async<US6> = null |> unbox<Async<US6>>
            let _v2327 = v2331 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2334 : Async<US6> = null |> unbox<Async<US6>>
            let _v2327 = v2334 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2337 : Async<US6> = null |> unbox<Async<US6>>
            let _v2327 = v2337 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2340 : Async<US6> = null |> unbox<Async<US6>>
            let _v2327 = v2340 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2343 : unit = ()
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v2344 : Async<US6> = null |> unbox<Async<US6>>
            let _v2343 = v2344 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v2347 : Async<US6> = null |> unbox<Async<US6>>
            let _v2343 = v2347 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v2350 : Async<US6> = null |> unbox<Async<US6>>
            let _v2343 = v2350 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v2353 : Async<US6> = null |> unbox<Async<US6>>
            let _v2343 = v2353 
            #endif
#if FABLE_COMPILER_PYTHON
            let v2356 : Async<US6> = null |> unbox<Async<US6>>
            let _v2343 = v2356 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v2359 : unit = ()
            let _v2359 =
                async {
                    let v2360 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2361 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v2360 = v2361 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2364 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v2360 = v2364 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2367 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v2360 = v2367 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2370 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v2360 = v2370 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2373 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v2360 = v2373 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2376 : Async<Async<bool>> = Async.StartChild (v2322, v0)
                    let _v2360 = v2376 
                    #endif
#else
                    let v2377 : Async<Async<bool>> = Async.StartChild (v2322, v0)
                    let _v2360 = v2377 
                    #endif
                    let v2378 : Async<Async<bool>> = _v2360 
                    let! v2378 = v2378 
                    let v2383 : Async<bool> = v2378 
                    let v2384 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2385 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v2384 = v2385 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2388 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v2384 = v2388 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2391 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v2384 = v2391 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2394 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v2384 = v2394 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2397 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v2384 = v2397 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2400 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v2401 : Async<Choice<bool, exn>> = v2400 v2383
                    let _v2384 = v2401 
                    #endif
#else
                    let v2402 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v2403 : Async<Choice<bool, exn>> = v2402 v2383
                    let _v2384 = v2403 
                    #endif
                    let v2404 : Async<Choice<bool, exn>> = _v2384 
                    let v2409 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2410 : Async<US7> = null |> unbox<Async<US7>>
                    let _v2409 = v2410 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2413 : Async<US7> = null |> unbox<Async<US7>>
                    let _v2409 = v2413 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2416 : Async<US7> = null |> unbox<Async<US7>>
                    let _v2409 = v2416 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2419 : Async<US7> = null |> unbox<Async<US7>>
                    let _v2409 = v2419 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2422 : Async<US7> = null |> unbox<Async<US7>>
                    let _v2409 = v2422 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2425 : unit = ()
                    let _v2425 =
                        async {
                            let! v2404 = v2404 
                            let v2426 : Choice<bool, exn> = v2404 
                            let v2427 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v2428 : US7 = null |> unbox<US7>
                            let _v2427 = v2428 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v2431 : US7 = null |> unbox<US7>
                            let _v2427 = v2431 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v2434 : US7 = null |> unbox<US7>
                            let _v2427 = v2434 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v2437 : US7 = null |> unbox<US7>
                            let _v2427 = v2437 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v2440 : US7 = null |> unbox<US7>
                            let _v2427 = v2440 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v2443 : (bool -> US7) = method19()
                            let v2444 : (exn -> US7) = method20()
                            let v2445 : US7 = match v2426 with Choice1Of2 x -> v2443 x | Choice2Of2 x -> v2444 x
                            let _v2427 = v2445 
                            #endif
#else
                            let v2446 : (bool -> US7) = method19()
                            let v2447 : (exn -> US7) = method20()
                            let v2448 : US7 = match v2426 with Choice1Of2 x -> v2446 x | Choice2Of2 x -> v2447 x
                            let _v2427 = v2448 
                            #endif
                            let v2449 : US7 = _v2427 
                            return v2449 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2454 : Async<US7> = _v2425 
                    let _v2409 = v2454 
                    #endif
#else
                    let v2455 : unit = ()
                    let _v2455 =
                        async {
                            let! v2404 = v2404 
                            let v2456 : Choice<bool, exn> = v2404 
                            let v2457 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v2458 : US7 = null |> unbox<US7>
                            let _v2457 = v2458 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v2461 : US7 = null |> unbox<US7>
                            let _v2457 = v2461 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v2464 : US7 = null |> unbox<US7>
                            let _v2457 = v2464 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v2467 : US7 = null |> unbox<US7>
                            let _v2457 = v2467 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v2470 : US7 = null |> unbox<US7>
                            let _v2457 = v2470 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v2473 : (bool -> US7) = method19()
                            let v2474 : (exn -> US7) = method20()
                            let v2475 : US7 = match v2456 with Choice1Of2 x -> v2473 x | Choice2Of2 x -> v2474 x
                            let _v2457 = v2475 
                            #endif
#else
                            let v2476 : (bool -> US7) = method19()
                            let v2477 : (exn -> US7) = method20()
                            let v2478 : US7 = match v2456 with Choice1Of2 x -> v2476 x | Choice2Of2 x -> v2477 x
                            let _v2457 = v2478 
                            #endif
                            let v2479 : US7 = _v2457 
                            return v2479 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2484 : Async<US7> = _v2455 
                    let _v2409 = v2484 
                    #endif
                    let v2485 : Async<US7> = _v2409 
                    let v2490 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2491 : Async<US8> = null |> unbox<Async<US8>>
                    let _v2490 = v2491 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2494 : Async<US8> = null |> unbox<Async<US8>>
                    let _v2490 = v2494 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2497 : Async<US8> = null |> unbox<Async<US8>>
                    let _v2490 = v2497 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2500 : Async<US8> = null |> unbox<Async<US8>>
                    let _v2490 = v2500 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2503 : Async<US8> = null |> unbox<Async<US8>>
                    let _v2490 = v2503 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2506 : unit = ()
                    let _v2506 =
                        async {
                            let! v2485 = v2485 
                            let v2507 : US7 = v2485 
                            let v2513 : US8 =
                                match v2507 with
                                | US7_0(v2508) -> (* C1of2 *)
                                    US8_0(v2508)
                                | US7_1(v2510) -> (* C2of2 *)
                                    US8_1(v2510)
                            return v2513 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2514 : Async<US8> = _v2506 
                    let _v2490 = v2514 
                    #endif
#else
                    let v2515 : unit = ()
                    let _v2515 =
                        async {
                            let! v2485 = v2485 
                            let v2516 : US7 = v2485 
                            let v2522 : US8 =
                                match v2516 with
                                | US7_0(v2517) -> (* C1of2 *)
                                    US8_0(v2517)
                                | US7_1(v2519) -> (* C2of2 *)
                                    US8_1(v2519)
                            return v2522 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2523 : Async<US8> = _v2515 
                    let _v2490 = v2523 
                    #endif
                    let v2524 : Async<US8> = _v2490 
                    let v2529 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2530 : Async<US6> = null |> unbox<Async<US6>>
                    let _v2529 = v2530 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2533 : Async<US6> = null |> unbox<Async<US6>>
                    let _v2529 = v2533 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2536 : Async<US6> = null |> unbox<Async<US6>>
                    let _v2529 = v2536 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2539 : Async<US6> = null |> unbox<Async<US6>>
                    let _v2529 = v2539 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2542 : Async<US6> = null |> unbox<Async<US6>>
                    let _v2529 = v2542 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2545 : unit = ()
                    let _v2545 =
                        async {
                            let! v2524 = v2524 
                            let v2546 : US8 = v2524 
                            let v2670 : US6 =
                                match v2546 with
                                | US8_1(v2549) -> (* Error *)
                                    let v2550 : string = $"%A{v2549}"
                                    let v2553 : string = "System.TimeoutException"
                                    let v2554 : bool = v2550.Contains v2553 
                                    if v2554 then
                                        let v2557 : unit = ()
                                        let v2558 : (unit -> unit) = closure16(v0)
                                        let v2559 : unit = (fun () -> v2558 (); v2557) ()
                                        US6_1
                                    else
                                        let v2600 : unit = ()
                                        let v2601 : (unit -> unit) = closure17(v0, v2549)
                                        let v2602 : unit = (fun () -> v2601 (); v2600) ()
                                        US6_1
                                | US8_0(v2547) -> (* Ok *)
                                    US6_0(v2547)
                            return v2670 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2671 : Async<US6> = _v2545 
                    let _v2529 = v2671 
                    #endif
#else
                    let v2672 : unit = ()
                    let _v2672 =
                        async {
                            let! v2524 = v2524 
                            let v2673 : US8 = v2524 
                            let v2797 : US6 =
                                match v2673 with
                                | US8_1(v2676) -> (* Error *)
                                    let v2677 : string = $"%A{v2676}"
                                    let v2680 : string = "System.TimeoutException"
                                    let v2681 : bool = v2677.Contains v2680 
                                    if v2681 then
                                        let v2684 : unit = ()
                                        let v2685 : (unit -> unit) = closure16(v0)
                                        let v2686 : unit = (fun () -> v2685 (); v2684) ()
                                        US6_1
                                    else
                                        let v2727 : unit = ()
                                        let v2728 : (unit -> unit) = closure17(v0, v2676)
                                        let v2729 : unit = (fun () -> v2728 (); v2727) ()
                                        US6_1
                                | US8_0(v2674) -> (* Ok *)
                                    US6_0(v2674)
                            return v2797 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2798 : Async<US6> = _v2672 
                    let _v2529 = v2798 
                    #endif
                    let v2799 : Async<US6> = _v2529 
                    return! v2799 
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v2804 : Async<US6> = _v2359 
            let _v2343 = v2804 
            #endif
#else
            let v2805 : unit = ()
            let _v2805 =
                async {
                    let v2806 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2807 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v2806 = v2807 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2810 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v2806 = v2810 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2813 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v2806 = v2813 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2816 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v2806 = v2816 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2819 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v2806 = v2819 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2822 : Async<Async<bool>> = Async.StartChild (v2322, v0)
                    let _v2806 = v2822 
                    #endif
#else
                    let v2823 : Async<Async<bool>> = Async.StartChild (v2322, v0)
                    let _v2806 = v2823 
                    #endif
                    let v2824 : Async<Async<bool>> = _v2806 
                    let! v2824 = v2824 
                    let v2829 : Async<bool> = v2824 
                    let v2830 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2831 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v2830 = v2831 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2834 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v2830 = v2834 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2837 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v2830 = v2837 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2840 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v2830 = v2840 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2843 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v2830 = v2843 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2846 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v2847 : Async<Choice<bool, exn>> = v2846 v2829
                    let _v2830 = v2847 
                    #endif
#else
                    let v2848 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v2849 : Async<Choice<bool, exn>> = v2848 v2829
                    let _v2830 = v2849 
                    #endif
                    let v2850 : Async<Choice<bool, exn>> = _v2830 
                    let v2855 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2856 : Async<US7> = null |> unbox<Async<US7>>
                    let _v2855 = v2856 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2859 : Async<US7> = null |> unbox<Async<US7>>
                    let _v2855 = v2859 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2862 : Async<US7> = null |> unbox<Async<US7>>
                    let _v2855 = v2862 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2865 : Async<US7> = null |> unbox<Async<US7>>
                    let _v2855 = v2865 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2868 : Async<US7> = null |> unbox<Async<US7>>
                    let _v2855 = v2868 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2871 : unit = ()
                    let _v2871 =
                        async {
                            let! v2850 = v2850 
                            let v2872 : Choice<bool, exn> = v2850 
                            let v2873 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v2874 : US7 = null |> unbox<US7>
                            let _v2873 = v2874 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v2877 : US7 = null |> unbox<US7>
                            let _v2873 = v2877 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v2880 : US7 = null |> unbox<US7>
                            let _v2873 = v2880 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v2883 : US7 = null |> unbox<US7>
                            let _v2873 = v2883 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v2886 : US7 = null |> unbox<US7>
                            let _v2873 = v2886 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v2889 : (bool -> US7) = method19()
                            let v2890 : (exn -> US7) = method20()
                            let v2891 : US7 = match v2872 with Choice1Of2 x -> v2889 x | Choice2Of2 x -> v2890 x
                            let _v2873 = v2891 
                            #endif
#else
                            let v2892 : (bool -> US7) = method19()
                            let v2893 : (exn -> US7) = method20()
                            let v2894 : US7 = match v2872 with Choice1Of2 x -> v2892 x | Choice2Of2 x -> v2893 x
                            let _v2873 = v2894 
                            #endif
                            let v2895 : US7 = _v2873 
                            return v2895 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2900 : Async<US7> = _v2871 
                    let _v2855 = v2900 
                    #endif
#else
                    let v2901 : unit = ()
                    let _v2901 =
                        async {
                            let! v2850 = v2850 
                            let v2902 : Choice<bool, exn> = v2850 
                            let v2903 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v2904 : US7 = null |> unbox<US7>
                            let _v2903 = v2904 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v2907 : US7 = null |> unbox<US7>
                            let _v2903 = v2907 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v2910 : US7 = null |> unbox<US7>
                            let _v2903 = v2910 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v2913 : US7 = null |> unbox<US7>
                            let _v2903 = v2913 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v2916 : US7 = null |> unbox<US7>
                            let _v2903 = v2916 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v2919 : (bool -> US7) = method19()
                            let v2920 : (exn -> US7) = method20()
                            let v2921 : US7 = match v2902 with Choice1Of2 x -> v2919 x | Choice2Of2 x -> v2920 x
                            let _v2903 = v2921 
                            #endif
#else
                            let v2922 : (bool -> US7) = method19()
                            let v2923 : (exn -> US7) = method20()
                            let v2924 : US7 = match v2902 with Choice1Of2 x -> v2922 x | Choice2Of2 x -> v2923 x
                            let _v2903 = v2924 
                            #endif
                            let v2925 : US7 = _v2903 
                            return v2925 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2930 : Async<US7> = _v2901 
                    let _v2855 = v2930 
                    #endif
                    let v2931 : Async<US7> = _v2855 
                    let v2936 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2937 : Async<US8> = null |> unbox<Async<US8>>
                    let _v2936 = v2937 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2940 : Async<US8> = null |> unbox<Async<US8>>
                    let _v2936 = v2940 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2943 : Async<US8> = null |> unbox<Async<US8>>
                    let _v2936 = v2943 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2946 : Async<US8> = null |> unbox<Async<US8>>
                    let _v2936 = v2946 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2949 : Async<US8> = null |> unbox<Async<US8>>
                    let _v2936 = v2949 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2952 : unit = ()
                    let _v2952 =
                        async {
                            let! v2931 = v2931 
                            let v2953 : US7 = v2931 
                            let v2959 : US8 =
                                match v2953 with
                                | US7_0(v2954) -> (* C1of2 *)
                                    US8_0(v2954)
                                | US7_1(v2956) -> (* C2of2 *)
                                    US8_1(v2956)
                            return v2959 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2960 : Async<US8> = _v2952 
                    let _v2936 = v2960 
                    #endif
#else
                    let v2961 : unit = ()
                    let _v2961 =
                        async {
                            let! v2931 = v2931 
                            let v2962 : US7 = v2931 
                            let v2968 : US8 =
                                match v2962 with
                                | US7_0(v2963) -> (* C1of2 *)
                                    US8_0(v2963)
                                | US7_1(v2965) -> (* C2of2 *)
                                    US8_1(v2965)
                            return v2968 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2969 : Async<US8> = _v2961 
                    let _v2936 = v2969 
                    #endif
                    let v2970 : Async<US8> = _v2936 
                    let v2975 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v2976 : Async<US6> = null |> unbox<Async<US6>>
                    let _v2975 = v2976 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v2979 : Async<US6> = null |> unbox<Async<US6>>
                    let _v2975 = v2979 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v2982 : Async<US6> = null |> unbox<Async<US6>>
                    let _v2975 = v2982 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v2985 : Async<US6> = null |> unbox<Async<US6>>
                    let _v2975 = v2985 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v2988 : Async<US6> = null |> unbox<Async<US6>>
                    let _v2975 = v2988 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v2991 : unit = ()
                    let _v2991 =
                        async {
                            let! v2970 = v2970 
                            let v2992 : US8 = v2970 
                            let v3116 : US6 =
                                match v2992 with
                                | US8_1(v2995) -> (* Error *)
                                    let v2996 : string = $"%A{v2995}"
                                    let v2999 : string = "System.TimeoutException"
                                    let v3000 : bool = v2996.Contains v2999 
                                    if v3000 then
                                        let v3003 : unit = ()
                                        let v3004 : (unit -> unit) = closure16(v0)
                                        let v3005 : unit = (fun () -> v3004 (); v3003) ()
                                        US6_1
                                    else
                                        let v3046 : unit = ()
                                        let v3047 : (unit -> unit) = closure17(v0, v2995)
                                        let v3048 : unit = (fun () -> v3047 (); v3046) ()
                                        US6_1
                                | US8_0(v2993) -> (* Ok *)
                                    US6_0(v2993)
                            return v3116 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3117 : Async<US6> = _v2991 
                    let _v2975 = v3117 
                    #endif
#else
                    let v3118 : unit = ()
                    let _v3118 =
                        async {
                            let! v2970 = v2970 
                            let v3119 : US8 = v2970 
                            let v3243 : US6 =
                                match v3119 with
                                | US8_1(v3122) -> (* Error *)
                                    let v3123 : string = $"%A{v3122}"
                                    let v3126 : string = "System.TimeoutException"
                                    let v3127 : bool = v3123.Contains v3126 
                                    if v3127 then
                                        let v3130 : unit = ()
                                        let v3131 : (unit -> unit) = closure16(v0)
                                        let v3132 : unit = (fun () -> v3131 (); v3130) ()
                                        US6_1
                                    else
                                        let v3173 : unit = ()
                                        let v3174 : (unit -> unit) = closure17(v0, v3122)
                                        let v3175 : unit = (fun () -> v3174 (); v3173) ()
                                        US6_1
                                | US8_0(v3120) -> (* Ok *)
                                    US6_0(v3120)
                            return v3243 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3244 : Async<US6> = _v3118 
                    let _v2975 = v3244 
                    #endif
                    let v3245 : Async<US6> = _v2975 
                    return! v3245 
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v3250 : Async<US6> = _v2805 
            let _v2343 = v3250 
            #endif
            let v3251 : Async<US6> = _v2343 
            let _v2327 = v3251 
            #endif
#else
            let v3256 : unit = ()
            
#if FABLE_COMPILER || WASM || CONTRACT
            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
            let v3257 : Async<US6> = null |> unbox<Async<US6>>
            let _v3256 = v3257 
            #endif
#if FABLE_COMPILER_RUST && WASM
            let v3260 : Async<US6> = null |> unbox<Async<US6>>
            let _v3256 = v3260 
            #endif
#if FABLE_COMPILER_RUST && CONTRACT
            let v3263 : Async<US6> = null |> unbox<Async<US6>>
            let _v3256 = v3263 
            #endif
#if FABLE_COMPILER_TYPESCRIPT
            let v3266 : Async<US6> = null |> unbox<Async<US6>>
            let _v3256 = v3266 
            #endif
#if FABLE_COMPILER_PYTHON
            let v3269 : Async<US6> = null |> unbox<Async<US6>>
            let _v3256 = v3269 
            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
            let v3272 : unit = ()
            let _v3272 =
                async {
                    let v3273 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v3274 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v3273 = v3274 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v3277 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v3273 = v3277 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v3280 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v3273 = v3280 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v3283 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v3273 = v3283 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v3286 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v3273 = v3286 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v3289 : Async<Async<bool>> = Async.StartChild (v2322, v0)
                    let _v3273 = v3289 
                    #endif
#else
                    let v3290 : Async<Async<bool>> = Async.StartChild (v2322, v0)
                    let _v3273 = v3290 
                    #endif
                    let v3291 : Async<Async<bool>> = _v3273 
                    let! v3291 = v3291 
                    let v3296 : Async<bool> = v3291 
                    let v3297 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v3298 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v3297 = v3298 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v3301 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v3297 = v3301 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v3304 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v3297 = v3304 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v3307 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v3297 = v3307 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v3310 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v3297 = v3310 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v3313 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v3314 : Async<Choice<bool, exn>> = v3313 v3296
                    let _v3297 = v3314 
                    #endif
#else
                    let v3315 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v3316 : Async<Choice<bool, exn>> = v3315 v3296
                    let _v3297 = v3316 
                    #endif
                    let v3317 : Async<Choice<bool, exn>> = _v3297 
                    let v3322 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v3323 : Async<US7> = null |> unbox<Async<US7>>
                    let _v3322 = v3323 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v3326 : Async<US7> = null |> unbox<Async<US7>>
                    let _v3322 = v3326 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v3329 : Async<US7> = null |> unbox<Async<US7>>
                    let _v3322 = v3329 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v3332 : Async<US7> = null |> unbox<Async<US7>>
                    let _v3322 = v3332 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v3335 : Async<US7> = null |> unbox<Async<US7>>
                    let _v3322 = v3335 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v3338 : unit = ()
                    let _v3338 =
                        async {
                            let! v3317 = v3317 
                            let v3339 : Choice<bool, exn> = v3317 
                            let v3340 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v3341 : US7 = null |> unbox<US7>
                            let _v3340 = v3341 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v3344 : US7 = null |> unbox<US7>
                            let _v3340 = v3344 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v3347 : US7 = null |> unbox<US7>
                            let _v3340 = v3347 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v3350 : US7 = null |> unbox<US7>
                            let _v3340 = v3350 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v3353 : US7 = null |> unbox<US7>
                            let _v3340 = v3353 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v3356 : (bool -> US7) = method19()
                            let v3357 : (exn -> US7) = method20()
                            let v3358 : US7 = match v3339 with Choice1Of2 x -> v3356 x | Choice2Of2 x -> v3357 x
                            let _v3340 = v3358 
                            #endif
#else
                            let v3359 : (bool -> US7) = method19()
                            let v3360 : (exn -> US7) = method20()
                            let v3361 : US7 = match v3339 with Choice1Of2 x -> v3359 x | Choice2Of2 x -> v3360 x
                            let _v3340 = v3361 
                            #endif
                            let v3362 : US7 = _v3340 
                            return v3362 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3367 : Async<US7> = _v3338 
                    let _v3322 = v3367 
                    #endif
#else
                    let v3368 : unit = ()
                    let _v3368 =
                        async {
                            let! v3317 = v3317 
                            let v3369 : Choice<bool, exn> = v3317 
                            let v3370 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v3371 : US7 = null |> unbox<US7>
                            let _v3370 = v3371 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v3374 : US7 = null |> unbox<US7>
                            let _v3370 = v3374 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v3377 : US7 = null |> unbox<US7>
                            let _v3370 = v3377 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v3380 : US7 = null |> unbox<US7>
                            let _v3370 = v3380 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v3383 : US7 = null |> unbox<US7>
                            let _v3370 = v3383 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v3386 : (bool -> US7) = method19()
                            let v3387 : (exn -> US7) = method20()
                            let v3388 : US7 = match v3369 with Choice1Of2 x -> v3386 x | Choice2Of2 x -> v3387 x
                            let _v3370 = v3388 
                            #endif
#else
                            let v3389 : (bool -> US7) = method19()
                            let v3390 : (exn -> US7) = method20()
                            let v3391 : US7 = match v3369 with Choice1Of2 x -> v3389 x | Choice2Of2 x -> v3390 x
                            let _v3370 = v3391 
                            #endif
                            let v3392 : US7 = _v3370 
                            return v3392 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3397 : Async<US7> = _v3368 
                    let _v3322 = v3397 
                    #endif
                    let v3398 : Async<US7> = _v3322 
                    let v3403 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v3404 : Async<US8> = null |> unbox<Async<US8>>
                    let _v3403 = v3404 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v3407 : Async<US8> = null |> unbox<Async<US8>>
                    let _v3403 = v3407 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v3410 : Async<US8> = null |> unbox<Async<US8>>
                    let _v3403 = v3410 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v3413 : Async<US8> = null |> unbox<Async<US8>>
                    let _v3403 = v3413 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v3416 : Async<US8> = null |> unbox<Async<US8>>
                    let _v3403 = v3416 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v3419 : unit = ()
                    let _v3419 =
                        async {
                            let! v3398 = v3398 
                            let v3420 : US7 = v3398 
                            let v3426 : US8 =
                                match v3420 with
                                | US7_0(v3421) -> (* C1of2 *)
                                    US8_0(v3421)
                                | US7_1(v3423) -> (* C2of2 *)
                                    US8_1(v3423)
                            return v3426 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3427 : Async<US8> = _v3419 
                    let _v3403 = v3427 
                    #endif
#else
                    let v3428 : unit = ()
                    let _v3428 =
                        async {
                            let! v3398 = v3398 
                            let v3429 : US7 = v3398 
                            let v3435 : US8 =
                                match v3429 with
                                | US7_0(v3430) -> (* C1of2 *)
                                    US8_0(v3430)
                                | US7_1(v3432) -> (* C2of2 *)
                                    US8_1(v3432)
                            return v3435 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3436 : Async<US8> = _v3428 
                    let _v3403 = v3436 
                    #endif
                    let v3437 : Async<US8> = _v3403 
                    let v3442 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v3443 : Async<US6> = null |> unbox<Async<US6>>
                    let _v3442 = v3443 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v3446 : Async<US6> = null |> unbox<Async<US6>>
                    let _v3442 = v3446 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v3449 : Async<US6> = null |> unbox<Async<US6>>
                    let _v3442 = v3449 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v3452 : Async<US6> = null |> unbox<Async<US6>>
                    let _v3442 = v3452 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v3455 : Async<US6> = null |> unbox<Async<US6>>
                    let _v3442 = v3455 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v3458 : unit = ()
                    let _v3458 =
                        async {
                            let! v3437 = v3437 
                            let v3459 : US8 = v3437 
                            let v3583 : US6 =
                                match v3459 with
                                | US8_1(v3462) -> (* Error *)
                                    let v3463 : string = $"%A{v3462}"
                                    let v3466 : string = "System.TimeoutException"
                                    let v3467 : bool = v3463.Contains v3466 
                                    if v3467 then
                                        let v3470 : unit = ()
                                        let v3471 : (unit -> unit) = closure16(v0)
                                        let v3472 : unit = (fun () -> v3471 (); v3470) ()
                                        US6_1
                                    else
                                        let v3513 : unit = ()
                                        let v3514 : (unit -> unit) = closure17(v0, v3462)
                                        let v3515 : unit = (fun () -> v3514 (); v3513) ()
                                        US6_1
                                | US8_0(v3460) -> (* Ok *)
                                    US6_0(v3460)
                            return v3583 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3584 : Async<US6> = _v3458 
                    let _v3442 = v3584 
                    #endif
#else
                    let v3585 : unit = ()
                    let _v3585 =
                        async {
                            let! v3437 = v3437 
                            let v3586 : US8 = v3437 
                            let v3710 : US6 =
                                match v3586 with
                                | US8_1(v3589) -> (* Error *)
                                    let v3590 : string = $"%A{v3589}"
                                    let v3593 : string = "System.TimeoutException"
                                    let v3594 : bool = v3590.Contains v3593 
                                    if v3594 then
                                        let v3597 : unit = ()
                                        let v3598 : (unit -> unit) = closure16(v0)
                                        let v3599 : unit = (fun () -> v3598 (); v3597) ()
                                        US6_1
                                    else
                                        let v3640 : unit = ()
                                        let v3641 : (unit -> unit) = closure17(v0, v3589)
                                        let v3642 : unit = (fun () -> v3641 (); v3640) ()
                                        US6_1
                                | US8_0(v3587) -> (* Ok *)
                                    US6_0(v3587)
                            return v3710 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3711 : Async<US6> = _v3585 
                    let _v3442 = v3711 
                    #endif
                    let v3712 : Async<US6> = _v3442 
                    return! v3712 
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v3717 : Async<US6> = _v3272 
            let _v3256 = v3717 
            #endif
#else
            let v3718 : unit = ()
            let _v3718 =
                async {
                    let v3719 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v3720 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v3719 = v3720 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v3723 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v3719 = v3723 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v3726 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v3719 = v3726 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v3729 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v3719 = v3729 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v3732 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                    let _v3719 = v3732 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v3735 : Async<Async<bool>> = Async.StartChild (v2322, v0)
                    let _v3719 = v3735 
                    #endif
#else
                    let v3736 : Async<Async<bool>> = Async.StartChild (v2322, v0)
                    let _v3719 = v3736 
                    #endif
                    let v3737 : Async<Async<bool>> = _v3719 
                    let! v3737 = v3737 
                    let v3742 : Async<bool> = v3737 
                    let v3743 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v3744 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v3743 = v3744 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v3747 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v3743 = v3747 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v3750 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v3743 = v3750 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v3753 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v3743 = v3753 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v3756 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                    let _v3743 = v3756 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v3759 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v3760 : Async<Choice<bool, exn>> = v3759 v3742
                    let _v3743 = v3760 
                    #endif
#else
                    let v3761 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                    let v3762 : Async<Choice<bool, exn>> = v3761 v3742
                    let _v3743 = v3762 
                    #endif
                    let v3763 : Async<Choice<bool, exn>> = _v3743 
                    let v3768 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v3769 : Async<US7> = null |> unbox<Async<US7>>
                    let _v3768 = v3769 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v3772 : Async<US7> = null |> unbox<Async<US7>>
                    let _v3768 = v3772 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v3775 : Async<US7> = null |> unbox<Async<US7>>
                    let _v3768 = v3775 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v3778 : Async<US7> = null |> unbox<Async<US7>>
                    let _v3768 = v3778 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v3781 : Async<US7> = null |> unbox<Async<US7>>
                    let _v3768 = v3781 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v3784 : unit = ()
                    let _v3784 =
                        async {
                            let! v3763 = v3763 
                            let v3785 : Choice<bool, exn> = v3763 
                            let v3786 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v3787 : US7 = null |> unbox<US7>
                            let _v3786 = v3787 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v3790 : US7 = null |> unbox<US7>
                            let _v3786 = v3790 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v3793 : US7 = null |> unbox<US7>
                            let _v3786 = v3793 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v3796 : US7 = null |> unbox<US7>
                            let _v3786 = v3796 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v3799 : US7 = null |> unbox<US7>
                            let _v3786 = v3799 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v3802 : (bool -> US7) = method19()
                            let v3803 : (exn -> US7) = method20()
                            let v3804 : US7 = match v3785 with Choice1Of2 x -> v3802 x | Choice2Of2 x -> v3803 x
                            let _v3786 = v3804 
                            #endif
#else
                            let v3805 : (bool -> US7) = method19()
                            let v3806 : (exn -> US7) = method20()
                            let v3807 : US7 = match v3785 with Choice1Of2 x -> v3805 x | Choice2Of2 x -> v3806 x
                            let _v3786 = v3807 
                            #endif
                            let v3808 : US7 = _v3786 
                            return v3808 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3813 : Async<US7> = _v3784 
                    let _v3768 = v3813 
                    #endif
#else
                    let v3814 : unit = ()
                    let _v3814 =
                        async {
                            let! v3763 = v3763 
                            let v3815 : Choice<bool, exn> = v3763 
                            let v3816 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v3817 : US7 = null |> unbox<US7>
                            let _v3816 = v3817 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v3820 : US7 = null |> unbox<US7>
                            let _v3816 = v3820 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v3823 : US7 = null |> unbox<US7>
                            let _v3816 = v3823 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v3826 : US7 = null |> unbox<US7>
                            let _v3816 = v3826 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v3829 : US7 = null |> unbox<US7>
                            let _v3816 = v3829 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v3832 : (bool -> US7) = method19()
                            let v3833 : (exn -> US7) = method20()
                            let v3834 : US7 = match v3815 with Choice1Of2 x -> v3832 x | Choice2Of2 x -> v3833 x
                            let _v3816 = v3834 
                            #endif
#else
                            let v3835 : (bool -> US7) = method19()
                            let v3836 : (exn -> US7) = method20()
                            let v3837 : US7 = match v3815 with Choice1Of2 x -> v3835 x | Choice2Of2 x -> v3836 x
                            let _v3816 = v3837 
                            #endif
                            let v3838 : US7 = _v3816 
                            return v3838 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3843 : Async<US7> = _v3814 
                    let _v3768 = v3843 
                    #endif
                    let v3844 : Async<US7> = _v3768 
                    let v3849 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v3850 : Async<US8> = null |> unbox<Async<US8>>
                    let _v3849 = v3850 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v3853 : Async<US8> = null |> unbox<Async<US8>>
                    let _v3849 = v3853 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v3856 : Async<US8> = null |> unbox<Async<US8>>
                    let _v3849 = v3856 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v3859 : Async<US8> = null |> unbox<Async<US8>>
                    let _v3849 = v3859 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v3862 : Async<US8> = null |> unbox<Async<US8>>
                    let _v3849 = v3862 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v3865 : unit = ()
                    let _v3865 =
                        async {
                            let! v3844 = v3844 
                            let v3866 : US7 = v3844 
                            let v3872 : US8 =
                                match v3866 with
                                | US7_0(v3867) -> (* C1of2 *)
                                    US8_0(v3867)
                                | US7_1(v3869) -> (* C2of2 *)
                                    US8_1(v3869)
                            return v3872 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3873 : Async<US8> = _v3865 
                    let _v3849 = v3873 
                    #endif
#else
                    let v3874 : unit = ()
                    let _v3874 =
                        async {
                            let! v3844 = v3844 
                            let v3875 : US7 = v3844 
                            let v3881 : US8 =
                                match v3875 with
                                | US7_0(v3876) -> (* C1of2 *)
                                    US8_0(v3876)
                                | US7_1(v3878) -> (* C2of2 *)
                                    US8_1(v3878)
                            return v3881 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v3882 : Async<US8> = _v3874 
                    let _v3849 = v3882 
                    #endif
                    let v3883 : Async<US8> = _v3849 
                    let v3888 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v3889 : Async<US6> = null |> unbox<Async<US6>>
                    let _v3888 = v3889 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v3892 : Async<US6> = null |> unbox<Async<US6>>
                    let _v3888 = v3892 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v3895 : Async<US6> = null |> unbox<Async<US6>>
                    let _v3888 = v3895 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v3898 : Async<US6> = null |> unbox<Async<US6>>
                    let _v3888 = v3898 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v3901 : Async<US6> = null |> unbox<Async<US6>>
                    let _v3888 = v3901 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v3904 : unit = ()
                    let _v3904 =
                        async {
                            let! v3883 = v3883 
                            let v3905 : US8 = v3883 
                            let v4029 : US6 =
                                match v3905 with
                                | US8_1(v3908) -> (* Error *)
                                    let v3909 : string = $"%A{v3908}"
                                    let v3912 : string = "System.TimeoutException"
                                    let v3913 : bool = v3909.Contains v3912 
                                    if v3913 then
                                        let v3916 : unit = ()
                                        let v3917 : (unit -> unit) = closure16(v0)
                                        let v3918 : unit = (fun () -> v3917 (); v3916) ()
                                        US6_1
                                    else
                                        let v3959 : unit = ()
                                        let v3960 : (unit -> unit) = closure17(v0, v3908)
                                        let v3961 : unit = (fun () -> v3960 (); v3959) ()
                                        US6_1
                                | US8_0(v3906) -> (* Ok *)
                                    US6_0(v3906)
                            return v4029 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v4030 : Async<US6> = _v3904 
                    let _v3888 = v4030 
                    #endif
#else
                    let v4031 : unit = ()
                    let _v4031 =
                        async {
                            let! v3883 = v3883 
                            let v4032 : US8 = v3883 
                            let v4156 : US6 =
                                match v4032 with
                                | US8_1(v4035) -> (* Error *)
                                    let v4036 : string = $"%A{v4035}"
                                    let v4039 : string = "System.TimeoutException"
                                    let v4040 : bool = v4036.Contains v4039 
                                    if v4040 then
                                        let v4043 : unit = ()
                                        let v4044 : (unit -> unit) = closure16(v0)
                                        let v4045 : unit = (fun () -> v4044 (); v4043) ()
                                        US6_1
                                    else
                                        let v4086 : unit = ()
                                        let v4087 : (unit -> unit) = closure17(v0, v4035)
                                        let v4088 : unit = (fun () -> v4087 (); v4086) ()
                                        US6_1
                                | US8_0(v4033) -> (* Ok *)
                                    US6_0(v4033)
                            return v4156 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v4157 : Async<US6> = _v4031 
                    let _v3888 = v4157 
                    #endif
                    let v4158 : Async<US6> = _v3888 
                    return! v4158 
                    (*
                    ()
                *)
                }
                (*
                ()
            *)
            let v4163 : Async<US6> = _v3718 
            let _v3256 = v4163 
            #endif
            let v4164 : Async<US6> = _v3256 
            let _v2327 = v4164 
            #endif
            let v4169 : Async<US6> = _v2327 
            let! v4169 = v4169 
            let v4174 : US6 = v4169 
            let v4177 : bool =
                match v4174 with
                | US6_1 -> (* None *)
                    false
                | US6_0(v4175) -> (* Some *)
                    v4175
            return v4177 
            (*
            ()
        *)
        }
        (*
        ()
    *)
    let v4178 : Async<bool> = _v2099 
    let _v3 = v4178 
    #endif
    let v4179 : Async<bool> = _v3 
    v4179
and closure12 (v0 : int32) (v1 : string) : (int32 -> Async<bool>) =
    closure13(v0, v1)
and closure11 () (v0 : int32) : (string -> (int32 -> Async<bool>)) =
    closure12(v0)
and closure22 () (v0 : int32) : US9 =
    US9_0(v0)
and method27 () : (int32 -> US9) =
    closure22()
and method29 (v0 : int32, v1 : int64, v2 : int32 option, v3 : bool) : string =
    let v4 : string = method13()
    let v5 : Mut3 = {l0 = v4} : Mut3
    let v6 : string = "{ "
    let v7 : string = $"{v6}"
    let v10 : unit = ()
    let v11 : (unit -> unit) = closure7(v5, v7)
    let v12 : unit = (fun () -> v11 (); v10) ()
    let v15 : string = "port"
    let v16 : string = $"{v15}"
    let v19 : unit = ()
    let v20 : (unit -> unit) = closure7(v5, v16)
    let v21 : unit = (fun () -> v20 (); v19) ()
    let v24 : string = " = "
    let v25 : string = $"{v24}"
    let v28 : unit = ()
    let v29 : (unit -> unit) = closure7(v5, v25)
    let v30 : unit = (fun () -> v29 (); v28) ()
    let v33 : string = $"{v0}"
    let v36 : unit = ()
    let v37 : (unit -> unit) = closure7(v5, v33)
    let v38 : unit = (fun () -> v37 (); v36) ()
    let v41 : string = "; "
    let v42 : string = $"{v41}"
    let v45 : unit = ()
    let v46 : (unit -> unit) = closure7(v5, v42)
    let v47 : unit = (fun () -> v46 (); v45) ()
    let v50 : string = "retry"
    let v51 : string = $"{v50}"
    let v54 : unit = ()
    let v55 : (unit -> unit) = closure7(v5, v51)
    let v56 : unit = (fun () -> v55 (); v54) ()
    let v59 : string = $"{v24}"
    let v62 : unit = ()
    let v63 : (unit -> unit) = closure7(v5, v59)
    let v64 : unit = (fun () -> v63 (); v62) ()
    let v67 : string = $"{v1}"
    let v70 : unit = ()
    let v71 : (unit -> unit) = closure7(v5, v67)
    let v72 : unit = (fun () -> v71 (); v70) ()
    let v75 : string = $"{v41}"
    let v78 : unit = ()
    let v79 : (unit -> unit) = closure7(v5, v75)
    let v80 : unit = (fun () -> v79 (); v78) ()
    let v83 : string = "timeout"
    let v84 : string = $"{v83}"
    let v87 : unit = ()
    let v88 : (unit -> unit) = closure7(v5, v84)
    let v89 : unit = (fun () -> v88 (); v87) ()
    let v92 : string = $"{v24}"
    let v95 : unit = ()
    let v96 : (unit -> unit) = closure7(v5, v92)
    let v97 : unit = (fun () -> v96 (); v95) ()
    let v100 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v101 : string = "format!(\"{:#?}\", $0)"
    let v102 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v101 
    let v103 : string = "fable_library_rust::String_::fromString($0)"
    let v104 : string = Fable.Core.RustInterop.emitRustExpr v102 v103 
    let _v100 = v104 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v105 : string = "format!(\"{:#?}\", $0)"
    let v106 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v105 
    let v107 : string = "fable_library_rust::String_::fromString($0)"
    let v108 : string = Fable.Core.RustInterop.emitRustExpr v106 v107 
    let _v100 = v108 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v109 : string = "format!(\"{:#?}\", $0)"
    let v110 : std_string_String = Fable.Core.RustInterop.emitRustExpr v2 v109 
    let v111 : string = "fable_library_rust::String_::fromString($0)"
    let v112 : string = Fable.Core.RustInterop.emitRustExpr v110 v111 
    let _v100 = v112 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v113 : string = $"%A{v2}"
    let _v100 = v113 
    #endif
#if FABLE_COMPILER_PYTHON
    let v116 : string = $"%A{v2}"
    let _v100 = v116 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v119 : string = $"%A{v2}"
    let _v100 = v119 
    #endif
#else
    let v122 : string = $"%A{v2}"
    let _v100 = v122 
    #endif
    let v125 : string = _v100 
    let v130 : string = $"{v125}"
    let v133 : unit = ()
    let v134 : (unit -> unit) = closure7(v5, v130)
    let v135 : unit = (fun () -> v134 (); v133) ()
    let v138 : string = $"{v41}"
    let v141 : unit = ()
    let v142 : (unit -> unit) = closure7(v5, v138)
    let v143 : unit = (fun () -> v142 (); v141) ()
    let v146 : string = "status"
    let v147 : string = $"{v146}"
    let v150 : unit = ()
    let v151 : (unit -> unit) = closure7(v5, v147)
    let v152 : unit = (fun () -> v151 (); v150) ()
    let v155 : string = $"{v24}"
    let v158 : unit = ()
    let v159 : (unit -> unit) = closure7(v5, v155)
    let v160 : unit = (fun () -> v159 (); v158) ()
    let v165 : string =
        if v3 then
            let v163 : string = "true"
            v163
        else
            let v164 : string = "false"
            v164
    let v166 : string = $"{v165}"
    let v169 : unit = ()
    let v170 : (unit -> unit) = closure7(v5, v166)
    let v171 : unit = (fun () -> v170 (); v169) ()
    let v174 : string = " }"
    let v175 : string = $"{v174}"
    let v178 : unit = ()
    let v179 : (unit -> unit) = closure7(v5, v175)
    let v180 : unit = (fun () -> v179 (); v178) ()
    let v183 : string = v5.l0
    v183
and method28 (v0 : Mut0, v1 : Mut1, v2 : Mut2, v3 : Mut3, v4 : Mut4, v5 : int64 option, v6 : string, v7 : string, v8 : int32, v9 : int64, v10 : int32 option, v11 : bool) : string =
    let v12 : string = method29(v8, v9, v10, v11)
    let v13 : int64 = v0.l0
    let v14 : string = "networking.wait_for_port_access"
    let v15 : string = $"{v6} {v7} #{v13} %s{v14} / {v12}"
    method17(v15)
and closure23 (v0 : int32 option, v1 : bool, v2 : int32, v3 : int64) () : unit =
    let v4 : US0 = US0_0
    let v5 : bool = method6(v4)
    if v5 then
        let v6 : unit = ()
        let v7 : (unit -> unit) = closure0()
        let v8 : unit = (fun () -> v7 (); v6) ()
        let struct (v22 : Mut0, v23 : Mut1, v24 : Mut2, v25 : Mut3, v26 : Mut4, v27 : int64 option) = TraceState.trace_state.Value
        let v40 : string = method7(v22, v23, v24, v25, v26, v27)
        let v41 : string = method11()
        let v42 : string = method28(v22, v23, v24, v25, v26, v27, v40, v41, v2, v3, v0, v1)
        method18(v42)
and method26 (v0 : int32 option, v1 : bool, v2 : string, v3 : int32, v4 : int64) : Async<int64> =
    let v5 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v6 : Async<int64> = null |> unbox<Async<int64>>
    let _v5 = v6 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v9 : Async<int64> = null |> unbox<Async<int64>>
    let _v5 = v9 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v12 : Async<int64> = null |> unbox<Async<int64>>
    let _v5 = v12 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v15 : Async<int64> = null |> unbox<Async<int64>>
    let _v5 = v15 
    #endif
#if FABLE_COMPILER_PYTHON
    let v18 : Async<int64> = null |> unbox<Async<int64>>
    let _v5 = v18 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v21 : unit = ()
    let _v21 =
        async {
            let v22 : (int32 -> US9) = method27()
            let v23 : US9 option = v0 |> Option.map v22 
            let v34 : US9 = US9_1
            let v35 : US9 = v23 |> Option.defaultValue v34 
            let v4449 : Async<bool> =
                match v35 with
                | US9_1 -> (* None *)
                    let v39 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v40 : Async<bool> = null |> unbox<Async<bool>>
                    let _v39 = v40 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v43 : Async<bool> = null |> unbox<Async<bool>>
                    let _v39 = v43 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v46 : Async<bool> = null |> unbox<Async<bool>>
                    let _v39 = v46 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v49 : Async<bool> = null |> unbox<Async<bool>>
                    let _v39 = v49 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v52 : Async<bool> = null |> unbox<Async<bool>>
                    let _v39 = v52 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v55 : unit = ()
                    let _v55 =
                        async {
                            let v56 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                            let! v56 = v56 
                            let v57 : System.Threading.CancellationToken = v56 
                            let v58 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                            use v58 = v58 
                            let v59 : System.Net.Sockets.TcpClient = v58 
                            try
                            let v60 : System.Threading.Tasks.ValueTask = v59.ConnectAsync (v2, v3, v57)
                            let v61 : (unit -> System.Threading.Tasks.Task) = v60.AsTask
                            let v62 : System.Threading.Tasks.Task = v61 ()
                            let v63 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v64 : Async<unit> = null |> unbox<Async<unit>>
                            let _v63 = v64 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v67 : Async<unit> = null |> unbox<Async<unit>>
                            let _v63 = v67 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v70 : Async<unit> = null |> unbox<Async<unit>>
                            let _v63 = v70 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v73 : Async<unit> = null |> unbox<Async<unit>>
                            let _v63 = v73 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v76 : Async<unit> = null |> unbox<Async<unit>>
                            let _v63 = v76 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v79 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v80 : Async<unit> = v79 v62
                            let _v63 = v80 
                            #endif
#else
                            let v81 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v82 : Async<unit> = v81 v62
                            let _v63 = v82 
                            #endif
                            let v83 : Async<unit> = _v63 
                            do! v83 
                            return true 
                            with ex ->
                                let v88 : exn = ex
                                let v89 : unit = ()
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v90 : string = $"%A{v88}"
                                let _v89 = v90 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v93 : string = $"%A{v88}"
                                let _v89 = v93 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v96 : string = $"%A{v88}"
                                let _v89 = v96 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v99 : string = $"%A{v88}"
                                let _v89 = v99 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v102 : string = $"%A{v88}"
                                let _v89 = v102 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v105 : string = $"%A{v88}"
                                let _v89 = v105 
                                #endif
#else
                                let v108 : string = $"{v88.GetType ()}: {v88.Message}"
                                let _v89 = v108 
                                #endif
                                let v109 : string = _v89 
                                let v114 : unit = ()
                                let v115 : (unit -> unit) = closure5(v3, v109)
                                let v116 : unit = (fun () -> v115 (); v114) ()
                                return false 
                                (*
                                ()
                            *)
                            (*
                            let v156 : bool = *)
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v157 : Async<bool> = _v55 
                    let _v39 = v157 
                    #endif
#else
                    let v158 : unit = ()
                    let _v158 =
                        async {
                            let v159 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                            let! v159 = v159 
                            let v160 : System.Threading.CancellationToken = v159 
                            let v161 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                            use v161 = v161 
                            let v162 : System.Net.Sockets.TcpClient = v161 
                            try
                            let v163 : System.Threading.Tasks.ValueTask = v162.ConnectAsync (v2, v3, v160)
                            let v164 : (unit -> System.Threading.Tasks.Task) = v163.AsTask
                            let v165 : System.Threading.Tasks.Task = v164 ()
                            let v166 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v167 : Async<unit> = null |> unbox<Async<unit>>
                            let _v166 = v167 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v170 : Async<unit> = null |> unbox<Async<unit>>
                            let _v166 = v170 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v173 : Async<unit> = null |> unbox<Async<unit>>
                            let _v166 = v173 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v176 : Async<unit> = null |> unbox<Async<unit>>
                            let _v166 = v176 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v179 : Async<unit> = null |> unbox<Async<unit>>
                            let _v166 = v179 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v182 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v183 : Async<unit> = v182 v165
                            let _v166 = v183 
                            #endif
#else
                            let v184 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v185 : Async<unit> = v184 v165
                            let _v166 = v185 
                            #endif
                            let v186 : Async<unit> = _v166 
                            do! v186 
                            return true 
                            with ex ->
                                let v191 : exn = ex
                                let v192 : unit = ()
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v193 : string = $"%A{v191}"
                                let _v192 = v193 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v196 : string = $"%A{v191}"
                                let _v192 = v196 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v199 : string = $"%A{v191}"
                                let _v192 = v199 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v202 : string = $"%A{v191}"
                                let _v192 = v202 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v205 : string = $"%A{v191}"
                                let _v192 = v205 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v208 : string = $"%A{v191}"
                                let _v192 = v208 
                                #endif
#else
                                let v211 : string = $"{v191.GetType ()}: {v191.Message}"
                                let _v192 = v211 
                                #endif
                                let v212 : string = _v192 
                                let v217 : unit = ()
                                let v218 : (unit -> unit) = closure5(v3, v212)
                                let v219 : unit = (fun () -> v218 (); v217) ()
                                return false 
                                (*
                                ()
                            *)
                            (*
                            let v259 : bool = *)
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v260 : Async<bool> = _v158 
                    let _v39 = v260 
                    #endif
                    let v261 : Async<bool> = _v39 
                    v261
                | US9_0(v266) -> (* Some *)
                    let v267 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v268 : Async<bool> = null |> unbox<Async<bool>>
                    let _v267 = v268 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v271 : Async<bool> = null |> unbox<Async<bool>>
                    let _v267 = v271 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v274 : Async<bool> = null |> unbox<Async<bool>>
                    let _v267 = v274 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v277 : Async<bool> = null |> unbox<Async<bool>>
                    let _v267 = v277 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v280 : Async<bool> = null |> unbox<Async<bool>>
                    let _v267 = v280 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v283 : unit = ()
                    let _v283 =
                        async {
                            let v284 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v285 : Async<bool> = null |> unbox<Async<bool>>
                            let _v284 = v285 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v288 : Async<bool> = null |> unbox<Async<bool>>
                            let _v284 = v288 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v291 : Async<bool> = null |> unbox<Async<bool>>
                            let _v284 = v291 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v294 : Async<bool> = null |> unbox<Async<bool>>
                            let _v284 = v294 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v297 : Async<bool> = null |> unbox<Async<bool>>
                            let _v284 = v297 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v300 : unit = ()
                            let _v300 =
                                async {
                                    let v301 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v301 = v301 
                                    let v302 : System.Threading.CancellationToken = v301 
                                    let v303 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v303 = v303 
                                    let v304 : System.Net.Sockets.TcpClient = v303 
                                    try
                                    let v305 : System.Threading.Tasks.ValueTask = v304.ConnectAsync (v2, v3, v302)
                                    let v306 : (unit -> System.Threading.Tasks.Task) = v305.AsTask
                                    let v307 : System.Threading.Tasks.Task = v306 ()
                                    let v308 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v309 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v308 = v309 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v312 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v308 = v312 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v315 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v308 = v315 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v318 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v308 = v318 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v321 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v308 = v321 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v324 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v325 : Async<unit> = v324 v307
                                    let _v308 = v325 
                                    #endif
#else
                                    let v326 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v327 : Async<unit> = v326 v307
                                    let _v308 = v327 
                                    #endif
                                    let v328 : Async<unit> = _v308 
                                    do! v328 
                                    return true 
                                    with ex ->
                                        let v333 : exn = ex
                                        let v334 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v335 : string = $"%A{v333}"
                                        let _v334 = v335 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v338 : string = $"%A{v333}"
                                        let _v334 = v338 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v341 : string = $"%A{v333}"
                                        let _v334 = v341 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v344 : string = $"%A{v333}"
                                        let _v334 = v344 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v347 : string = $"%A{v333}"
                                        let _v334 = v347 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v350 : string = $"%A{v333}"
                                        let _v334 = v350 
                                        #endif
#else
                                        let v353 : string = $"{v333.GetType ()}: {v333.Message}"
                                        let _v334 = v353 
                                        #endif
                                        let v354 : string = _v334 
                                        let v359 : unit = ()
                                        let v360 : (unit -> unit) = closure5(v3, v354)
                                        let v361 : unit = (fun () -> v360 (); v359) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v401 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v402 : Async<bool> = _v300 
                            let _v284 = v402 
                            #endif
#else
                            let v403 : unit = ()
                            let _v403 =
                                async {
                                    let v404 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v404 = v404 
                                    let v405 : System.Threading.CancellationToken = v404 
                                    let v406 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v406 = v406 
                                    let v407 : System.Net.Sockets.TcpClient = v406 
                                    try
                                    let v408 : System.Threading.Tasks.ValueTask = v407.ConnectAsync (v2, v3, v405)
                                    let v409 : (unit -> System.Threading.Tasks.Task) = v408.AsTask
                                    let v410 : System.Threading.Tasks.Task = v409 ()
                                    let v411 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v412 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v411 = v412 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v415 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v411 = v415 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v418 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v411 = v418 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v421 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v411 = v421 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v424 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v411 = v424 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v427 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v428 : Async<unit> = v427 v410
                                    let _v411 = v428 
                                    #endif
#else
                                    let v429 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v430 : Async<unit> = v429 v410
                                    let _v411 = v430 
                                    #endif
                                    let v431 : Async<unit> = _v411 
                                    do! v431 
                                    return true 
                                    with ex ->
                                        let v436 : exn = ex
                                        let v437 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v438 : string = $"%A{v436}"
                                        let _v437 = v438 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v441 : string = $"%A{v436}"
                                        let _v437 = v441 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v444 : string = $"%A{v436}"
                                        let _v437 = v444 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v447 : string = $"%A{v436}"
                                        let _v437 = v447 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v450 : string = $"%A{v436}"
                                        let _v437 = v450 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v453 : string = $"%A{v436}"
                                        let _v437 = v453 
                                        #endif
#else
                                        let v456 : string = $"{v436.GetType ()}: {v436.Message}"
                                        let _v437 = v456 
                                        #endif
                                        let v457 : string = _v437 
                                        let v462 : unit = ()
                                        let v463 : (unit -> unit) = closure5(v3, v457)
                                        let v464 : unit = (fun () -> v463 (); v462) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v504 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v505 : Async<bool> = _v403 
                            let _v284 = v505 
                            #endif
                            let v506 : Async<bool> = _v284 
                            let v511 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v512 : Async<US6> = null |> unbox<Async<US6>>
                            let _v511 = v512 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v515 : Async<US6> = null |> unbox<Async<US6>>
                            let _v511 = v515 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v518 : Async<US6> = null |> unbox<Async<US6>>
                            let _v511 = v518 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v521 : Async<US6> = null |> unbox<Async<US6>>
                            let _v511 = v521 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v524 : Async<US6> = null |> unbox<Async<US6>>
                            let _v511 = v524 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v527 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v528 : Async<US6> = null |> unbox<Async<US6>>
                            let _v527 = v528 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v531 : Async<US6> = null |> unbox<Async<US6>>
                            let _v527 = v531 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v534 : Async<US6> = null |> unbox<Async<US6>>
                            let _v527 = v534 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v537 : Async<US6> = null |> unbox<Async<US6>>
                            let _v527 = v537 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v540 : Async<US6> = null |> unbox<Async<US6>>
                            let _v527 = v540 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v543 : unit = ()
                            let _v543 =
                                async {
                                    let v544 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v545 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v544 = v545 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v548 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v544 = v548 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v551 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v544 = v551 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v554 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v544 = v554 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v557 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v544 = v557 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v560 : Async<Async<bool>> = Async.StartChild (v506, v266)
                                    let _v544 = v560 
                                    #endif
#else
                                    let v561 : Async<Async<bool>> = Async.StartChild (v506, v266)
                                    let _v544 = v561 
                                    #endif
                                    let v562 : Async<Async<bool>> = _v544 
                                    let! v562 = v562 
                                    let v567 : Async<bool> = v562 
                                    let v568 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v569 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v568 = v569 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v572 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v568 = v572 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v575 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v568 = v575 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v578 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v568 = v578 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v581 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v568 = v581 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v584 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v585 : Async<Choice<bool, exn>> = v584 v567
                                    let _v568 = v585 
                                    #endif
#else
                                    let v586 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v587 : Async<Choice<bool, exn>> = v586 v567
                                    let _v568 = v587 
                                    #endif
                                    let v588 : Async<Choice<bool, exn>> = _v568 
                                    let v593 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v594 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v593 = v594 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v597 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v593 = v597 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v600 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v593 = v600 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v603 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v593 = v603 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v606 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v593 = v606 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v609 : unit = ()
                                    let _v609 =
                                        async {
                                            let! v588 = v588 
                                            let v610 : Choice<bool, exn> = v588 
                                            let v611 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v612 : US7 = null |> unbox<US7>
                                            let _v611 = v612 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v615 : US7 = null |> unbox<US7>
                                            let _v611 = v615 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v618 : US7 = null |> unbox<US7>
                                            let _v611 = v618 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v621 : US7 = null |> unbox<US7>
                                            let _v611 = v621 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v624 : US7 = null |> unbox<US7>
                                            let _v611 = v624 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v627 : (bool -> US7) = method19()
                                            let v628 : (exn -> US7) = method20()
                                            let v629 : US7 = match v610 with Choice1Of2 x -> v627 x | Choice2Of2 x -> v628 x
                                            let _v611 = v629 
                                            #endif
#else
                                            let v630 : (bool -> US7) = method19()
                                            let v631 : (exn -> US7) = method20()
                                            let v632 : US7 = match v610 with Choice1Of2 x -> v630 x | Choice2Of2 x -> v631 x
                                            let _v611 = v632 
                                            #endif
                                            let v633 : US7 = _v611 
                                            return v633 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v638 : Async<US7> = _v609 
                                    let _v593 = v638 
                                    #endif
#else
                                    let v639 : unit = ()
                                    let _v639 =
                                        async {
                                            let! v588 = v588 
                                            let v640 : Choice<bool, exn> = v588 
                                            let v641 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v642 : US7 = null |> unbox<US7>
                                            let _v641 = v642 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v645 : US7 = null |> unbox<US7>
                                            let _v641 = v645 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v648 : US7 = null |> unbox<US7>
                                            let _v641 = v648 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v651 : US7 = null |> unbox<US7>
                                            let _v641 = v651 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v654 : US7 = null |> unbox<US7>
                                            let _v641 = v654 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v657 : (bool -> US7) = method19()
                                            let v658 : (exn -> US7) = method20()
                                            let v659 : US7 = match v640 with Choice1Of2 x -> v657 x | Choice2Of2 x -> v658 x
                                            let _v641 = v659 
                                            #endif
#else
                                            let v660 : (bool -> US7) = method19()
                                            let v661 : (exn -> US7) = method20()
                                            let v662 : US7 = match v640 with Choice1Of2 x -> v660 x | Choice2Of2 x -> v661 x
                                            let _v641 = v662 
                                            #endif
                                            let v663 : US7 = _v641 
                                            return v663 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v668 : Async<US7> = _v639 
                                    let _v593 = v668 
                                    #endif
                                    let v669 : Async<US7> = _v593 
                                    let v674 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v675 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v674 = v675 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v678 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v674 = v678 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v681 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v674 = v681 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v684 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v674 = v684 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v687 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v674 = v687 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v690 : unit = ()
                                    let _v690 =
                                        async {
                                            let! v669 = v669 
                                            let v691 : US7 = v669 
                                            let v697 : US8 =
                                                match v691 with
                                                | US7_0(v692) -> (* C1of2 *)
                                                    US8_0(v692)
                                                | US7_1(v694) -> (* C2of2 *)
                                                    US8_1(v694)
                                            return v697 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v698 : Async<US8> = _v690 
                                    let _v674 = v698 
                                    #endif
#else
                                    let v699 : unit = ()
                                    let _v699 =
                                        async {
                                            let! v669 = v669 
                                            let v700 : US7 = v669 
                                            let v706 : US8 =
                                                match v700 with
                                                | US7_0(v701) -> (* C1of2 *)
                                                    US8_0(v701)
                                                | US7_1(v703) -> (* C2of2 *)
                                                    US8_1(v703)
                                            return v706 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v707 : Async<US8> = _v699 
                                    let _v674 = v707 
                                    #endif
                                    let v708 : Async<US8> = _v674 
                                    let v713 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v714 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v713 = v714 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v717 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v713 = v717 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v720 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v713 = v720 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v723 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v713 = v723 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v726 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v713 = v726 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v729 : unit = ()
                                    let _v729 =
                                        async {
                                            let! v708 = v708 
                                            let v730 : US8 = v708 
                                            let v854 : US6 =
                                                match v730 with
                                                | US8_1(v733) -> (* Error *)
                                                    let v734 : string = $"%A{v733}"
                                                    let v737 : string = "System.TimeoutException"
                                                    let v738 : bool = v734.Contains v737 
                                                    if v738 then
                                                        let v741 : unit = ()
                                                        let v742 : (unit -> unit) = closure16(v266)
                                                        let v743 : unit = (fun () -> v742 (); v741) ()
                                                        US6_1
                                                    else
                                                        let v784 : unit = ()
                                                        let v785 : (unit -> unit) = closure17(v266, v733)
                                                        let v786 : unit = (fun () -> v785 (); v784) ()
                                                        US6_1
                                                | US8_0(v731) -> (* Ok *)
                                                    US6_0(v731)
                                            return v854 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v855 : Async<US6> = _v729 
                                    let _v713 = v855 
                                    #endif
#else
                                    let v856 : unit = ()
                                    let _v856 =
                                        async {
                                            let! v708 = v708 
                                            let v857 : US8 = v708 
                                            let v981 : US6 =
                                                match v857 with
                                                | US8_1(v860) -> (* Error *)
                                                    let v861 : string = $"%A{v860}"
                                                    let v864 : string = "System.TimeoutException"
                                                    let v865 : bool = v861.Contains v864 
                                                    if v865 then
                                                        let v868 : unit = ()
                                                        let v869 : (unit -> unit) = closure16(v266)
                                                        let v870 : unit = (fun () -> v869 (); v868) ()
                                                        US6_1
                                                    else
                                                        let v911 : unit = ()
                                                        let v912 : (unit -> unit) = closure17(v266, v860)
                                                        let v913 : unit = (fun () -> v912 (); v911) ()
                                                        US6_1
                                                | US8_0(v858) -> (* Ok *)
                                                    US6_0(v858)
                                            return v981 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v982 : Async<US6> = _v856 
                                    let _v713 = v982 
                                    #endif
                                    let v983 : Async<US6> = _v713 
                                    return! v983 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v988 : Async<US6> = _v543 
                            let _v527 = v988 
                            #endif
#else
                            let v989 : unit = ()
                            let _v989 =
                                async {
                                    let v990 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v991 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v990 = v991 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v994 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v990 = v994 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v997 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v990 = v997 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1000 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v990 = v1000 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1003 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v990 = v1003 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1006 : Async<Async<bool>> = Async.StartChild (v506, v266)
                                    let _v990 = v1006 
                                    #endif
#else
                                    let v1007 : Async<Async<bool>> = Async.StartChild (v506, v266)
                                    let _v990 = v1007 
                                    #endif
                                    let v1008 : Async<Async<bool>> = _v990 
                                    let! v1008 = v1008 
                                    let v1013 : Async<bool> = v1008 
                                    let v1014 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1015 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1014 = v1015 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1018 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1014 = v1018 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1021 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1014 = v1021 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1024 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1014 = v1024 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1027 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1014 = v1027 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1030 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1031 : Async<Choice<bool, exn>> = v1030 v1013
                                    let _v1014 = v1031 
                                    #endif
#else
                                    let v1032 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1033 : Async<Choice<bool, exn>> = v1032 v1013
                                    let _v1014 = v1033 
                                    #endif
                                    let v1034 : Async<Choice<bool, exn>> = _v1014 
                                    let v1039 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1040 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1039 = v1040 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1043 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1039 = v1043 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1046 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1039 = v1046 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1049 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1039 = v1049 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1052 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1039 = v1052 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1055 : unit = ()
                                    let _v1055 =
                                        async {
                                            let! v1034 = v1034 
                                            let v1056 : Choice<bool, exn> = v1034 
                                            let v1057 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1058 : US7 = null |> unbox<US7>
                                            let _v1057 = v1058 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v1061 : US7 = null |> unbox<US7>
                                            let _v1057 = v1061 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v1064 : US7 = null |> unbox<US7>
                                            let _v1057 = v1064 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v1067 : US7 = null |> unbox<US7>
                                            let _v1057 = v1067 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v1070 : US7 = null |> unbox<US7>
                                            let _v1057 = v1070 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v1073 : (bool -> US7) = method19()
                                            let v1074 : (exn -> US7) = method20()
                                            let v1075 : US7 = match v1056 with Choice1Of2 x -> v1073 x | Choice2Of2 x -> v1074 x
                                            let _v1057 = v1075 
                                            #endif
#else
                                            let v1076 : (bool -> US7) = method19()
                                            let v1077 : (exn -> US7) = method20()
                                            let v1078 : US7 = match v1056 with Choice1Of2 x -> v1076 x | Choice2Of2 x -> v1077 x
                                            let _v1057 = v1078 
                                            #endif
                                            let v1079 : US7 = _v1057 
                                            return v1079 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1084 : Async<US7> = _v1055 
                                    let _v1039 = v1084 
                                    #endif
#else
                                    let v1085 : unit = ()
                                    let _v1085 =
                                        async {
                                            let! v1034 = v1034 
                                            let v1086 : Choice<bool, exn> = v1034 
                                            let v1087 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1088 : US7 = null |> unbox<US7>
                                            let _v1087 = v1088 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v1091 : US7 = null |> unbox<US7>
                                            let _v1087 = v1091 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v1094 : US7 = null |> unbox<US7>
                                            let _v1087 = v1094 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v1097 : US7 = null |> unbox<US7>
                                            let _v1087 = v1097 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v1100 : US7 = null |> unbox<US7>
                                            let _v1087 = v1100 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v1103 : (bool -> US7) = method19()
                                            let v1104 : (exn -> US7) = method20()
                                            let v1105 : US7 = match v1086 with Choice1Of2 x -> v1103 x | Choice2Of2 x -> v1104 x
                                            let _v1087 = v1105 
                                            #endif
#else
                                            let v1106 : (bool -> US7) = method19()
                                            let v1107 : (exn -> US7) = method20()
                                            let v1108 : US7 = match v1086 with Choice1Of2 x -> v1106 x | Choice2Of2 x -> v1107 x
                                            let _v1087 = v1108 
                                            #endif
                                            let v1109 : US7 = _v1087 
                                            return v1109 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1114 : Async<US7> = _v1085 
                                    let _v1039 = v1114 
                                    #endif
                                    let v1115 : Async<US7> = _v1039 
                                    let v1120 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1121 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1120 = v1121 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1124 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1120 = v1124 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1127 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1120 = v1127 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1130 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1120 = v1130 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1133 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1120 = v1133 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1136 : unit = ()
                                    let _v1136 =
                                        async {
                                            let! v1115 = v1115 
                                            let v1137 : US7 = v1115 
                                            let v1143 : US8 =
                                                match v1137 with
                                                | US7_0(v1138) -> (* C1of2 *)
                                                    US8_0(v1138)
                                                | US7_1(v1140) -> (* C2of2 *)
                                                    US8_1(v1140)
                                            return v1143 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1144 : Async<US8> = _v1136 
                                    let _v1120 = v1144 
                                    #endif
#else
                                    let v1145 : unit = ()
                                    let _v1145 =
                                        async {
                                            let! v1115 = v1115 
                                            let v1146 : US7 = v1115 
                                            let v1152 : US8 =
                                                match v1146 with
                                                | US7_0(v1147) -> (* C1of2 *)
                                                    US8_0(v1147)
                                                | US7_1(v1149) -> (* C2of2 *)
                                                    US8_1(v1149)
                                            return v1152 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1153 : Async<US8> = _v1145 
                                    let _v1120 = v1153 
                                    #endif
                                    let v1154 : Async<US8> = _v1120 
                                    let v1159 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1160 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1159 = v1160 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1163 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1159 = v1163 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1166 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1159 = v1166 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1169 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1159 = v1169 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1172 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1159 = v1172 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1175 : unit = ()
                                    let _v1175 =
                                        async {
                                            let! v1154 = v1154 
                                            let v1176 : US8 = v1154 
                                            let v1300 : US6 =
                                                match v1176 with
                                                | US8_1(v1179) -> (* Error *)
                                                    let v1180 : string = $"%A{v1179}"
                                                    let v1183 : string = "System.TimeoutException"
                                                    let v1184 : bool = v1180.Contains v1183 
                                                    if v1184 then
                                                        let v1187 : unit = ()
                                                        let v1188 : (unit -> unit) = closure16(v266)
                                                        let v1189 : unit = (fun () -> v1188 (); v1187) ()
                                                        US6_1
                                                    else
                                                        let v1230 : unit = ()
                                                        let v1231 : (unit -> unit) = closure17(v266, v1179)
                                                        let v1232 : unit = (fun () -> v1231 (); v1230) ()
                                                        US6_1
                                                | US8_0(v1177) -> (* Ok *)
                                                    US6_0(v1177)
                                            return v1300 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1301 : Async<US6> = _v1175 
                                    let _v1159 = v1301 
                                    #endif
#else
                                    let v1302 : unit = ()
                                    let _v1302 =
                                        async {
                                            let! v1154 = v1154 
                                            let v1303 : US8 = v1154 
                                            let v1427 : US6 =
                                                match v1303 with
                                                | US8_1(v1306) -> (* Error *)
                                                    let v1307 : string = $"%A{v1306}"
                                                    let v1310 : string = "System.TimeoutException"
                                                    let v1311 : bool = v1307.Contains v1310 
                                                    if v1311 then
                                                        let v1314 : unit = ()
                                                        let v1315 : (unit -> unit) = closure16(v266)
                                                        let v1316 : unit = (fun () -> v1315 (); v1314) ()
                                                        US6_1
                                                    else
                                                        let v1357 : unit = ()
                                                        let v1358 : (unit -> unit) = closure17(v266, v1306)
                                                        let v1359 : unit = (fun () -> v1358 (); v1357) ()
                                                        US6_1
                                                | US8_0(v1304) -> (* Ok *)
                                                    US6_0(v1304)
                                            return v1427 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1428 : Async<US6> = _v1302 
                                    let _v1159 = v1428 
                                    #endif
                                    let v1429 : Async<US6> = _v1159 
                                    return! v1429 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v1434 : Async<US6> = _v989 
                            let _v527 = v1434 
                            #endif
                            let v1435 : Async<US6> = _v527 
                            let _v511 = v1435 
                            #endif
#else
                            let v1440 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1441 : Async<US6> = null |> unbox<Async<US6>>
                            let _v1440 = v1441 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1444 : Async<US6> = null |> unbox<Async<US6>>
                            let _v1440 = v1444 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1447 : Async<US6> = null |> unbox<Async<US6>>
                            let _v1440 = v1447 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1450 : Async<US6> = null |> unbox<Async<US6>>
                            let _v1440 = v1450 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1453 : Async<US6> = null |> unbox<Async<US6>>
                            let _v1440 = v1453 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1456 : unit = ()
                            let _v1456 =
                                async {
                                    let v1457 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1458 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1457 = v1458 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1461 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1457 = v1461 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1464 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1457 = v1464 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1467 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1457 = v1467 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1470 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1457 = v1470 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1473 : Async<Async<bool>> = Async.StartChild (v506, v266)
                                    let _v1457 = v1473 
                                    #endif
#else
                                    let v1474 : Async<Async<bool>> = Async.StartChild (v506, v266)
                                    let _v1457 = v1474 
                                    #endif
                                    let v1475 : Async<Async<bool>> = _v1457 
                                    let! v1475 = v1475 
                                    let v1480 : Async<bool> = v1475 
                                    let v1481 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1482 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1481 = v1482 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1485 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1481 = v1485 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1488 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1481 = v1488 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1491 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1481 = v1491 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1494 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1481 = v1494 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1497 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1498 : Async<Choice<bool, exn>> = v1497 v1480
                                    let _v1481 = v1498 
                                    #endif
#else
                                    let v1499 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1500 : Async<Choice<bool, exn>> = v1499 v1480
                                    let _v1481 = v1500 
                                    #endif
                                    let v1501 : Async<Choice<bool, exn>> = _v1481 
                                    let v1506 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1507 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1506 = v1507 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1510 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1506 = v1510 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1513 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1506 = v1513 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1516 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1506 = v1516 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1519 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1506 = v1519 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1522 : unit = ()
                                    let _v1522 =
                                        async {
                                            let! v1501 = v1501 
                                            let v1523 : Choice<bool, exn> = v1501 
                                            let v1524 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1525 : US7 = null |> unbox<US7>
                                            let _v1524 = v1525 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v1528 : US7 = null |> unbox<US7>
                                            let _v1524 = v1528 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v1531 : US7 = null |> unbox<US7>
                                            let _v1524 = v1531 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v1534 : US7 = null |> unbox<US7>
                                            let _v1524 = v1534 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v1537 : US7 = null |> unbox<US7>
                                            let _v1524 = v1537 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v1540 : (bool -> US7) = method19()
                                            let v1541 : (exn -> US7) = method20()
                                            let v1542 : US7 = match v1523 with Choice1Of2 x -> v1540 x | Choice2Of2 x -> v1541 x
                                            let _v1524 = v1542 
                                            #endif
#else
                                            let v1543 : (bool -> US7) = method19()
                                            let v1544 : (exn -> US7) = method20()
                                            let v1545 : US7 = match v1523 with Choice1Of2 x -> v1543 x | Choice2Of2 x -> v1544 x
                                            let _v1524 = v1545 
                                            #endif
                                            let v1546 : US7 = _v1524 
                                            return v1546 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1551 : Async<US7> = _v1522 
                                    let _v1506 = v1551 
                                    #endif
#else
                                    let v1552 : unit = ()
                                    let _v1552 =
                                        async {
                                            let! v1501 = v1501 
                                            let v1553 : Choice<bool, exn> = v1501 
                                            let v1554 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1555 : US7 = null |> unbox<US7>
                                            let _v1554 = v1555 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v1558 : US7 = null |> unbox<US7>
                                            let _v1554 = v1558 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v1561 : US7 = null |> unbox<US7>
                                            let _v1554 = v1561 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v1564 : US7 = null |> unbox<US7>
                                            let _v1554 = v1564 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v1567 : US7 = null |> unbox<US7>
                                            let _v1554 = v1567 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v1570 : (bool -> US7) = method19()
                                            let v1571 : (exn -> US7) = method20()
                                            let v1572 : US7 = match v1553 with Choice1Of2 x -> v1570 x | Choice2Of2 x -> v1571 x
                                            let _v1554 = v1572 
                                            #endif
#else
                                            let v1573 : (bool -> US7) = method19()
                                            let v1574 : (exn -> US7) = method20()
                                            let v1575 : US7 = match v1553 with Choice1Of2 x -> v1573 x | Choice2Of2 x -> v1574 x
                                            let _v1554 = v1575 
                                            #endif
                                            let v1576 : US7 = _v1554 
                                            return v1576 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1581 : Async<US7> = _v1552 
                                    let _v1506 = v1581 
                                    #endif
                                    let v1582 : Async<US7> = _v1506 
                                    let v1587 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1588 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1587 = v1588 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1591 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1587 = v1591 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1594 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1587 = v1594 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1597 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1587 = v1597 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1600 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1587 = v1600 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1603 : unit = ()
                                    let _v1603 =
                                        async {
                                            let! v1582 = v1582 
                                            let v1604 : US7 = v1582 
                                            let v1610 : US8 =
                                                match v1604 with
                                                | US7_0(v1605) -> (* C1of2 *)
                                                    US8_0(v1605)
                                                | US7_1(v1607) -> (* C2of2 *)
                                                    US8_1(v1607)
                                            return v1610 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1611 : Async<US8> = _v1603 
                                    let _v1587 = v1611 
                                    #endif
#else
                                    let v1612 : unit = ()
                                    let _v1612 =
                                        async {
                                            let! v1582 = v1582 
                                            let v1613 : US7 = v1582 
                                            let v1619 : US8 =
                                                match v1613 with
                                                | US7_0(v1614) -> (* C1of2 *)
                                                    US8_0(v1614)
                                                | US7_1(v1616) -> (* C2of2 *)
                                                    US8_1(v1616)
                                            return v1619 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1620 : Async<US8> = _v1612 
                                    let _v1587 = v1620 
                                    #endif
                                    let v1621 : Async<US8> = _v1587 
                                    let v1626 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1627 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1626 = v1627 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1630 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1626 = v1630 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1633 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1626 = v1633 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1636 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1626 = v1636 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1639 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1626 = v1639 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1642 : unit = ()
                                    let _v1642 =
                                        async {
                                            let! v1621 = v1621 
                                            let v1643 : US8 = v1621 
                                            let v1767 : US6 =
                                                match v1643 with
                                                | US8_1(v1646) -> (* Error *)
                                                    let v1647 : string = $"%A{v1646}"
                                                    let v1650 : string = "System.TimeoutException"
                                                    let v1651 : bool = v1647.Contains v1650 
                                                    if v1651 then
                                                        let v1654 : unit = ()
                                                        let v1655 : (unit -> unit) = closure16(v266)
                                                        let v1656 : unit = (fun () -> v1655 (); v1654) ()
                                                        US6_1
                                                    else
                                                        let v1697 : unit = ()
                                                        let v1698 : (unit -> unit) = closure17(v266, v1646)
                                                        let v1699 : unit = (fun () -> v1698 (); v1697) ()
                                                        US6_1
                                                | US8_0(v1644) -> (* Ok *)
                                                    US6_0(v1644)
                                            return v1767 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1768 : Async<US6> = _v1642 
                                    let _v1626 = v1768 
                                    #endif
#else
                                    let v1769 : unit = ()
                                    let _v1769 =
                                        async {
                                            let! v1621 = v1621 
                                            let v1770 : US8 = v1621 
                                            let v1894 : US6 =
                                                match v1770 with
                                                | US8_1(v1773) -> (* Error *)
                                                    let v1774 : string = $"%A{v1773}"
                                                    let v1777 : string = "System.TimeoutException"
                                                    let v1778 : bool = v1774.Contains v1777 
                                                    if v1778 then
                                                        let v1781 : unit = ()
                                                        let v1782 : (unit -> unit) = closure16(v266)
                                                        let v1783 : unit = (fun () -> v1782 (); v1781) ()
                                                        US6_1
                                                    else
                                                        let v1824 : unit = ()
                                                        let v1825 : (unit -> unit) = closure17(v266, v1773)
                                                        let v1826 : unit = (fun () -> v1825 (); v1824) ()
                                                        US6_1
                                                | US8_0(v1771) -> (* Ok *)
                                                    US6_0(v1771)
                                            return v1894 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1895 : Async<US6> = _v1769 
                                    let _v1626 = v1895 
                                    #endif
                                    let v1896 : Async<US6> = _v1626 
                                    return! v1896 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v1901 : Async<US6> = _v1456 
                            let _v1440 = v1901 
                            #endif
#else
                            let v1902 : unit = ()
                            let _v1902 =
                                async {
                                    let v1903 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1904 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1903 = v1904 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1907 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1903 = v1907 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1910 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1903 = v1910 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1913 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1903 = v1913 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1916 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1903 = v1916 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1919 : Async<Async<bool>> = Async.StartChild (v506, v266)
                                    let _v1903 = v1919 
                                    #endif
#else
                                    let v1920 : Async<Async<bool>> = Async.StartChild (v506, v266)
                                    let _v1903 = v1920 
                                    #endif
                                    let v1921 : Async<Async<bool>> = _v1903 
                                    let! v1921 = v1921 
                                    let v1926 : Async<bool> = v1921 
                                    let v1927 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1928 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1927 = v1928 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1931 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1927 = v1931 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1934 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1927 = v1934 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1937 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1927 = v1937 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1940 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1927 = v1940 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1943 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1944 : Async<Choice<bool, exn>> = v1943 v1926
                                    let _v1927 = v1944 
                                    #endif
#else
                                    let v1945 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1946 : Async<Choice<bool, exn>> = v1945 v1926
                                    let _v1927 = v1946 
                                    #endif
                                    let v1947 : Async<Choice<bool, exn>> = _v1927 
                                    let v1952 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1953 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1952 = v1953 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1956 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1952 = v1956 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1959 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1952 = v1959 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1962 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1952 = v1962 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1965 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1952 = v1965 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1968 : unit = ()
                                    let _v1968 =
                                        async {
                                            let! v1947 = v1947 
                                            let v1969 : Choice<bool, exn> = v1947 
                                            let v1970 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1971 : US7 = null |> unbox<US7>
                                            let _v1970 = v1971 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v1974 : US7 = null |> unbox<US7>
                                            let _v1970 = v1974 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v1977 : US7 = null |> unbox<US7>
                                            let _v1970 = v1977 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v1980 : US7 = null |> unbox<US7>
                                            let _v1970 = v1980 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v1983 : US7 = null |> unbox<US7>
                                            let _v1970 = v1983 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v1986 : (bool -> US7) = method19()
                                            let v1987 : (exn -> US7) = method20()
                                            let v1988 : US7 = match v1969 with Choice1Of2 x -> v1986 x | Choice2Of2 x -> v1987 x
                                            let _v1970 = v1988 
                                            #endif
#else
                                            let v1989 : (bool -> US7) = method19()
                                            let v1990 : (exn -> US7) = method20()
                                            let v1991 : US7 = match v1969 with Choice1Of2 x -> v1989 x | Choice2Of2 x -> v1990 x
                                            let _v1970 = v1991 
                                            #endif
                                            let v1992 : US7 = _v1970 
                                            return v1992 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1997 : Async<US7> = _v1968 
                                    let _v1952 = v1997 
                                    #endif
#else
                                    let v1998 : unit = ()
                                    let _v1998 =
                                        async {
                                            let! v1947 = v1947 
                                            let v1999 : Choice<bool, exn> = v1947 
                                            let v2000 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v2001 : US7 = null |> unbox<US7>
                                            let _v2000 = v2001 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v2004 : US7 = null |> unbox<US7>
                                            let _v2000 = v2004 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v2007 : US7 = null |> unbox<US7>
                                            let _v2000 = v2007 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v2010 : US7 = null |> unbox<US7>
                                            let _v2000 = v2010 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v2013 : US7 = null |> unbox<US7>
                                            let _v2000 = v2013 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v2016 : (bool -> US7) = method19()
                                            let v2017 : (exn -> US7) = method20()
                                            let v2018 : US7 = match v1999 with Choice1Of2 x -> v2016 x | Choice2Of2 x -> v2017 x
                                            let _v2000 = v2018 
                                            #endif
#else
                                            let v2019 : (bool -> US7) = method19()
                                            let v2020 : (exn -> US7) = method20()
                                            let v2021 : US7 = match v1999 with Choice1Of2 x -> v2019 x | Choice2Of2 x -> v2020 x
                                            let _v2000 = v2021 
                                            #endif
                                            let v2022 : US7 = _v2000 
                                            return v2022 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2027 : Async<US7> = _v1998 
                                    let _v1952 = v2027 
                                    #endif
                                    let v2028 : Async<US7> = _v1952 
                                    let v2033 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2034 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2033 = v2034 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2037 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2033 = v2037 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2040 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2033 = v2040 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2043 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2033 = v2043 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2046 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2033 = v2046 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2049 : unit = ()
                                    let _v2049 =
                                        async {
                                            let! v2028 = v2028 
                                            let v2050 : US7 = v2028 
                                            let v2056 : US8 =
                                                match v2050 with
                                                | US7_0(v2051) -> (* C1of2 *)
                                                    US8_0(v2051)
                                                | US7_1(v2053) -> (* C2of2 *)
                                                    US8_1(v2053)
                                            return v2056 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2057 : Async<US8> = _v2049 
                                    let _v2033 = v2057 
                                    #endif
#else
                                    let v2058 : unit = ()
                                    let _v2058 =
                                        async {
                                            let! v2028 = v2028 
                                            let v2059 : US7 = v2028 
                                            let v2065 : US8 =
                                                match v2059 with
                                                | US7_0(v2060) -> (* C1of2 *)
                                                    US8_0(v2060)
                                                | US7_1(v2062) -> (* C2of2 *)
                                                    US8_1(v2062)
                                            return v2065 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2066 : Async<US8> = _v2058 
                                    let _v2033 = v2066 
                                    #endif
                                    let v2067 : Async<US8> = _v2033 
                                    let v2072 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2073 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2072 = v2073 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2076 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2072 = v2076 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2079 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2072 = v2079 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2082 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2072 = v2082 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2085 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2072 = v2085 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2088 : unit = ()
                                    let _v2088 =
                                        async {
                                            let! v2067 = v2067 
                                            let v2089 : US8 = v2067 
                                            let v2213 : US6 =
                                                match v2089 with
                                                | US8_1(v2092) -> (* Error *)
                                                    let v2093 : string = $"%A{v2092}"
                                                    let v2096 : string = "System.TimeoutException"
                                                    let v2097 : bool = v2093.Contains v2096 
                                                    if v2097 then
                                                        let v2100 : unit = ()
                                                        let v2101 : (unit -> unit) = closure16(v266)
                                                        let v2102 : unit = (fun () -> v2101 (); v2100) ()
                                                        US6_1
                                                    else
                                                        let v2143 : unit = ()
                                                        let v2144 : (unit -> unit) = closure17(v266, v2092)
                                                        let v2145 : unit = (fun () -> v2144 (); v2143) ()
                                                        US6_1
                                                | US8_0(v2090) -> (* Ok *)
                                                    US6_0(v2090)
                                            return v2213 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2214 : Async<US6> = _v2088 
                                    let _v2072 = v2214 
                                    #endif
#else
                                    let v2215 : unit = ()
                                    let _v2215 =
                                        async {
                                            let! v2067 = v2067 
                                            let v2216 : US8 = v2067 
                                            let v2340 : US6 =
                                                match v2216 with
                                                | US8_1(v2219) -> (* Error *)
                                                    let v2220 : string = $"%A{v2219}"
                                                    let v2223 : string = "System.TimeoutException"
                                                    let v2224 : bool = v2220.Contains v2223 
                                                    if v2224 then
                                                        let v2227 : unit = ()
                                                        let v2228 : (unit -> unit) = closure16(v266)
                                                        let v2229 : unit = (fun () -> v2228 (); v2227) ()
                                                        US6_1
                                                    else
                                                        let v2270 : unit = ()
                                                        let v2271 : (unit -> unit) = closure17(v266, v2219)
                                                        let v2272 : unit = (fun () -> v2271 (); v2270) ()
                                                        US6_1
                                                | US8_0(v2217) -> (* Ok *)
                                                    US6_0(v2217)
                                            return v2340 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2341 : Async<US6> = _v2215 
                                    let _v2072 = v2341 
                                    #endif
                                    let v2342 : Async<US6> = _v2072 
                                    return! v2342 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v2347 : Async<US6> = _v1902 
                            let _v1440 = v2347 
                            #endif
                            let v2348 : Async<US6> = _v1440 
                            let _v511 = v2348 
                            #endif
                            let v2353 : Async<US6> = _v511 
                            let! v2353 = v2353 
                            let v2358 : US6 = v2353 
                            let v2361 : bool =
                                match v2358 with
                                | US6_1 -> (* None *)
                                    false
                                | US6_0(v2359) -> (* Some *)
                                    v2359
                            return v2361 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2362 : Async<bool> = _v283 
                    let _v267 = v2362 
                    #endif
#else
                    let v2363 : unit = ()
                    let _v2363 =
                        async {
                            let v2364 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v2365 : Async<bool> = null |> unbox<Async<bool>>
                            let _v2364 = v2365 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v2368 : Async<bool> = null |> unbox<Async<bool>>
                            let _v2364 = v2368 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v2371 : Async<bool> = null |> unbox<Async<bool>>
                            let _v2364 = v2371 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v2374 : Async<bool> = null |> unbox<Async<bool>>
                            let _v2364 = v2374 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v2377 : Async<bool> = null |> unbox<Async<bool>>
                            let _v2364 = v2377 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v2380 : unit = ()
                            let _v2380 =
                                async {
                                    let v2381 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v2381 = v2381 
                                    let v2382 : System.Threading.CancellationToken = v2381 
                                    let v2383 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v2383 = v2383 
                                    let v2384 : System.Net.Sockets.TcpClient = v2383 
                                    try
                                    let v2385 : System.Threading.Tasks.ValueTask = v2384.ConnectAsync (v2, v3, v2382)
                                    let v2386 : (unit -> System.Threading.Tasks.Task) = v2385.AsTask
                                    let v2387 : System.Threading.Tasks.Task = v2386 ()
                                    let v2388 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2389 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2388 = v2389 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2392 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2388 = v2392 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2395 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2388 = v2395 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2398 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2388 = v2398 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2401 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2388 = v2401 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2404 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v2405 : Async<unit> = v2404 v2387
                                    let _v2388 = v2405 
                                    #endif
#else
                                    let v2406 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v2407 : Async<unit> = v2406 v2387
                                    let _v2388 = v2407 
                                    #endif
                                    let v2408 : Async<unit> = _v2388 
                                    do! v2408 
                                    return true 
                                    with ex ->
                                        let v2413 : exn = ex
                                        let v2414 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v2415 : string = $"%A{v2413}"
                                        let _v2414 = v2415 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v2418 : string = $"%A{v2413}"
                                        let _v2414 = v2418 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v2421 : string = $"%A{v2413}"
                                        let _v2414 = v2421 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v2424 : string = $"%A{v2413}"
                                        let _v2414 = v2424 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v2427 : string = $"%A{v2413}"
                                        let _v2414 = v2427 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v2430 : string = $"%A{v2413}"
                                        let _v2414 = v2430 
                                        #endif
#else
                                        let v2433 : string = $"{v2413.GetType ()}: {v2413.Message}"
                                        let _v2414 = v2433 
                                        #endif
                                        let v2434 : string = _v2414 
                                        let v2439 : unit = ()
                                        let v2440 : (unit -> unit) = closure5(v3, v2434)
                                        let v2441 : unit = (fun () -> v2440 (); v2439) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v2481 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v2482 : Async<bool> = _v2380 
                            let _v2364 = v2482 
                            #endif
#else
                            let v2483 : unit = ()
                            let _v2483 =
                                async {
                                    let v2484 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v2484 = v2484 
                                    let v2485 : System.Threading.CancellationToken = v2484 
                                    let v2486 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v2486 = v2486 
                                    let v2487 : System.Net.Sockets.TcpClient = v2486 
                                    try
                                    let v2488 : System.Threading.Tasks.ValueTask = v2487.ConnectAsync (v2, v3, v2485)
                                    let v2489 : (unit -> System.Threading.Tasks.Task) = v2488.AsTask
                                    let v2490 : System.Threading.Tasks.Task = v2489 ()
                                    let v2491 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2492 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2491 = v2492 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2495 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2491 = v2495 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2498 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2491 = v2498 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2501 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2491 = v2501 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2504 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2491 = v2504 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2507 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v2508 : Async<unit> = v2507 v2490
                                    let _v2491 = v2508 
                                    #endif
#else
                                    let v2509 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v2510 : Async<unit> = v2509 v2490
                                    let _v2491 = v2510 
                                    #endif
                                    let v2511 : Async<unit> = _v2491 
                                    do! v2511 
                                    return true 
                                    with ex ->
                                        let v2516 : exn = ex
                                        let v2517 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v2518 : string = $"%A{v2516}"
                                        let _v2517 = v2518 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v2521 : string = $"%A{v2516}"
                                        let _v2517 = v2521 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v2524 : string = $"%A{v2516}"
                                        let _v2517 = v2524 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v2527 : string = $"%A{v2516}"
                                        let _v2517 = v2527 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v2530 : string = $"%A{v2516}"
                                        let _v2517 = v2530 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v2533 : string = $"%A{v2516}"
                                        let _v2517 = v2533 
                                        #endif
#else
                                        let v2536 : string = $"{v2516.GetType ()}: {v2516.Message}"
                                        let _v2517 = v2536 
                                        #endif
                                        let v2537 : string = _v2517 
                                        let v2542 : unit = ()
                                        let v2543 : (unit -> unit) = closure5(v3, v2537)
                                        let v2544 : unit = (fun () -> v2543 (); v2542) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v2584 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v2585 : Async<bool> = _v2483 
                            let _v2364 = v2585 
                            #endif
                            let v2586 : Async<bool> = _v2364 
                            let v2591 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v2592 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2591 = v2592 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v2595 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2591 = v2595 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v2598 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2591 = v2598 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v2601 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2591 = v2601 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v2604 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2591 = v2604 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v2607 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v2608 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2607 = v2608 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v2611 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2607 = v2611 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v2614 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2607 = v2614 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v2617 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2607 = v2617 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v2620 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2607 = v2620 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v2623 : unit = ()
                            let _v2623 =
                                async {
                                    let v2624 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2625 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v2624 = v2625 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2628 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v2624 = v2628 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2631 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v2624 = v2631 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2634 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v2624 = v2634 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2637 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v2624 = v2637 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2640 : Async<Async<bool>> = Async.StartChild (v2586, v266)
                                    let _v2624 = v2640 
                                    #endif
#else
                                    let v2641 : Async<Async<bool>> = Async.StartChild (v2586, v266)
                                    let _v2624 = v2641 
                                    #endif
                                    let v2642 : Async<Async<bool>> = _v2624 
                                    let! v2642 = v2642 
                                    let v2647 : Async<bool> = v2642 
                                    let v2648 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2649 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v2648 = v2649 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2652 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v2648 = v2652 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2655 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v2648 = v2655 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2658 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v2648 = v2658 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2661 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v2648 = v2661 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2664 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v2665 : Async<Choice<bool, exn>> = v2664 v2647
                                    let _v2648 = v2665 
                                    #endif
#else
                                    let v2666 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v2667 : Async<Choice<bool, exn>> = v2666 v2647
                                    let _v2648 = v2667 
                                    #endif
                                    let v2668 : Async<Choice<bool, exn>> = _v2648 
                                    let v2673 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2674 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v2673 = v2674 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2677 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v2673 = v2677 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2680 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v2673 = v2680 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2683 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v2673 = v2683 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2686 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v2673 = v2686 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2689 : unit = ()
                                    let _v2689 =
                                        async {
                                            let! v2668 = v2668 
                                            let v2690 : Choice<bool, exn> = v2668 
                                            let v2691 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v2692 : US7 = null |> unbox<US7>
                                            let _v2691 = v2692 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v2695 : US7 = null |> unbox<US7>
                                            let _v2691 = v2695 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v2698 : US7 = null |> unbox<US7>
                                            let _v2691 = v2698 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v2701 : US7 = null |> unbox<US7>
                                            let _v2691 = v2701 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v2704 : US7 = null |> unbox<US7>
                                            let _v2691 = v2704 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v2707 : (bool -> US7) = method19()
                                            let v2708 : (exn -> US7) = method20()
                                            let v2709 : US7 = match v2690 with Choice1Of2 x -> v2707 x | Choice2Of2 x -> v2708 x
                                            let _v2691 = v2709 
                                            #endif
#else
                                            let v2710 : (bool -> US7) = method19()
                                            let v2711 : (exn -> US7) = method20()
                                            let v2712 : US7 = match v2690 with Choice1Of2 x -> v2710 x | Choice2Of2 x -> v2711 x
                                            let _v2691 = v2712 
                                            #endif
                                            let v2713 : US7 = _v2691 
                                            return v2713 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2718 : Async<US7> = _v2689 
                                    let _v2673 = v2718 
                                    #endif
#else
                                    let v2719 : unit = ()
                                    let _v2719 =
                                        async {
                                            let! v2668 = v2668 
                                            let v2720 : Choice<bool, exn> = v2668 
                                            let v2721 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v2722 : US7 = null |> unbox<US7>
                                            let _v2721 = v2722 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v2725 : US7 = null |> unbox<US7>
                                            let _v2721 = v2725 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v2728 : US7 = null |> unbox<US7>
                                            let _v2721 = v2728 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v2731 : US7 = null |> unbox<US7>
                                            let _v2721 = v2731 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v2734 : US7 = null |> unbox<US7>
                                            let _v2721 = v2734 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v2737 : (bool -> US7) = method19()
                                            let v2738 : (exn -> US7) = method20()
                                            let v2739 : US7 = match v2720 with Choice1Of2 x -> v2737 x | Choice2Of2 x -> v2738 x
                                            let _v2721 = v2739 
                                            #endif
#else
                                            let v2740 : (bool -> US7) = method19()
                                            let v2741 : (exn -> US7) = method20()
                                            let v2742 : US7 = match v2720 with Choice1Of2 x -> v2740 x | Choice2Of2 x -> v2741 x
                                            let _v2721 = v2742 
                                            #endif
                                            let v2743 : US7 = _v2721 
                                            return v2743 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2748 : Async<US7> = _v2719 
                                    let _v2673 = v2748 
                                    #endif
                                    let v2749 : Async<US7> = _v2673 
                                    let v2754 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2755 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2754 = v2755 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2758 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2754 = v2758 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2761 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2754 = v2761 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2764 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2754 = v2764 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2767 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2754 = v2767 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2770 : unit = ()
                                    let _v2770 =
                                        async {
                                            let! v2749 = v2749 
                                            let v2771 : US7 = v2749 
                                            let v2777 : US8 =
                                                match v2771 with
                                                | US7_0(v2772) -> (* C1of2 *)
                                                    US8_0(v2772)
                                                | US7_1(v2774) -> (* C2of2 *)
                                                    US8_1(v2774)
                                            return v2777 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2778 : Async<US8> = _v2770 
                                    let _v2754 = v2778 
                                    #endif
#else
                                    let v2779 : unit = ()
                                    let _v2779 =
                                        async {
                                            let! v2749 = v2749 
                                            let v2780 : US7 = v2749 
                                            let v2786 : US8 =
                                                match v2780 with
                                                | US7_0(v2781) -> (* C1of2 *)
                                                    US8_0(v2781)
                                                | US7_1(v2783) -> (* C2of2 *)
                                                    US8_1(v2783)
                                            return v2786 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2787 : Async<US8> = _v2779 
                                    let _v2754 = v2787 
                                    #endif
                                    let v2788 : Async<US8> = _v2754 
                                    let v2793 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2794 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2793 = v2794 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2797 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2793 = v2797 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2800 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2793 = v2800 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2803 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2793 = v2803 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2806 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2793 = v2806 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2809 : unit = ()
                                    let _v2809 =
                                        async {
                                            let! v2788 = v2788 
                                            let v2810 : US8 = v2788 
                                            let v2934 : US6 =
                                                match v2810 with
                                                | US8_1(v2813) -> (* Error *)
                                                    let v2814 : string = $"%A{v2813}"
                                                    let v2817 : string = "System.TimeoutException"
                                                    let v2818 : bool = v2814.Contains v2817 
                                                    if v2818 then
                                                        let v2821 : unit = ()
                                                        let v2822 : (unit -> unit) = closure16(v266)
                                                        let v2823 : unit = (fun () -> v2822 (); v2821) ()
                                                        US6_1
                                                    else
                                                        let v2864 : unit = ()
                                                        let v2865 : (unit -> unit) = closure17(v266, v2813)
                                                        let v2866 : unit = (fun () -> v2865 (); v2864) ()
                                                        US6_1
                                                | US8_0(v2811) -> (* Ok *)
                                                    US6_0(v2811)
                                            return v2934 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2935 : Async<US6> = _v2809 
                                    let _v2793 = v2935 
                                    #endif
#else
                                    let v2936 : unit = ()
                                    let _v2936 =
                                        async {
                                            let! v2788 = v2788 
                                            let v2937 : US8 = v2788 
                                            let v3061 : US6 =
                                                match v2937 with
                                                | US8_1(v2940) -> (* Error *)
                                                    let v2941 : string = $"%A{v2940}"
                                                    let v2944 : string = "System.TimeoutException"
                                                    let v2945 : bool = v2941.Contains v2944 
                                                    if v2945 then
                                                        let v2948 : unit = ()
                                                        let v2949 : (unit -> unit) = closure16(v266)
                                                        let v2950 : unit = (fun () -> v2949 (); v2948) ()
                                                        US6_1
                                                    else
                                                        let v2991 : unit = ()
                                                        let v2992 : (unit -> unit) = closure17(v266, v2940)
                                                        let v2993 : unit = (fun () -> v2992 (); v2991) ()
                                                        US6_1
                                                | US8_0(v2938) -> (* Ok *)
                                                    US6_0(v2938)
                                            return v3061 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3062 : Async<US6> = _v2936 
                                    let _v2793 = v3062 
                                    #endif
                                    let v3063 : Async<US6> = _v2793 
                                    return! v3063 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v3068 : Async<US6> = _v2623 
                            let _v2607 = v3068 
                            #endif
#else
                            let v3069 : unit = ()
                            let _v3069 =
                                async {
                                    let v3070 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3071 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3070 = v3071 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3074 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3070 = v3074 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3077 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3070 = v3077 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3080 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3070 = v3080 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3083 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3070 = v3083 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3086 : Async<Async<bool>> = Async.StartChild (v2586, v266)
                                    let _v3070 = v3086 
                                    #endif
#else
                                    let v3087 : Async<Async<bool>> = Async.StartChild (v2586, v266)
                                    let _v3070 = v3087 
                                    #endif
                                    let v3088 : Async<Async<bool>> = _v3070 
                                    let! v3088 = v3088 
                                    let v3093 : Async<bool> = v3088 
                                    let v3094 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3095 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3094 = v3095 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3098 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3094 = v3098 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3101 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3094 = v3101 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3104 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3094 = v3104 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3107 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3094 = v3107 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3110 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v3111 : Async<Choice<bool, exn>> = v3110 v3093
                                    let _v3094 = v3111 
                                    #endif
#else
                                    let v3112 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v3113 : Async<Choice<bool, exn>> = v3112 v3093
                                    let _v3094 = v3113 
                                    #endif
                                    let v3114 : Async<Choice<bool, exn>> = _v3094 
                                    let v3119 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3120 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3119 = v3120 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3123 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3119 = v3123 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3126 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3119 = v3126 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3129 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3119 = v3129 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3132 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3119 = v3132 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3135 : unit = ()
                                    let _v3135 =
                                        async {
                                            let! v3114 = v3114 
                                            let v3136 : Choice<bool, exn> = v3114 
                                            let v3137 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v3138 : US7 = null |> unbox<US7>
                                            let _v3137 = v3138 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v3141 : US7 = null |> unbox<US7>
                                            let _v3137 = v3141 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v3144 : US7 = null |> unbox<US7>
                                            let _v3137 = v3144 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v3147 : US7 = null |> unbox<US7>
                                            let _v3137 = v3147 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v3150 : US7 = null |> unbox<US7>
                                            let _v3137 = v3150 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v3153 : (bool -> US7) = method19()
                                            let v3154 : (exn -> US7) = method20()
                                            let v3155 : US7 = match v3136 with Choice1Of2 x -> v3153 x | Choice2Of2 x -> v3154 x
                                            let _v3137 = v3155 
                                            #endif
#else
                                            let v3156 : (bool -> US7) = method19()
                                            let v3157 : (exn -> US7) = method20()
                                            let v3158 : US7 = match v3136 with Choice1Of2 x -> v3156 x | Choice2Of2 x -> v3157 x
                                            let _v3137 = v3158 
                                            #endif
                                            let v3159 : US7 = _v3137 
                                            return v3159 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3164 : Async<US7> = _v3135 
                                    let _v3119 = v3164 
                                    #endif
#else
                                    let v3165 : unit = ()
                                    let _v3165 =
                                        async {
                                            let! v3114 = v3114 
                                            let v3166 : Choice<bool, exn> = v3114 
                                            let v3167 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v3168 : US7 = null |> unbox<US7>
                                            let _v3167 = v3168 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v3171 : US7 = null |> unbox<US7>
                                            let _v3167 = v3171 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v3174 : US7 = null |> unbox<US7>
                                            let _v3167 = v3174 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v3177 : US7 = null |> unbox<US7>
                                            let _v3167 = v3177 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v3180 : US7 = null |> unbox<US7>
                                            let _v3167 = v3180 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v3183 : (bool -> US7) = method19()
                                            let v3184 : (exn -> US7) = method20()
                                            let v3185 : US7 = match v3166 with Choice1Of2 x -> v3183 x | Choice2Of2 x -> v3184 x
                                            let _v3167 = v3185 
                                            #endif
#else
                                            let v3186 : (bool -> US7) = method19()
                                            let v3187 : (exn -> US7) = method20()
                                            let v3188 : US7 = match v3166 with Choice1Of2 x -> v3186 x | Choice2Of2 x -> v3187 x
                                            let _v3167 = v3188 
                                            #endif
                                            let v3189 : US7 = _v3167 
                                            return v3189 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3194 : Async<US7> = _v3165 
                                    let _v3119 = v3194 
                                    #endif
                                    let v3195 : Async<US7> = _v3119 
                                    let v3200 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3201 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3200 = v3201 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3204 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3200 = v3204 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3207 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3200 = v3207 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3210 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3200 = v3210 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3213 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3200 = v3213 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3216 : unit = ()
                                    let _v3216 =
                                        async {
                                            let! v3195 = v3195 
                                            let v3217 : US7 = v3195 
                                            let v3223 : US8 =
                                                match v3217 with
                                                | US7_0(v3218) -> (* C1of2 *)
                                                    US8_0(v3218)
                                                | US7_1(v3220) -> (* C2of2 *)
                                                    US8_1(v3220)
                                            return v3223 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3224 : Async<US8> = _v3216 
                                    let _v3200 = v3224 
                                    #endif
#else
                                    let v3225 : unit = ()
                                    let _v3225 =
                                        async {
                                            let! v3195 = v3195 
                                            let v3226 : US7 = v3195 
                                            let v3232 : US8 =
                                                match v3226 with
                                                | US7_0(v3227) -> (* C1of2 *)
                                                    US8_0(v3227)
                                                | US7_1(v3229) -> (* C2of2 *)
                                                    US8_1(v3229)
                                            return v3232 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3233 : Async<US8> = _v3225 
                                    let _v3200 = v3233 
                                    #endif
                                    let v3234 : Async<US8> = _v3200 
                                    let v3239 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3240 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3239 = v3240 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3243 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3239 = v3243 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3246 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3239 = v3246 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3249 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3239 = v3249 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3252 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3239 = v3252 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3255 : unit = ()
                                    let _v3255 =
                                        async {
                                            let! v3234 = v3234 
                                            let v3256 : US8 = v3234 
                                            let v3380 : US6 =
                                                match v3256 with
                                                | US8_1(v3259) -> (* Error *)
                                                    let v3260 : string = $"%A{v3259}"
                                                    let v3263 : string = "System.TimeoutException"
                                                    let v3264 : bool = v3260.Contains v3263 
                                                    if v3264 then
                                                        let v3267 : unit = ()
                                                        let v3268 : (unit -> unit) = closure16(v266)
                                                        let v3269 : unit = (fun () -> v3268 (); v3267) ()
                                                        US6_1
                                                    else
                                                        let v3310 : unit = ()
                                                        let v3311 : (unit -> unit) = closure17(v266, v3259)
                                                        let v3312 : unit = (fun () -> v3311 (); v3310) ()
                                                        US6_1
                                                | US8_0(v3257) -> (* Ok *)
                                                    US6_0(v3257)
                                            return v3380 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3381 : Async<US6> = _v3255 
                                    let _v3239 = v3381 
                                    #endif
#else
                                    let v3382 : unit = ()
                                    let _v3382 =
                                        async {
                                            let! v3234 = v3234 
                                            let v3383 : US8 = v3234 
                                            let v3507 : US6 =
                                                match v3383 with
                                                | US8_1(v3386) -> (* Error *)
                                                    let v3387 : string = $"%A{v3386}"
                                                    let v3390 : string = "System.TimeoutException"
                                                    let v3391 : bool = v3387.Contains v3390 
                                                    if v3391 then
                                                        let v3394 : unit = ()
                                                        let v3395 : (unit -> unit) = closure16(v266)
                                                        let v3396 : unit = (fun () -> v3395 (); v3394) ()
                                                        US6_1
                                                    else
                                                        let v3437 : unit = ()
                                                        let v3438 : (unit -> unit) = closure17(v266, v3386)
                                                        let v3439 : unit = (fun () -> v3438 (); v3437) ()
                                                        US6_1
                                                | US8_0(v3384) -> (* Ok *)
                                                    US6_0(v3384)
                                            return v3507 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3508 : Async<US6> = _v3382 
                                    let _v3239 = v3508 
                                    #endif
                                    let v3509 : Async<US6> = _v3239 
                                    return! v3509 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v3514 : Async<US6> = _v3069 
                            let _v2607 = v3514 
                            #endif
                            let v3515 : Async<US6> = _v2607 
                            let _v2591 = v3515 
                            #endif
#else
                            let v3520 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v3521 : Async<US6> = null |> unbox<Async<US6>>
                            let _v3520 = v3521 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v3524 : Async<US6> = null |> unbox<Async<US6>>
                            let _v3520 = v3524 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v3527 : Async<US6> = null |> unbox<Async<US6>>
                            let _v3520 = v3527 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v3530 : Async<US6> = null |> unbox<Async<US6>>
                            let _v3520 = v3530 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v3533 : Async<US6> = null |> unbox<Async<US6>>
                            let _v3520 = v3533 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v3536 : unit = ()
                            let _v3536 =
                                async {
                                    let v3537 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3538 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3537 = v3538 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3541 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3537 = v3541 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3544 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3537 = v3544 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3547 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3537 = v3547 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3550 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3537 = v3550 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3553 : Async<Async<bool>> = Async.StartChild (v2586, v266)
                                    let _v3537 = v3553 
                                    #endif
#else
                                    let v3554 : Async<Async<bool>> = Async.StartChild (v2586, v266)
                                    let _v3537 = v3554 
                                    #endif
                                    let v3555 : Async<Async<bool>> = _v3537 
                                    let! v3555 = v3555 
                                    let v3560 : Async<bool> = v3555 
                                    let v3561 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3562 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3561 = v3562 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3565 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3561 = v3565 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3568 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3561 = v3568 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3571 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3561 = v3571 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3574 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3561 = v3574 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3577 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v3578 : Async<Choice<bool, exn>> = v3577 v3560
                                    let _v3561 = v3578 
                                    #endif
#else
                                    let v3579 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v3580 : Async<Choice<bool, exn>> = v3579 v3560
                                    let _v3561 = v3580 
                                    #endif
                                    let v3581 : Async<Choice<bool, exn>> = _v3561 
                                    let v3586 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3587 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3586 = v3587 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3590 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3586 = v3590 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3593 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3586 = v3593 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3596 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3586 = v3596 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3599 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3586 = v3599 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3602 : unit = ()
                                    let _v3602 =
                                        async {
                                            let! v3581 = v3581 
                                            let v3603 : Choice<bool, exn> = v3581 
                                            let v3604 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v3605 : US7 = null |> unbox<US7>
                                            let _v3604 = v3605 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v3608 : US7 = null |> unbox<US7>
                                            let _v3604 = v3608 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v3611 : US7 = null |> unbox<US7>
                                            let _v3604 = v3611 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v3614 : US7 = null |> unbox<US7>
                                            let _v3604 = v3614 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v3617 : US7 = null |> unbox<US7>
                                            let _v3604 = v3617 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v3620 : (bool -> US7) = method19()
                                            let v3621 : (exn -> US7) = method20()
                                            let v3622 : US7 = match v3603 with Choice1Of2 x -> v3620 x | Choice2Of2 x -> v3621 x
                                            let _v3604 = v3622 
                                            #endif
#else
                                            let v3623 : (bool -> US7) = method19()
                                            let v3624 : (exn -> US7) = method20()
                                            let v3625 : US7 = match v3603 with Choice1Of2 x -> v3623 x | Choice2Of2 x -> v3624 x
                                            let _v3604 = v3625 
                                            #endif
                                            let v3626 : US7 = _v3604 
                                            return v3626 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3631 : Async<US7> = _v3602 
                                    let _v3586 = v3631 
                                    #endif
#else
                                    let v3632 : unit = ()
                                    let _v3632 =
                                        async {
                                            let! v3581 = v3581 
                                            let v3633 : Choice<bool, exn> = v3581 
                                            let v3634 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v3635 : US7 = null |> unbox<US7>
                                            let _v3634 = v3635 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v3638 : US7 = null |> unbox<US7>
                                            let _v3634 = v3638 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v3641 : US7 = null |> unbox<US7>
                                            let _v3634 = v3641 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v3644 : US7 = null |> unbox<US7>
                                            let _v3634 = v3644 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v3647 : US7 = null |> unbox<US7>
                                            let _v3634 = v3647 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v3650 : (bool -> US7) = method19()
                                            let v3651 : (exn -> US7) = method20()
                                            let v3652 : US7 = match v3633 with Choice1Of2 x -> v3650 x | Choice2Of2 x -> v3651 x
                                            let _v3634 = v3652 
                                            #endif
#else
                                            let v3653 : (bool -> US7) = method19()
                                            let v3654 : (exn -> US7) = method20()
                                            let v3655 : US7 = match v3633 with Choice1Of2 x -> v3653 x | Choice2Of2 x -> v3654 x
                                            let _v3634 = v3655 
                                            #endif
                                            let v3656 : US7 = _v3634 
                                            return v3656 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3661 : Async<US7> = _v3632 
                                    let _v3586 = v3661 
                                    #endif
                                    let v3662 : Async<US7> = _v3586 
                                    let v3667 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3668 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3667 = v3668 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3671 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3667 = v3671 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3674 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3667 = v3674 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3677 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3667 = v3677 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3680 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3667 = v3680 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3683 : unit = ()
                                    let _v3683 =
                                        async {
                                            let! v3662 = v3662 
                                            let v3684 : US7 = v3662 
                                            let v3690 : US8 =
                                                match v3684 with
                                                | US7_0(v3685) -> (* C1of2 *)
                                                    US8_0(v3685)
                                                | US7_1(v3687) -> (* C2of2 *)
                                                    US8_1(v3687)
                                            return v3690 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3691 : Async<US8> = _v3683 
                                    let _v3667 = v3691 
                                    #endif
#else
                                    let v3692 : unit = ()
                                    let _v3692 =
                                        async {
                                            let! v3662 = v3662 
                                            let v3693 : US7 = v3662 
                                            let v3699 : US8 =
                                                match v3693 with
                                                | US7_0(v3694) -> (* C1of2 *)
                                                    US8_0(v3694)
                                                | US7_1(v3696) -> (* C2of2 *)
                                                    US8_1(v3696)
                                            return v3699 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3700 : Async<US8> = _v3692 
                                    let _v3667 = v3700 
                                    #endif
                                    let v3701 : Async<US8> = _v3667 
                                    let v3706 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3707 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3706 = v3707 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3710 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3706 = v3710 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3713 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3706 = v3713 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3716 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3706 = v3716 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3719 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3706 = v3719 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3722 : unit = ()
                                    let _v3722 =
                                        async {
                                            let! v3701 = v3701 
                                            let v3723 : US8 = v3701 
                                            let v3847 : US6 =
                                                match v3723 with
                                                | US8_1(v3726) -> (* Error *)
                                                    let v3727 : string = $"%A{v3726}"
                                                    let v3730 : string = "System.TimeoutException"
                                                    let v3731 : bool = v3727.Contains v3730 
                                                    if v3731 then
                                                        let v3734 : unit = ()
                                                        let v3735 : (unit -> unit) = closure16(v266)
                                                        let v3736 : unit = (fun () -> v3735 (); v3734) ()
                                                        US6_1
                                                    else
                                                        let v3777 : unit = ()
                                                        let v3778 : (unit -> unit) = closure17(v266, v3726)
                                                        let v3779 : unit = (fun () -> v3778 (); v3777) ()
                                                        US6_1
                                                | US8_0(v3724) -> (* Ok *)
                                                    US6_0(v3724)
                                            return v3847 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3848 : Async<US6> = _v3722 
                                    let _v3706 = v3848 
                                    #endif
#else
                                    let v3849 : unit = ()
                                    let _v3849 =
                                        async {
                                            let! v3701 = v3701 
                                            let v3850 : US8 = v3701 
                                            let v3974 : US6 =
                                                match v3850 with
                                                | US8_1(v3853) -> (* Error *)
                                                    let v3854 : string = $"%A{v3853}"
                                                    let v3857 : string = "System.TimeoutException"
                                                    let v3858 : bool = v3854.Contains v3857 
                                                    if v3858 then
                                                        let v3861 : unit = ()
                                                        let v3862 : (unit -> unit) = closure16(v266)
                                                        let v3863 : unit = (fun () -> v3862 (); v3861) ()
                                                        US6_1
                                                    else
                                                        let v3904 : unit = ()
                                                        let v3905 : (unit -> unit) = closure17(v266, v3853)
                                                        let v3906 : unit = (fun () -> v3905 (); v3904) ()
                                                        US6_1
                                                | US8_0(v3851) -> (* Ok *)
                                                    US6_0(v3851)
                                            return v3974 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3975 : Async<US6> = _v3849 
                                    let _v3706 = v3975 
                                    #endif
                                    let v3976 : Async<US6> = _v3706 
                                    return! v3976 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v3981 : Async<US6> = _v3536 
                            let _v3520 = v3981 
                            #endif
#else
                            let v3982 : unit = ()
                            let _v3982 =
                                async {
                                    let v3983 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3984 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3983 = v3984 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3987 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3983 = v3987 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3990 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3983 = v3990 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3993 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3983 = v3993 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3996 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3983 = v3996 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3999 : Async<Async<bool>> = Async.StartChild (v2586, v266)
                                    let _v3983 = v3999 
                                    #endif
#else
                                    let v4000 : Async<Async<bool>> = Async.StartChild (v2586, v266)
                                    let _v3983 = v4000 
                                    #endif
                                    let v4001 : Async<Async<bool>> = _v3983 
                                    let! v4001 = v4001 
                                    let v4006 : Async<bool> = v4001 
                                    let v4007 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4008 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v4007 = v4008 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4011 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v4007 = v4011 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4014 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v4007 = v4014 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4017 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v4007 = v4017 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4020 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v4007 = v4020 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4023 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v4024 : Async<Choice<bool, exn>> = v4023 v4006
                                    let _v4007 = v4024 
                                    #endif
#else
                                    let v4025 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v4026 : Async<Choice<bool, exn>> = v4025 v4006
                                    let _v4007 = v4026 
                                    #endif
                                    let v4027 : Async<Choice<bool, exn>> = _v4007 
                                    let v4032 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4033 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v4032 = v4033 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4036 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v4032 = v4036 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4039 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v4032 = v4039 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4042 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v4032 = v4042 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4045 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v4032 = v4045 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4048 : unit = ()
                                    let _v4048 =
                                        async {
                                            let! v4027 = v4027 
                                            let v4049 : Choice<bool, exn> = v4027 
                                            let v4050 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v4051 : US7 = null |> unbox<US7>
                                            let _v4050 = v4051 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v4054 : US7 = null |> unbox<US7>
                                            let _v4050 = v4054 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v4057 : US7 = null |> unbox<US7>
                                            let _v4050 = v4057 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v4060 : US7 = null |> unbox<US7>
                                            let _v4050 = v4060 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v4063 : US7 = null |> unbox<US7>
                                            let _v4050 = v4063 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v4066 : (bool -> US7) = method19()
                                            let v4067 : (exn -> US7) = method20()
                                            let v4068 : US7 = match v4049 with Choice1Of2 x -> v4066 x | Choice2Of2 x -> v4067 x
                                            let _v4050 = v4068 
                                            #endif
#else
                                            let v4069 : (bool -> US7) = method19()
                                            let v4070 : (exn -> US7) = method20()
                                            let v4071 : US7 = match v4049 with Choice1Of2 x -> v4069 x | Choice2Of2 x -> v4070 x
                                            let _v4050 = v4071 
                                            #endif
                                            let v4072 : US7 = _v4050 
                                            return v4072 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4077 : Async<US7> = _v4048 
                                    let _v4032 = v4077 
                                    #endif
#else
                                    let v4078 : unit = ()
                                    let _v4078 =
                                        async {
                                            let! v4027 = v4027 
                                            let v4079 : Choice<bool, exn> = v4027 
                                            let v4080 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v4081 : US7 = null |> unbox<US7>
                                            let _v4080 = v4081 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v4084 : US7 = null |> unbox<US7>
                                            let _v4080 = v4084 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v4087 : US7 = null |> unbox<US7>
                                            let _v4080 = v4087 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v4090 : US7 = null |> unbox<US7>
                                            let _v4080 = v4090 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v4093 : US7 = null |> unbox<US7>
                                            let _v4080 = v4093 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v4096 : (bool -> US7) = method19()
                                            let v4097 : (exn -> US7) = method20()
                                            let v4098 : US7 = match v4079 with Choice1Of2 x -> v4096 x | Choice2Of2 x -> v4097 x
                                            let _v4080 = v4098 
                                            #endif
#else
                                            let v4099 : (bool -> US7) = method19()
                                            let v4100 : (exn -> US7) = method20()
                                            let v4101 : US7 = match v4079 with Choice1Of2 x -> v4099 x | Choice2Of2 x -> v4100 x
                                            let _v4080 = v4101 
                                            #endif
                                            let v4102 : US7 = _v4080 
                                            return v4102 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4107 : Async<US7> = _v4078 
                                    let _v4032 = v4107 
                                    #endif
                                    let v4108 : Async<US7> = _v4032 
                                    let v4113 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4114 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v4113 = v4114 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4117 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v4113 = v4117 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4120 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v4113 = v4120 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4123 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v4113 = v4123 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4126 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v4113 = v4126 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4129 : unit = ()
                                    let _v4129 =
                                        async {
                                            let! v4108 = v4108 
                                            let v4130 : US7 = v4108 
                                            let v4136 : US8 =
                                                match v4130 with
                                                | US7_0(v4131) -> (* C1of2 *)
                                                    US8_0(v4131)
                                                | US7_1(v4133) -> (* C2of2 *)
                                                    US8_1(v4133)
                                            return v4136 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4137 : Async<US8> = _v4129 
                                    let _v4113 = v4137 
                                    #endif
#else
                                    let v4138 : unit = ()
                                    let _v4138 =
                                        async {
                                            let! v4108 = v4108 
                                            let v4139 : US7 = v4108 
                                            let v4145 : US8 =
                                                match v4139 with
                                                | US7_0(v4140) -> (* C1of2 *)
                                                    US8_0(v4140)
                                                | US7_1(v4142) -> (* C2of2 *)
                                                    US8_1(v4142)
                                            return v4145 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4146 : Async<US8> = _v4138 
                                    let _v4113 = v4146 
                                    #endif
                                    let v4147 : Async<US8> = _v4113 
                                    let v4152 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4153 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v4152 = v4153 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4156 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v4152 = v4156 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4159 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v4152 = v4159 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4162 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v4152 = v4162 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4165 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v4152 = v4165 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4168 : unit = ()
                                    let _v4168 =
                                        async {
                                            let! v4147 = v4147 
                                            let v4169 : US8 = v4147 
                                            let v4293 : US6 =
                                                match v4169 with
                                                | US8_1(v4172) -> (* Error *)
                                                    let v4173 : string = $"%A{v4172}"
                                                    let v4176 : string = "System.TimeoutException"
                                                    let v4177 : bool = v4173.Contains v4176 
                                                    if v4177 then
                                                        let v4180 : unit = ()
                                                        let v4181 : (unit -> unit) = closure16(v266)
                                                        let v4182 : unit = (fun () -> v4181 (); v4180) ()
                                                        US6_1
                                                    else
                                                        let v4223 : unit = ()
                                                        let v4224 : (unit -> unit) = closure17(v266, v4172)
                                                        let v4225 : unit = (fun () -> v4224 (); v4223) ()
                                                        US6_1
                                                | US8_0(v4170) -> (* Ok *)
                                                    US6_0(v4170)
                                            return v4293 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4294 : Async<US6> = _v4168 
                                    let _v4152 = v4294 
                                    #endif
#else
                                    let v4295 : unit = ()
                                    let _v4295 =
                                        async {
                                            let! v4147 = v4147 
                                            let v4296 : US8 = v4147 
                                            let v4420 : US6 =
                                                match v4296 with
                                                | US8_1(v4299) -> (* Error *)
                                                    let v4300 : string = $"%A{v4299}"
                                                    let v4303 : string = "System.TimeoutException"
                                                    let v4304 : bool = v4300.Contains v4303 
                                                    if v4304 then
                                                        let v4307 : unit = ()
                                                        let v4308 : (unit -> unit) = closure16(v266)
                                                        let v4309 : unit = (fun () -> v4308 (); v4307) ()
                                                        US6_1
                                                    else
                                                        let v4350 : unit = ()
                                                        let v4351 : (unit -> unit) = closure17(v266, v4299)
                                                        let v4352 : unit = (fun () -> v4351 (); v4350) ()
                                                        US6_1
                                                | US8_0(v4297) -> (* Ok *)
                                                    US6_0(v4297)
                                            return v4420 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4421 : Async<US6> = _v4295 
                                    let _v4152 = v4421 
                                    #endif
                                    let v4422 : Async<US6> = _v4152 
                                    return! v4422 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v4427 : Async<US6> = _v3982 
                            let _v3520 = v4427 
                            #endif
                            let v4428 : Async<US6> = _v3520 
                            let _v2591 = v4428 
                            #endif
                            let v4433 : Async<US6> = _v2591 
                            let! v4433 = v4433 
                            let v4438 : US6 = v4433 
                            let v4441 : bool =
                                match v4438 with
                                | US6_1 -> (* None *)
                                    false
                                | US6_0(v4439) -> (* Some *)
                                    v4439
                            return v4441 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v4442 : Async<bool> = _v2363 
                    let _v267 = v4442 
                    #endif
                    let v4443 : Async<bool> = _v267 
                    v4443
            let! v4449 = v4449 
            let v4450 : bool = v4449 
            let v4451 : bool = v4450 = v1
            if v4451 then
                return v4 
                (*
                ()
            else
                *) else
                let v4452 : int64 = v4 % 100L
                let v4453 : bool = v4452 = 0L
                if v4453 then
                    let v4454 : unit = ()
                    let v4455 : (unit -> unit) = closure23(v0, v1, v3, v4)
                    let v4456 : unit = (fun () -> v4455 (); v4454) ()
                    ()
                let v4496 : unit = ()
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v4497 : Async<unit> = null |> unbox<Async<unit>>
                let _v4496 = v4497 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v4500 : Async<unit> = null |> unbox<Async<unit>>
                let _v4496 = v4500 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v4503 : Async<unit> = null |> unbox<Async<unit>>
                let _v4496 = v4503 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v4506 : Async<unit> = null |> unbox<Async<unit>>
                let _v4496 = v4506 
                #endif
#if FABLE_COMPILER_PYTHON
                let v4509 : Async<unit> = null |> unbox<Async<unit>>
                let _v4496 = v4509 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v4512 : (int32 -> Async<unit>) = Async.Sleep
                let v4513 : Async<unit> = v4512 10
                let _v4496 = v4513 
                #endif
#else
                let v4514 : (int32 -> Async<unit>) = Async.Sleep
                let v4515 : Async<unit> = v4514 10
                let _v4496 = v4515 
                #endif
                let v4516 : Async<unit> = _v4496 
                do! v4516 
                let v4521 : int64 = v4 + 1L
                let v4522 : Async<int64> = method26(v0, v1, v2, v3, v4521)
                return! v4522 
                (*
                ()
            *)
            (*
            ()
        *)
        }
        (*
        ()
    *)
    let v4523 : Async<int64> = _v21 
    let _v5 = v4523 
    #endif
#else
    let v4524 : unit = ()
    let _v4524 =
        async {
            let v4525 : (int32 -> US9) = method27()
            let v4526 : US9 option = v0 |> Option.map v4525 
            let v4537 : US9 = US9_1
            let v4538 : US9 = v4526 |> Option.defaultValue v4537 
            let v8952 : Async<bool> =
                match v4538 with
                | US9_1 -> (* None *)
                    let v4542 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4543 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4542 = v4543 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4546 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4542 = v4546 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4549 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4542 = v4549 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4552 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4542 = v4552 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4555 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4542 = v4555 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4558 : unit = ()
                    let _v4558 =
                        async {
                            let v4559 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                            let! v4559 = v4559 
                            let v4560 : System.Threading.CancellationToken = v4559 
                            let v4561 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                            use v4561 = v4561 
                            let v4562 : System.Net.Sockets.TcpClient = v4561 
                            try
                            let v4563 : System.Threading.Tasks.ValueTask = v4562.ConnectAsync (v2, v3, v4560)
                            let v4564 : (unit -> System.Threading.Tasks.Task) = v4563.AsTask
                            let v4565 : System.Threading.Tasks.Task = v4564 ()
                            let v4566 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v4567 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4566 = v4567 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v4570 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4566 = v4570 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v4573 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4566 = v4573 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v4576 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4566 = v4576 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v4579 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4566 = v4579 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v4582 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v4583 : Async<unit> = v4582 v4565
                            let _v4566 = v4583 
                            #endif
#else
                            let v4584 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v4585 : Async<unit> = v4584 v4565
                            let _v4566 = v4585 
                            #endif
                            let v4586 : Async<unit> = _v4566 
                            do! v4586 
                            return true 
                            with ex ->
                                let v4591 : exn = ex
                                let v4592 : unit = ()
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v4593 : string = $"%A{v4591}"
                                let _v4592 = v4593 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v4596 : string = $"%A{v4591}"
                                let _v4592 = v4596 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v4599 : string = $"%A{v4591}"
                                let _v4592 = v4599 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v4602 : string = $"%A{v4591}"
                                let _v4592 = v4602 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v4605 : string = $"%A{v4591}"
                                let _v4592 = v4605 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v4608 : string = $"%A{v4591}"
                                let _v4592 = v4608 
                                #endif
#else
                                let v4611 : string = $"{v4591.GetType ()}: {v4591.Message}"
                                let _v4592 = v4611 
                                #endif
                                let v4612 : string = _v4592 
                                let v4617 : unit = ()
                                let v4618 : (unit -> unit) = closure5(v3, v4612)
                                let v4619 : unit = (fun () -> v4618 (); v4617) ()
                                return false 
                                (*
                                ()
                            *)
                            (*
                            let v4659 : bool = *)
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v4660 : Async<bool> = _v4558 
                    let _v4542 = v4660 
                    #endif
#else
                    let v4661 : unit = ()
                    let _v4661 =
                        async {
                            let v4662 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                            let! v4662 = v4662 
                            let v4663 : System.Threading.CancellationToken = v4662 
                            let v4664 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                            use v4664 = v4664 
                            let v4665 : System.Net.Sockets.TcpClient = v4664 
                            try
                            let v4666 : System.Threading.Tasks.ValueTask = v4665.ConnectAsync (v2, v3, v4663)
                            let v4667 : (unit -> System.Threading.Tasks.Task) = v4666.AsTask
                            let v4668 : System.Threading.Tasks.Task = v4667 ()
                            let v4669 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v4670 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4669 = v4670 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v4673 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4669 = v4673 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v4676 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4669 = v4676 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v4679 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4669 = v4679 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v4682 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4669 = v4682 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v4685 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v4686 : Async<unit> = v4685 v4668
                            let _v4669 = v4686 
                            #endif
#else
                            let v4687 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v4688 : Async<unit> = v4687 v4668
                            let _v4669 = v4688 
                            #endif
                            let v4689 : Async<unit> = _v4669 
                            do! v4689 
                            return true 
                            with ex ->
                                let v4694 : exn = ex
                                let v4695 : unit = ()
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v4696 : string = $"%A{v4694}"
                                let _v4695 = v4696 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v4699 : string = $"%A{v4694}"
                                let _v4695 = v4699 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v4702 : string = $"%A{v4694}"
                                let _v4695 = v4702 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v4705 : string = $"%A{v4694}"
                                let _v4695 = v4705 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v4708 : string = $"%A{v4694}"
                                let _v4695 = v4708 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v4711 : string = $"%A{v4694}"
                                let _v4695 = v4711 
                                #endif
#else
                                let v4714 : string = $"{v4694.GetType ()}: {v4694.Message}"
                                let _v4695 = v4714 
                                #endif
                                let v4715 : string = _v4695 
                                let v4720 : unit = ()
                                let v4721 : (unit -> unit) = closure5(v3, v4715)
                                let v4722 : unit = (fun () -> v4721 (); v4720) ()
                                return false 
                                (*
                                ()
                            *)
                            (*
                            let v4762 : bool = *)
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v4763 : Async<bool> = _v4661 
                    let _v4542 = v4763 
                    #endif
                    let v4764 : Async<bool> = _v4542 
                    v4764
                | US9_0(v4769) -> (* Some *)
                    let v4770 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4771 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4770 = v4771 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4774 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4770 = v4774 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4777 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4770 = v4777 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4780 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4770 = v4780 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4783 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4770 = v4783 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4786 : unit = ()
                    let _v4786 =
                        async {
                            let v4787 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v4788 : Async<bool> = null |> unbox<Async<bool>>
                            let _v4787 = v4788 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v4791 : Async<bool> = null |> unbox<Async<bool>>
                            let _v4787 = v4791 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v4794 : Async<bool> = null |> unbox<Async<bool>>
                            let _v4787 = v4794 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v4797 : Async<bool> = null |> unbox<Async<bool>>
                            let _v4787 = v4797 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v4800 : Async<bool> = null |> unbox<Async<bool>>
                            let _v4787 = v4800 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v4803 : unit = ()
                            let _v4803 =
                                async {
                                    let v4804 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v4804 = v4804 
                                    let v4805 : System.Threading.CancellationToken = v4804 
                                    let v4806 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v4806 = v4806 
                                    let v4807 : System.Net.Sockets.TcpClient = v4806 
                                    try
                                    let v4808 : System.Threading.Tasks.ValueTask = v4807.ConnectAsync (v2, v3, v4805)
                                    let v4809 : (unit -> System.Threading.Tasks.Task) = v4808.AsTask
                                    let v4810 : System.Threading.Tasks.Task = v4809 ()
                                    let v4811 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4812 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4811 = v4812 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4815 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4811 = v4815 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4818 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4811 = v4818 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4821 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4811 = v4821 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4824 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4811 = v4824 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4827 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v4828 : Async<unit> = v4827 v4810
                                    let _v4811 = v4828 
                                    #endif
#else
                                    let v4829 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v4830 : Async<unit> = v4829 v4810
                                    let _v4811 = v4830 
                                    #endif
                                    let v4831 : Async<unit> = _v4811 
                                    do! v4831 
                                    return true 
                                    with ex ->
                                        let v4836 : exn = ex
                                        let v4837 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v4838 : string = $"%A{v4836}"
                                        let _v4837 = v4838 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v4841 : string = $"%A{v4836}"
                                        let _v4837 = v4841 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v4844 : string = $"%A{v4836}"
                                        let _v4837 = v4844 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v4847 : string = $"%A{v4836}"
                                        let _v4837 = v4847 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v4850 : string = $"%A{v4836}"
                                        let _v4837 = v4850 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v4853 : string = $"%A{v4836}"
                                        let _v4837 = v4853 
                                        #endif
#else
                                        let v4856 : string = $"{v4836.GetType ()}: {v4836.Message}"
                                        let _v4837 = v4856 
                                        #endif
                                        let v4857 : string = _v4837 
                                        let v4862 : unit = ()
                                        let v4863 : (unit -> unit) = closure5(v3, v4857)
                                        let v4864 : unit = (fun () -> v4863 (); v4862) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v4904 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v4905 : Async<bool> = _v4803 
                            let _v4787 = v4905 
                            #endif
#else
                            let v4906 : unit = ()
                            let _v4906 =
                                async {
                                    let v4907 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v4907 = v4907 
                                    let v4908 : System.Threading.CancellationToken = v4907 
                                    let v4909 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v4909 = v4909 
                                    let v4910 : System.Net.Sockets.TcpClient = v4909 
                                    try
                                    let v4911 : System.Threading.Tasks.ValueTask = v4910.ConnectAsync (v2, v3, v4908)
                                    let v4912 : (unit -> System.Threading.Tasks.Task) = v4911.AsTask
                                    let v4913 : System.Threading.Tasks.Task = v4912 ()
                                    let v4914 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4915 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4914 = v4915 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4918 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4914 = v4918 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4921 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4914 = v4921 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4924 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4914 = v4924 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4927 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4914 = v4927 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4930 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v4931 : Async<unit> = v4930 v4913
                                    let _v4914 = v4931 
                                    #endif
#else
                                    let v4932 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v4933 : Async<unit> = v4932 v4913
                                    let _v4914 = v4933 
                                    #endif
                                    let v4934 : Async<unit> = _v4914 
                                    do! v4934 
                                    return true 
                                    with ex ->
                                        let v4939 : exn = ex
                                        let v4940 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v4941 : string = $"%A{v4939}"
                                        let _v4940 = v4941 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v4944 : string = $"%A{v4939}"
                                        let _v4940 = v4944 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v4947 : string = $"%A{v4939}"
                                        let _v4940 = v4947 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v4950 : string = $"%A{v4939}"
                                        let _v4940 = v4950 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v4953 : string = $"%A{v4939}"
                                        let _v4940 = v4953 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v4956 : string = $"%A{v4939}"
                                        let _v4940 = v4956 
                                        #endif
#else
                                        let v4959 : string = $"{v4939.GetType ()}: {v4939.Message}"
                                        let _v4940 = v4959 
                                        #endif
                                        let v4960 : string = _v4940 
                                        let v4965 : unit = ()
                                        let v4966 : (unit -> unit) = closure5(v3, v4960)
                                        let v4967 : unit = (fun () -> v4966 (); v4965) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v5007 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v5008 : Async<bool> = _v4906 
                            let _v4787 = v5008 
                            #endif
                            let v5009 : Async<bool> = _v4787 
                            let v5014 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v5015 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5014 = v5015 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v5018 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5014 = v5018 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v5021 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5014 = v5021 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v5024 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5014 = v5024 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v5027 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5014 = v5027 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v5030 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v5031 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5030 = v5031 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v5034 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5030 = v5034 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v5037 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5030 = v5037 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v5040 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5030 = v5040 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v5043 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5030 = v5043 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v5046 : unit = ()
                            let _v5046 =
                                async {
                                    let v5047 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5048 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5047 = v5048 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5051 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5047 = v5051 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5054 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5047 = v5054 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5057 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5047 = v5057 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5060 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5047 = v5060 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5063 : Async<Async<bool>> = Async.StartChild (v5009, v4769)
                                    let _v5047 = v5063 
                                    #endif
#else
                                    let v5064 : Async<Async<bool>> = Async.StartChild (v5009, v4769)
                                    let _v5047 = v5064 
                                    #endif
                                    let v5065 : Async<Async<bool>> = _v5047 
                                    let! v5065 = v5065 
                                    let v5070 : Async<bool> = v5065 
                                    let v5071 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5072 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5071 = v5072 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5075 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5071 = v5075 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5078 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5071 = v5078 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5081 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5071 = v5081 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5084 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5071 = v5084 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5087 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v5088 : Async<Choice<bool, exn>> = v5087 v5070
                                    let _v5071 = v5088 
                                    #endif
#else
                                    let v5089 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v5090 : Async<Choice<bool, exn>> = v5089 v5070
                                    let _v5071 = v5090 
                                    #endif
                                    let v5091 : Async<Choice<bool, exn>> = _v5071 
                                    let v5096 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5097 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5096 = v5097 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5100 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5096 = v5100 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5103 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5096 = v5103 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5106 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5096 = v5106 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5109 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5096 = v5109 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5112 : unit = ()
                                    let _v5112 =
                                        async {
                                            let! v5091 = v5091 
                                            let v5113 : Choice<bool, exn> = v5091 
                                            let v5114 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v5115 : US7 = null |> unbox<US7>
                                            let _v5114 = v5115 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v5118 : US7 = null |> unbox<US7>
                                            let _v5114 = v5118 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v5121 : US7 = null |> unbox<US7>
                                            let _v5114 = v5121 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v5124 : US7 = null |> unbox<US7>
                                            let _v5114 = v5124 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v5127 : US7 = null |> unbox<US7>
                                            let _v5114 = v5127 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v5130 : (bool -> US7) = method19()
                                            let v5131 : (exn -> US7) = method20()
                                            let v5132 : US7 = match v5113 with Choice1Of2 x -> v5130 x | Choice2Of2 x -> v5131 x
                                            let _v5114 = v5132 
                                            #endif
#else
                                            let v5133 : (bool -> US7) = method19()
                                            let v5134 : (exn -> US7) = method20()
                                            let v5135 : US7 = match v5113 with Choice1Of2 x -> v5133 x | Choice2Of2 x -> v5134 x
                                            let _v5114 = v5135 
                                            #endif
                                            let v5136 : US7 = _v5114 
                                            return v5136 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5141 : Async<US7> = _v5112 
                                    let _v5096 = v5141 
                                    #endif
#else
                                    let v5142 : unit = ()
                                    let _v5142 =
                                        async {
                                            let! v5091 = v5091 
                                            let v5143 : Choice<bool, exn> = v5091 
                                            let v5144 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v5145 : US7 = null |> unbox<US7>
                                            let _v5144 = v5145 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v5148 : US7 = null |> unbox<US7>
                                            let _v5144 = v5148 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v5151 : US7 = null |> unbox<US7>
                                            let _v5144 = v5151 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v5154 : US7 = null |> unbox<US7>
                                            let _v5144 = v5154 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v5157 : US7 = null |> unbox<US7>
                                            let _v5144 = v5157 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v5160 : (bool -> US7) = method19()
                                            let v5161 : (exn -> US7) = method20()
                                            let v5162 : US7 = match v5143 with Choice1Of2 x -> v5160 x | Choice2Of2 x -> v5161 x
                                            let _v5144 = v5162 
                                            #endif
#else
                                            let v5163 : (bool -> US7) = method19()
                                            let v5164 : (exn -> US7) = method20()
                                            let v5165 : US7 = match v5143 with Choice1Of2 x -> v5163 x | Choice2Of2 x -> v5164 x
                                            let _v5144 = v5165 
                                            #endif
                                            let v5166 : US7 = _v5144 
                                            return v5166 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5171 : Async<US7> = _v5142 
                                    let _v5096 = v5171 
                                    #endif
                                    let v5172 : Async<US7> = _v5096 
                                    let v5177 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5178 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5177 = v5178 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5181 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5177 = v5181 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5184 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5177 = v5184 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5187 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5177 = v5187 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5190 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5177 = v5190 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5193 : unit = ()
                                    let _v5193 =
                                        async {
                                            let! v5172 = v5172 
                                            let v5194 : US7 = v5172 
                                            let v5200 : US8 =
                                                match v5194 with
                                                | US7_0(v5195) -> (* C1of2 *)
                                                    US8_0(v5195)
                                                | US7_1(v5197) -> (* C2of2 *)
                                                    US8_1(v5197)
                                            return v5200 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5201 : Async<US8> = _v5193 
                                    let _v5177 = v5201 
                                    #endif
#else
                                    let v5202 : unit = ()
                                    let _v5202 =
                                        async {
                                            let! v5172 = v5172 
                                            let v5203 : US7 = v5172 
                                            let v5209 : US8 =
                                                match v5203 with
                                                | US7_0(v5204) -> (* C1of2 *)
                                                    US8_0(v5204)
                                                | US7_1(v5206) -> (* C2of2 *)
                                                    US8_1(v5206)
                                            return v5209 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5210 : Async<US8> = _v5202 
                                    let _v5177 = v5210 
                                    #endif
                                    let v5211 : Async<US8> = _v5177 
                                    let v5216 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5217 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5216 = v5217 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5220 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5216 = v5220 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5223 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5216 = v5223 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5226 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5216 = v5226 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5229 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5216 = v5229 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5232 : unit = ()
                                    let _v5232 =
                                        async {
                                            let! v5211 = v5211 
                                            let v5233 : US8 = v5211 
                                            let v5357 : US6 =
                                                match v5233 with
                                                | US8_1(v5236) -> (* Error *)
                                                    let v5237 : string = $"%A{v5236}"
                                                    let v5240 : string = "System.TimeoutException"
                                                    let v5241 : bool = v5237.Contains v5240 
                                                    if v5241 then
                                                        let v5244 : unit = ()
                                                        let v5245 : (unit -> unit) = closure16(v4769)
                                                        let v5246 : unit = (fun () -> v5245 (); v5244) ()
                                                        US6_1
                                                    else
                                                        let v5287 : unit = ()
                                                        let v5288 : (unit -> unit) = closure17(v4769, v5236)
                                                        let v5289 : unit = (fun () -> v5288 (); v5287) ()
                                                        US6_1
                                                | US8_0(v5234) -> (* Ok *)
                                                    US6_0(v5234)
                                            return v5357 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5358 : Async<US6> = _v5232 
                                    let _v5216 = v5358 
                                    #endif
#else
                                    let v5359 : unit = ()
                                    let _v5359 =
                                        async {
                                            let! v5211 = v5211 
                                            let v5360 : US8 = v5211 
                                            let v5484 : US6 =
                                                match v5360 with
                                                | US8_1(v5363) -> (* Error *)
                                                    let v5364 : string = $"%A{v5363}"
                                                    let v5367 : string = "System.TimeoutException"
                                                    let v5368 : bool = v5364.Contains v5367 
                                                    if v5368 then
                                                        let v5371 : unit = ()
                                                        let v5372 : (unit -> unit) = closure16(v4769)
                                                        let v5373 : unit = (fun () -> v5372 (); v5371) ()
                                                        US6_1
                                                    else
                                                        let v5414 : unit = ()
                                                        let v5415 : (unit -> unit) = closure17(v4769, v5363)
                                                        let v5416 : unit = (fun () -> v5415 (); v5414) ()
                                                        US6_1
                                                | US8_0(v5361) -> (* Ok *)
                                                    US6_0(v5361)
                                            return v5484 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5485 : Async<US6> = _v5359 
                                    let _v5216 = v5485 
                                    #endif
                                    let v5486 : Async<US6> = _v5216 
                                    return! v5486 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v5491 : Async<US6> = _v5046 
                            let _v5030 = v5491 
                            #endif
#else
                            let v5492 : unit = ()
                            let _v5492 =
                                async {
                                    let v5493 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5494 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5493 = v5494 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5497 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5493 = v5497 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5500 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5493 = v5500 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5503 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5493 = v5503 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5506 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5493 = v5506 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5509 : Async<Async<bool>> = Async.StartChild (v5009, v4769)
                                    let _v5493 = v5509 
                                    #endif
#else
                                    let v5510 : Async<Async<bool>> = Async.StartChild (v5009, v4769)
                                    let _v5493 = v5510 
                                    #endif
                                    let v5511 : Async<Async<bool>> = _v5493 
                                    let! v5511 = v5511 
                                    let v5516 : Async<bool> = v5511 
                                    let v5517 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5518 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5517 = v5518 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5521 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5517 = v5521 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5524 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5517 = v5524 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5527 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5517 = v5527 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5530 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5517 = v5530 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5533 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v5534 : Async<Choice<bool, exn>> = v5533 v5516
                                    let _v5517 = v5534 
                                    #endif
#else
                                    let v5535 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v5536 : Async<Choice<bool, exn>> = v5535 v5516
                                    let _v5517 = v5536 
                                    #endif
                                    let v5537 : Async<Choice<bool, exn>> = _v5517 
                                    let v5542 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5543 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5542 = v5543 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5546 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5542 = v5546 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5549 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5542 = v5549 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5552 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5542 = v5552 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5555 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5542 = v5555 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5558 : unit = ()
                                    let _v5558 =
                                        async {
                                            let! v5537 = v5537 
                                            let v5559 : Choice<bool, exn> = v5537 
                                            let v5560 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v5561 : US7 = null |> unbox<US7>
                                            let _v5560 = v5561 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v5564 : US7 = null |> unbox<US7>
                                            let _v5560 = v5564 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v5567 : US7 = null |> unbox<US7>
                                            let _v5560 = v5567 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v5570 : US7 = null |> unbox<US7>
                                            let _v5560 = v5570 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v5573 : US7 = null |> unbox<US7>
                                            let _v5560 = v5573 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v5576 : (bool -> US7) = method19()
                                            let v5577 : (exn -> US7) = method20()
                                            let v5578 : US7 = match v5559 with Choice1Of2 x -> v5576 x | Choice2Of2 x -> v5577 x
                                            let _v5560 = v5578 
                                            #endif
#else
                                            let v5579 : (bool -> US7) = method19()
                                            let v5580 : (exn -> US7) = method20()
                                            let v5581 : US7 = match v5559 with Choice1Of2 x -> v5579 x | Choice2Of2 x -> v5580 x
                                            let _v5560 = v5581 
                                            #endif
                                            let v5582 : US7 = _v5560 
                                            return v5582 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5587 : Async<US7> = _v5558 
                                    let _v5542 = v5587 
                                    #endif
#else
                                    let v5588 : unit = ()
                                    let _v5588 =
                                        async {
                                            let! v5537 = v5537 
                                            let v5589 : Choice<bool, exn> = v5537 
                                            let v5590 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v5591 : US7 = null |> unbox<US7>
                                            let _v5590 = v5591 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v5594 : US7 = null |> unbox<US7>
                                            let _v5590 = v5594 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v5597 : US7 = null |> unbox<US7>
                                            let _v5590 = v5597 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v5600 : US7 = null |> unbox<US7>
                                            let _v5590 = v5600 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v5603 : US7 = null |> unbox<US7>
                                            let _v5590 = v5603 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v5606 : (bool -> US7) = method19()
                                            let v5607 : (exn -> US7) = method20()
                                            let v5608 : US7 = match v5589 with Choice1Of2 x -> v5606 x | Choice2Of2 x -> v5607 x
                                            let _v5590 = v5608 
                                            #endif
#else
                                            let v5609 : (bool -> US7) = method19()
                                            let v5610 : (exn -> US7) = method20()
                                            let v5611 : US7 = match v5589 with Choice1Of2 x -> v5609 x | Choice2Of2 x -> v5610 x
                                            let _v5590 = v5611 
                                            #endif
                                            let v5612 : US7 = _v5590 
                                            return v5612 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5617 : Async<US7> = _v5588 
                                    let _v5542 = v5617 
                                    #endif
                                    let v5618 : Async<US7> = _v5542 
                                    let v5623 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5624 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5623 = v5624 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5627 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5623 = v5627 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5630 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5623 = v5630 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5633 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5623 = v5633 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5636 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5623 = v5636 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5639 : unit = ()
                                    let _v5639 =
                                        async {
                                            let! v5618 = v5618 
                                            let v5640 : US7 = v5618 
                                            let v5646 : US8 =
                                                match v5640 with
                                                | US7_0(v5641) -> (* C1of2 *)
                                                    US8_0(v5641)
                                                | US7_1(v5643) -> (* C2of2 *)
                                                    US8_1(v5643)
                                            return v5646 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5647 : Async<US8> = _v5639 
                                    let _v5623 = v5647 
                                    #endif
#else
                                    let v5648 : unit = ()
                                    let _v5648 =
                                        async {
                                            let! v5618 = v5618 
                                            let v5649 : US7 = v5618 
                                            let v5655 : US8 =
                                                match v5649 with
                                                | US7_0(v5650) -> (* C1of2 *)
                                                    US8_0(v5650)
                                                | US7_1(v5652) -> (* C2of2 *)
                                                    US8_1(v5652)
                                            return v5655 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5656 : Async<US8> = _v5648 
                                    let _v5623 = v5656 
                                    #endif
                                    let v5657 : Async<US8> = _v5623 
                                    let v5662 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5663 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5662 = v5663 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5666 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5662 = v5666 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5669 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5662 = v5669 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5672 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5662 = v5672 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5675 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5662 = v5675 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5678 : unit = ()
                                    let _v5678 =
                                        async {
                                            let! v5657 = v5657 
                                            let v5679 : US8 = v5657 
                                            let v5803 : US6 =
                                                match v5679 with
                                                | US8_1(v5682) -> (* Error *)
                                                    let v5683 : string = $"%A{v5682}"
                                                    let v5686 : string = "System.TimeoutException"
                                                    let v5687 : bool = v5683.Contains v5686 
                                                    if v5687 then
                                                        let v5690 : unit = ()
                                                        let v5691 : (unit -> unit) = closure16(v4769)
                                                        let v5692 : unit = (fun () -> v5691 (); v5690) ()
                                                        US6_1
                                                    else
                                                        let v5733 : unit = ()
                                                        let v5734 : (unit -> unit) = closure17(v4769, v5682)
                                                        let v5735 : unit = (fun () -> v5734 (); v5733) ()
                                                        US6_1
                                                | US8_0(v5680) -> (* Ok *)
                                                    US6_0(v5680)
                                            return v5803 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5804 : Async<US6> = _v5678 
                                    let _v5662 = v5804 
                                    #endif
#else
                                    let v5805 : unit = ()
                                    let _v5805 =
                                        async {
                                            let! v5657 = v5657 
                                            let v5806 : US8 = v5657 
                                            let v5930 : US6 =
                                                match v5806 with
                                                | US8_1(v5809) -> (* Error *)
                                                    let v5810 : string = $"%A{v5809}"
                                                    let v5813 : string = "System.TimeoutException"
                                                    let v5814 : bool = v5810.Contains v5813 
                                                    if v5814 then
                                                        let v5817 : unit = ()
                                                        let v5818 : (unit -> unit) = closure16(v4769)
                                                        let v5819 : unit = (fun () -> v5818 (); v5817) ()
                                                        US6_1
                                                    else
                                                        let v5860 : unit = ()
                                                        let v5861 : (unit -> unit) = closure17(v4769, v5809)
                                                        let v5862 : unit = (fun () -> v5861 (); v5860) ()
                                                        US6_1
                                                | US8_0(v5807) -> (* Ok *)
                                                    US6_0(v5807)
                                            return v5930 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5931 : Async<US6> = _v5805 
                                    let _v5662 = v5931 
                                    #endif
                                    let v5932 : Async<US6> = _v5662 
                                    return! v5932 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v5937 : Async<US6> = _v5492 
                            let _v5030 = v5937 
                            #endif
                            let v5938 : Async<US6> = _v5030 
                            let _v5014 = v5938 
                            #endif
#else
                            let v5943 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v5944 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5943 = v5944 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v5947 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5943 = v5947 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v5950 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5943 = v5950 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v5953 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5943 = v5953 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v5956 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5943 = v5956 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v5959 : unit = ()
                            let _v5959 =
                                async {
                                    let v5960 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5961 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5960 = v5961 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5964 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5960 = v5964 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5967 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5960 = v5967 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5970 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5960 = v5970 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5973 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5960 = v5973 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5976 : Async<Async<bool>> = Async.StartChild (v5009, v4769)
                                    let _v5960 = v5976 
                                    #endif
#else
                                    let v5977 : Async<Async<bool>> = Async.StartChild (v5009, v4769)
                                    let _v5960 = v5977 
                                    #endif
                                    let v5978 : Async<Async<bool>> = _v5960 
                                    let! v5978 = v5978 
                                    let v5983 : Async<bool> = v5978 
                                    let v5984 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5985 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5984 = v5985 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5988 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5984 = v5988 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5991 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5984 = v5991 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5994 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5984 = v5994 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5997 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5984 = v5997 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6000 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v6001 : Async<Choice<bool, exn>> = v6000 v5983
                                    let _v5984 = v6001 
                                    #endif
#else
                                    let v6002 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v6003 : Async<Choice<bool, exn>> = v6002 v5983
                                    let _v5984 = v6003 
                                    #endif
                                    let v6004 : Async<Choice<bool, exn>> = _v5984 
                                    let v6009 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6010 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6009 = v6010 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6013 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6009 = v6013 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6016 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6009 = v6016 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6019 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6009 = v6019 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6022 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6009 = v6022 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6025 : unit = ()
                                    let _v6025 =
                                        async {
                                            let! v6004 = v6004 
                                            let v6026 : Choice<bool, exn> = v6004 
                                            let v6027 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v6028 : US7 = null |> unbox<US7>
                                            let _v6027 = v6028 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v6031 : US7 = null |> unbox<US7>
                                            let _v6027 = v6031 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v6034 : US7 = null |> unbox<US7>
                                            let _v6027 = v6034 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v6037 : US7 = null |> unbox<US7>
                                            let _v6027 = v6037 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v6040 : US7 = null |> unbox<US7>
                                            let _v6027 = v6040 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v6043 : (bool -> US7) = method19()
                                            let v6044 : (exn -> US7) = method20()
                                            let v6045 : US7 = match v6026 with Choice1Of2 x -> v6043 x | Choice2Of2 x -> v6044 x
                                            let _v6027 = v6045 
                                            #endif
#else
                                            let v6046 : (bool -> US7) = method19()
                                            let v6047 : (exn -> US7) = method20()
                                            let v6048 : US7 = match v6026 with Choice1Of2 x -> v6046 x | Choice2Of2 x -> v6047 x
                                            let _v6027 = v6048 
                                            #endif
                                            let v6049 : US7 = _v6027 
                                            return v6049 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6054 : Async<US7> = _v6025 
                                    let _v6009 = v6054 
                                    #endif
#else
                                    let v6055 : unit = ()
                                    let _v6055 =
                                        async {
                                            let! v6004 = v6004 
                                            let v6056 : Choice<bool, exn> = v6004 
                                            let v6057 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v6058 : US7 = null |> unbox<US7>
                                            let _v6057 = v6058 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v6061 : US7 = null |> unbox<US7>
                                            let _v6057 = v6061 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v6064 : US7 = null |> unbox<US7>
                                            let _v6057 = v6064 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v6067 : US7 = null |> unbox<US7>
                                            let _v6057 = v6067 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v6070 : US7 = null |> unbox<US7>
                                            let _v6057 = v6070 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v6073 : (bool -> US7) = method19()
                                            let v6074 : (exn -> US7) = method20()
                                            let v6075 : US7 = match v6056 with Choice1Of2 x -> v6073 x | Choice2Of2 x -> v6074 x
                                            let _v6057 = v6075 
                                            #endif
#else
                                            let v6076 : (bool -> US7) = method19()
                                            let v6077 : (exn -> US7) = method20()
                                            let v6078 : US7 = match v6056 with Choice1Of2 x -> v6076 x | Choice2Of2 x -> v6077 x
                                            let _v6057 = v6078 
                                            #endif
                                            let v6079 : US7 = _v6057 
                                            return v6079 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6084 : Async<US7> = _v6055 
                                    let _v6009 = v6084 
                                    #endif
                                    let v6085 : Async<US7> = _v6009 
                                    let v6090 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6091 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6090 = v6091 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6094 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6090 = v6094 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6097 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6090 = v6097 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6100 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6090 = v6100 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6103 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6090 = v6103 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6106 : unit = ()
                                    let _v6106 =
                                        async {
                                            let! v6085 = v6085 
                                            let v6107 : US7 = v6085 
                                            let v6113 : US8 =
                                                match v6107 with
                                                | US7_0(v6108) -> (* C1of2 *)
                                                    US8_0(v6108)
                                                | US7_1(v6110) -> (* C2of2 *)
                                                    US8_1(v6110)
                                            return v6113 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6114 : Async<US8> = _v6106 
                                    let _v6090 = v6114 
                                    #endif
#else
                                    let v6115 : unit = ()
                                    let _v6115 =
                                        async {
                                            let! v6085 = v6085 
                                            let v6116 : US7 = v6085 
                                            let v6122 : US8 =
                                                match v6116 with
                                                | US7_0(v6117) -> (* C1of2 *)
                                                    US8_0(v6117)
                                                | US7_1(v6119) -> (* C2of2 *)
                                                    US8_1(v6119)
                                            return v6122 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6123 : Async<US8> = _v6115 
                                    let _v6090 = v6123 
                                    #endif
                                    let v6124 : Async<US8> = _v6090 
                                    let v6129 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6130 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6129 = v6130 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6133 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6129 = v6133 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6136 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6129 = v6136 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6139 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6129 = v6139 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6142 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6129 = v6142 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6145 : unit = ()
                                    let _v6145 =
                                        async {
                                            let! v6124 = v6124 
                                            let v6146 : US8 = v6124 
                                            let v6270 : US6 =
                                                match v6146 with
                                                | US8_1(v6149) -> (* Error *)
                                                    let v6150 : string = $"%A{v6149}"
                                                    let v6153 : string = "System.TimeoutException"
                                                    let v6154 : bool = v6150.Contains v6153 
                                                    if v6154 then
                                                        let v6157 : unit = ()
                                                        let v6158 : (unit -> unit) = closure16(v4769)
                                                        let v6159 : unit = (fun () -> v6158 (); v6157) ()
                                                        US6_1
                                                    else
                                                        let v6200 : unit = ()
                                                        let v6201 : (unit -> unit) = closure17(v4769, v6149)
                                                        let v6202 : unit = (fun () -> v6201 (); v6200) ()
                                                        US6_1
                                                | US8_0(v6147) -> (* Ok *)
                                                    US6_0(v6147)
                                            return v6270 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6271 : Async<US6> = _v6145 
                                    let _v6129 = v6271 
                                    #endif
#else
                                    let v6272 : unit = ()
                                    let _v6272 =
                                        async {
                                            let! v6124 = v6124 
                                            let v6273 : US8 = v6124 
                                            let v6397 : US6 =
                                                match v6273 with
                                                | US8_1(v6276) -> (* Error *)
                                                    let v6277 : string = $"%A{v6276}"
                                                    let v6280 : string = "System.TimeoutException"
                                                    let v6281 : bool = v6277.Contains v6280 
                                                    if v6281 then
                                                        let v6284 : unit = ()
                                                        let v6285 : (unit -> unit) = closure16(v4769)
                                                        let v6286 : unit = (fun () -> v6285 (); v6284) ()
                                                        US6_1
                                                    else
                                                        let v6327 : unit = ()
                                                        let v6328 : (unit -> unit) = closure17(v4769, v6276)
                                                        let v6329 : unit = (fun () -> v6328 (); v6327) ()
                                                        US6_1
                                                | US8_0(v6274) -> (* Ok *)
                                                    US6_0(v6274)
                                            return v6397 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6398 : Async<US6> = _v6272 
                                    let _v6129 = v6398 
                                    #endif
                                    let v6399 : Async<US6> = _v6129 
                                    return! v6399 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v6404 : Async<US6> = _v5959 
                            let _v5943 = v6404 
                            #endif
#else
                            let v6405 : unit = ()
                            let _v6405 =
                                async {
                                    let v6406 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6407 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v6406 = v6407 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6410 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v6406 = v6410 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6413 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v6406 = v6413 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6416 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v6406 = v6416 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6419 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v6406 = v6419 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6422 : Async<Async<bool>> = Async.StartChild (v5009, v4769)
                                    let _v6406 = v6422 
                                    #endif
#else
                                    let v6423 : Async<Async<bool>> = Async.StartChild (v5009, v4769)
                                    let _v6406 = v6423 
                                    #endif
                                    let v6424 : Async<Async<bool>> = _v6406 
                                    let! v6424 = v6424 
                                    let v6429 : Async<bool> = v6424 
                                    let v6430 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6431 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v6430 = v6431 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6434 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v6430 = v6434 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6437 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v6430 = v6437 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6440 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v6430 = v6440 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6443 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v6430 = v6443 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6446 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v6447 : Async<Choice<bool, exn>> = v6446 v6429
                                    let _v6430 = v6447 
                                    #endif
#else
                                    let v6448 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v6449 : Async<Choice<bool, exn>> = v6448 v6429
                                    let _v6430 = v6449 
                                    #endif
                                    let v6450 : Async<Choice<bool, exn>> = _v6430 
                                    let v6455 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6456 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6455 = v6456 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6459 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6455 = v6459 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6462 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6455 = v6462 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6465 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6455 = v6465 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6468 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6455 = v6468 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6471 : unit = ()
                                    let _v6471 =
                                        async {
                                            let! v6450 = v6450 
                                            let v6472 : Choice<bool, exn> = v6450 
                                            let v6473 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v6474 : US7 = null |> unbox<US7>
                                            let _v6473 = v6474 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v6477 : US7 = null |> unbox<US7>
                                            let _v6473 = v6477 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v6480 : US7 = null |> unbox<US7>
                                            let _v6473 = v6480 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v6483 : US7 = null |> unbox<US7>
                                            let _v6473 = v6483 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v6486 : US7 = null |> unbox<US7>
                                            let _v6473 = v6486 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v6489 : (bool -> US7) = method19()
                                            let v6490 : (exn -> US7) = method20()
                                            let v6491 : US7 = match v6472 with Choice1Of2 x -> v6489 x | Choice2Of2 x -> v6490 x
                                            let _v6473 = v6491 
                                            #endif
#else
                                            let v6492 : (bool -> US7) = method19()
                                            let v6493 : (exn -> US7) = method20()
                                            let v6494 : US7 = match v6472 with Choice1Of2 x -> v6492 x | Choice2Of2 x -> v6493 x
                                            let _v6473 = v6494 
                                            #endif
                                            let v6495 : US7 = _v6473 
                                            return v6495 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6500 : Async<US7> = _v6471 
                                    let _v6455 = v6500 
                                    #endif
#else
                                    let v6501 : unit = ()
                                    let _v6501 =
                                        async {
                                            let! v6450 = v6450 
                                            let v6502 : Choice<bool, exn> = v6450 
                                            let v6503 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v6504 : US7 = null |> unbox<US7>
                                            let _v6503 = v6504 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v6507 : US7 = null |> unbox<US7>
                                            let _v6503 = v6507 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v6510 : US7 = null |> unbox<US7>
                                            let _v6503 = v6510 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v6513 : US7 = null |> unbox<US7>
                                            let _v6503 = v6513 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v6516 : US7 = null |> unbox<US7>
                                            let _v6503 = v6516 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v6519 : (bool -> US7) = method19()
                                            let v6520 : (exn -> US7) = method20()
                                            let v6521 : US7 = match v6502 with Choice1Of2 x -> v6519 x | Choice2Of2 x -> v6520 x
                                            let _v6503 = v6521 
                                            #endif
#else
                                            let v6522 : (bool -> US7) = method19()
                                            let v6523 : (exn -> US7) = method20()
                                            let v6524 : US7 = match v6502 with Choice1Of2 x -> v6522 x | Choice2Of2 x -> v6523 x
                                            let _v6503 = v6524 
                                            #endif
                                            let v6525 : US7 = _v6503 
                                            return v6525 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6530 : Async<US7> = _v6501 
                                    let _v6455 = v6530 
                                    #endif
                                    let v6531 : Async<US7> = _v6455 
                                    let v6536 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6537 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6536 = v6537 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6540 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6536 = v6540 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6543 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6536 = v6543 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6546 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6536 = v6546 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6549 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6536 = v6549 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6552 : unit = ()
                                    let _v6552 =
                                        async {
                                            let! v6531 = v6531 
                                            let v6553 : US7 = v6531 
                                            let v6559 : US8 =
                                                match v6553 with
                                                | US7_0(v6554) -> (* C1of2 *)
                                                    US8_0(v6554)
                                                | US7_1(v6556) -> (* C2of2 *)
                                                    US8_1(v6556)
                                            return v6559 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6560 : Async<US8> = _v6552 
                                    let _v6536 = v6560 
                                    #endif
#else
                                    let v6561 : unit = ()
                                    let _v6561 =
                                        async {
                                            let! v6531 = v6531 
                                            let v6562 : US7 = v6531 
                                            let v6568 : US8 =
                                                match v6562 with
                                                | US7_0(v6563) -> (* C1of2 *)
                                                    US8_0(v6563)
                                                | US7_1(v6565) -> (* C2of2 *)
                                                    US8_1(v6565)
                                            return v6568 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6569 : Async<US8> = _v6561 
                                    let _v6536 = v6569 
                                    #endif
                                    let v6570 : Async<US8> = _v6536 
                                    let v6575 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6576 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6575 = v6576 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6579 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6575 = v6579 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6582 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6575 = v6582 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6585 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6575 = v6585 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6588 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6575 = v6588 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6591 : unit = ()
                                    let _v6591 =
                                        async {
                                            let! v6570 = v6570 
                                            let v6592 : US8 = v6570 
                                            let v6716 : US6 =
                                                match v6592 with
                                                | US8_1(v6595) -> (* Error *)
                                                    let v6596 : string = $"%A{v6595}"
                                                    let v6599 : string = "System.TimeoutException"
                                                    let v6600 : bool = v6596.Contains v6599 
                                                    if v6600 then
                                                        let v6603 : unit = ()
                                                        let v6604 : (unit -> unit) = closure16(v4769)
                                                        let v6605 : unit = (fun () -> v6604 (); v6603) ()
                                                        US6_1
                                                    else
                                                        let v6646 : unit = ()
                                                        let v6647 : (unit -> unit) = closure17(v4769, v6595)
                                                        let v6648 : unit = (fun () -> v6647 (); v6646) ()
                                                        US6_1
                                                | US8_0(v6593) -> (* Ok *)
                                                    US6_0(v6593)
                                            return v6716 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6717 : Async<US6> = _v6591 
                                    let _v6575 = v6717 
                                    #endif
#else
                                    let v6718 : unit = ()
                                    let _v6718 =
                                        async {
                                            let! v6570 = v6570 
                                            let v6719 : US8 = v6570 
                                            let v6843 : US6 =
                                                match v6719 with
                                                | US8_1(v6722) -> (* Error *)
                                                    let v6723 : string = $"%A{v6722}"
                                                    let v6726 : string = "System.TimeoutException"
                                                    let v6727 : bool = v6723.Contains v6726 
                                                    if v6727 then
                                                        let v6730 : unit = ()
                                                        let v6731 : (unit -> unit) = closure16(v4769)
                                                        let v6732 : unit = (fun () -> v6731 (); v6730) ()
                                                        US6_1
                                                    else
                                                        let v6773 : unit = ()
                                                        let v6774 : (unit -> unit) = closure17(v4769, v6722)
                                                        let v6775 : unit = (fun () -> v6774 (); v6773) ()
                                                        US6_1
                                                | US8_0(v6720) -> (* Ok *)
                                                    US6_0(v6720)
                                            return v6843 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6844 : Async<US6> = _v6718 
                                    let _v6575 = v6844 
                                    #endif
                                    let v6845 : Async<US6> = _v6575 
                                    return! v6845 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v6850 : Async<US6> = _v6405 
                            let _v5943 = v6850 
                            #endif
                            let v6851 : Async<US6> = _v5943 
                            let _v5014 = v6851 
                            #endif
                            let v6856 : Async<US6> = _v5014 
                            let! v6856 = v6856 
                            let v6861 : US6 = v6856 
                            let v6864 : bool =
                                match v6861 with
                                | US6_1 -> (* None *)
                                    false
                                | US6_0(v6862) -> (* Some *)
                                    v6862
                            return v6864 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v6865 : Async<bool> = _v4786 
                    let _v4770 = v6865 
                    #endif
#else
                    let v6866 : unit = ()
                    let _v6866 =
                        async {
                            let v6867 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v6868 : Async<bool> = null |> unbox<Async<bool>>
                            let _v6867 = v6868 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v6871 : Async<bool> = null |> unbox<Async<bool>>
                            let _v6867 = v6871 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v6874 : Async<bool> = null |> unbox<Async<bool>>
                            let _v6867 = v6874 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v6877 : Async<bool> = null |> unbox<Async<bool>>
                            let _v6867 = v6877 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v6880 : Async<bool> = null |> unbox<Async<bool>>
                            let _v6867 = v6880 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v6883 : unit = ()
                            let _v6883 =
                                async {
                                    let v6884 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v6884 = v6884 
                                    let v6885 : System.Threading.CancellationToken = v6884 
                                    let v6886 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v6886 = v6886 
                                    let v6887 : System.Net.Sockets.TcpClient = v6886 
                                    try
                                    let v6888 : System.Threading.Tasks.ValueTask = v6887.ConnectAsync (v2, v3, v6885)
                                    let v6889 : (unit -> System.Threading.Tasks.Task) = v6888.AsTask
                                    let v6890 : System.Threading.Tasks.Task = v6889 ()
                                    let v6891 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6892 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6891 = v6892 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6895 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6891 = v6895 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6898 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6891 = v6898 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6901 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6891 = v6901 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6904 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6891 = v6904 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6907 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v6908 : Async<unit> = v6907 v6890
                                    let _v6891 = v6908 
                                    #endif
#else
                                    let v6909 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v6910 : Async<unit> = v6909 v6890
                                    let _v6891 = v6910 
                                    #endif
                                    let v6911 : Async<unit> = _v6891 
                                    do! v6911 
                                    return true 
                                    with ex ->
                                        let v6916 : exn = ex
                                        let v6917 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v6918 : string = $"%A{v6916}"
                                        let _v6917 = v6918 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v6921 : string = $"%A{v6916}"
                                        let _v6917 = v6921 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v6924 : string = $"%A{v6916}"
                                        let _v6917 = v6924 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v6927 : string = $"%A{v6916}"
                                        let _v6917 = v6927 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v6930 : string = $"%A{v6916}"
                                        let _v6917 = v6930 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v6933 : string = $"%A{v6916}"
                                        let _v6917 = v6933 
                                        #endif
#else
                                        let v6936 : string = $"{v6916.GetType ()}: {v6916.Message}"
                                        let _v6917 = v6936 
                                        #endif
                                        let v6937 : string = _v6917 
                                        let v6942 : unit = ()
                                        let v6943 : (unit -> unit) = closure5(v3, v6937)
                                        let v6944 : unit = (fun () -> v6943 (); v6942) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v6984 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v6985 : Async<bool> = _v6883 
                            let _v6867 = v6985 
                            #endif
#else
                            let v6986 : unit = ()
                            let _v6986 =
                                async {
                                    let v6987 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v6987 = v6987 
                                    let v6988 : System.Threading.CancellationToken = v6987 
                                    let v6989 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v6989 = v6989 
                                    let v6990 : System.Net.Sockets.TcpClient = v6989 
                                    try
                                    let v6991 : System.Threading.Tasks.ValueTask = v6990.ConnectAsync (v2, v3, v6988)
                                    let v6992 : (unit -> System.Threading.Tasks.Task) = v6991.AsTask
                                    let v6993 : System.Threading.Tasks.Task = v6992 ()
                                    let v6994 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6995 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6994 = v6995 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6998 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6994 = v6998 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7001 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6994 = v7001 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7004 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6994 = v7004 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7007 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6994 = v7007 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7010 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v7011 : Async<unit> = v7010 v6993
                                    let _v6994 = v7011 
                                    #endif
#else
                                    let v7012 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v7013 : Async<unit> = v7012 v6993
                                    let _v6994 = v7013 
                                    #endif
                                    let v7014 : Async<unit> = _v6994 
                                    do! v7014 
                                    return true 
                                    with ex ->
                                        let v7019 : exn = ex
                                        let v7020 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v7021 : string = $"%A{v7019}"
                                        let _v7020 = v7021 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v7024 : string = $"%A{v7019}"
                                        let _v7020 = v7024 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v7027 : string = $"%A{v7019}"
                                        let _v7020 = v7027 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v7030 : string = $"%A{v7019}"
                                        let _v7020 = v7030 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v7033 : string = $"%A{v7019}"
                                        let _v7020 = v7033 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v7036 : string = $"%A{v7019}"
                                        let _v7020 = v7036 
                                        #endif
#else
                                        let v7039 : string = $"{v7019.GetType ()}: {v7019.Message}"
                                        let _v7020 = v7039 
                                        #endif
                                        let v7040 : string = _v7020 
                                        let v7045 : unit = ()
                                        let v7046 : (unit -> unit) = closure5(v3, v7040)
                                        let v7047 : unit = (fun () -> v7046 (); v7045) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v7087 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v7088 : Async<bool> = _v6986 
                            let _v6867 = v7088 
                            #endif
                            let v7089 : Async<bool> = _v6867 
                            let v7094 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v7095 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7094 = v7095 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v7098 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7094 = v7098 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v7101 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7094 = v7101 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v7104 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7094 = v7104 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v7107 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7094 = v7107 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v7110 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v7111 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7110 = v7111 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v7114 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7110 = v7114 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v7117 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7110 = v7117 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v7120 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7110 = v7120 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v7123 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7110 = v7123 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v7126 : unit = ()
                            let _v7126 =
                                async {
                                    let v7127 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7128 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7127 = v7128 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7131 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7127 = v7131 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7134 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7127 = v7134 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7137 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7127 = v7137 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7140 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7127 = v7140 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7143 : Async<Async<bool>> = Async.StartChild (v7089, v4769)
                                    let _v7127 = v7143 
                                    #endif
#else
                                    let v7144 : Async<Async<bool>> = Async.StartChild (v7089, v4769)
                                    let _v7127 = v7144 
                                    #endif
                                    let v7145 : Async<Async<bool>> = _v7127 
                                    let! v7145 = v7145 
                                    let v7150 : Async<bool> = v7145 
                                    let v7151 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7152 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7151 = v7152 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7155 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7151 = v7155 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7158 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7151 = v7158 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7161 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7151 = v7161 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7164 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7151 = v7164 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7167 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v7168 : Async<Choice<bool, exn>> = v7167 v7150
                                    let _v7151 = v7168 
                                    #endif
#else
                                    let v7169 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v7170 : Async<Choice<bool, exn>> = v7169 v7150
                                    let _v7151 = v7170 
                                    #endif
                                    let v7171 : Async<Choice<bool, exn>> = _v7151 
                                    let v7176 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7177 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7176 = v7177 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7180 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7176 = v7180 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7183 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7176 = v7183 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7186 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7176 = v7186 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7189 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7176 = v7189 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7192 : unit = ()
                                    let _v7192 =
                                        async {
                                            let! v7171 = v7171 
                                            let v7193 : Choice<bool, exn> = v7171 
                                            let v7194 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v7195 : US7 = null |> unbox<US7>
                                            let _v7194 = v7195 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v7198 : US7 = null |> unbox<US7>
                                            let _v7194 = v7198 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v7201 : US7 = null |> unbox<US7>
                                            let _v7194 = v7201 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v7204 : US7 = null |> unbox<US7>
                                            let _v7194 = v7204 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v7207 : US7 = null |> unbox<US7>
                                            let _v7194 = v7207 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v7210 : (bool -> US7) = method19()
                                            let v7211 : (exn -> US7) = method20()
                                            let v7212 : US7 = match v7193 with Choice1Of2 x -> v7210 x | Choice2Of2 x -> v7211 x
                                            let _v7194 = v7212 
                                            #endif
#else
                                            let v7213 : (bool -> US7) = method19()
                                            let v7214 : (exn -> US7) = method20()
                                            let v7215 : US7 = match v7193 with Choice1Of2 x -> v7213 x | Choice2Of2 x -> v7214 x
                                            let _v7194 = v7215 
                                            #endif
                                            let v7216 : US7 = _v7194 
                                            return v7216 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7221 : Async<US7> = _v7192 
                                    let _v7176 = v7221 
                                    #endif
#else
                                    let v7222 : unit = ()
                                    let _v7222 =
                                        async {
                                            let! v7171 = v7171 
                                            let v7223 : Choice<bool, exn> = v7171 
                                            let v7224 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v7225 : US7 = null |> unbox<US7>
                                            let _v7224 = v7225 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v7228 : US7 = null |> unbox<US7>
                                            let _v7224 = v7228 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v7231 : US7 = null |> unbox<US7>
                                            let _v7224 = v7231 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v7234 : US7 = null |> unbox<US7>
                                            let _v7224 = v7234 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v7237 : US7 = null |> unbox<US7>
                                            let _v7224 = v7237 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v7240 : (bool -> US7) = method19()
                                            let v7241 : (exn -> US7) = method20()
                                            let v7242 : US7 = match v7223 with Choice1Of2 x -> v7240 x | Choice2Of2 x -> v7241 x
                                            let _v7224 = v7242 
                                            #endif
#else
                                            let v7243 : (bool -> US7) = method19()
                                            let v7244 : (exn -> US7) = method20()
                                            let v7245 : US7 = match v7223 with Choice1Of2 x -> v7243 x | Choice2Of2 x -> v7244 x
                                            let _v7224 = v7245 
                                            #endif
                                            let v7246 : US7 = _v7224 
                                            return v7246 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7251 : Async<US7> = _v7222 
                                    let _v7176 = v7251 
                                    #endif
                                    let v7252 : Async<US7> = _v7176 
                                    let v7257 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7258 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7257 = v7258 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7261 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7257 = v7261 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7264 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7257 = v7264 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7267 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7257 = v7267 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7270 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7257 = v7270 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7273 : unit = ()
                                    let _v7273 =
                                        async {
                                            let! v7252 = v7252 
                                            let v7274 : US7 = v7252 
                                            let v7280 : US8 =
                                                match v7274 with
                                                | US7_0(v7275) -> (* C1of2 *)
                                                    US8_0(v7275)
                                                | US7_1(v7277) -> (* C2of2 *)
                                                    US8_1(v7277)
                                            return v7280 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7281 : Async<US8> = _v7273 
                                    let _v7257 = v7281 
                                    #endif
#else
                                    let v7282 : unit = ()
                                    let _v7282 =
                                        async {
                                            let! v7252 = v7252 
                                            let v7283 : US7 = v7252 
                                            let v7289 : US8 =
                                                match v7283 with
                                                | US7_0(v7284) -> (* C1of2 *)
                                                    US8_0(v7284)
                                                | US7_1(v7286) -> (* C2of2 *)
                                                    US8_1(v7286)
                                            return v7289 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7290 : Async<US8> = _v7282 
                                    let _v7257 = v7290 
                                    #endif
                                    let v7291 : Async<US8> = _v7257 
                                    let v7296 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7297 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7296 = v7297 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7300 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7296 = v7300 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7303 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7296 = v7303 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7306 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7296 = v7306 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7309 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7296 = v7309 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7312 : unit = ()
                                    let _v7312 =
                                        async {
                                            let! v7291 = v7291 
                                            let v7313 : US8 = v7291 
                                            let v7437 : US6 =
                                                match v7313 with
                                                | US8_1(v7316) -> (* Error *)
                                                    let v7317 : string = $"%A{v7316}"
                                                    let v7320 : string = "System.TimeoutException"
                                                    let v7321 : bool = v7317.Contains v7320 
                                                    if v7321 then
                                                        let v7324 : unit = ()
                                                        let v7325 : (unit -> unit) = closure16(v4769)
                                                        let v7326 : unit = (fun () -> v7325 (); v7324) ()
                                                        US6_1
                                                    else
                                                        let v7367 : unit = ()
                                                        let v7368 : (unit -> unit) = closure17(v4769, v7316)
                                                        let v7369 : unit = (fun () -> v7368 (); v7367) ()
                                                        US6_1
                                                | US8_0(v7314) -> (* Ok *)
                                                    US6_0(v7314)
                                            return v7437 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7438 : Async<US6> = _v7312 
                                    let _v7296 = v7438 
                                    #endif
#else
                                    let v7439 : unit = ()
                                    let _v7439 =
                                        async {
                                            let! v7291 = v7291 
                                            let v7440 : US8 = v7291 
                                            let v7564 : US6 =
                                                match v7440 with
                                                | US8_1(v7443) -> (* Error *)
                                                    let v7444 : string = $"%A{v7443}"
                                                    let v7447 : string = "System.TimeoutException"
                                                    let v7448 : bool = v7444.Contains v7447 
                                                    if v7448 then
                                                        let v7451 : unit = ()
                                                        let v7452 : (unit -> unit) = closure16(v4769)
                                                        let v7453 : unit = (fun () -> v7452 (); v7451) ()
                                                        US6_1
                                                    else
                                                        let v7494 : unit = ()
                                                        let v7495 : (unit -> unit) = closure17(v4769, v7443)
                                                        let v7496 : unit = (fun () -> v7495 (); v7494) ()
                                                        US6_1
                                                | US8_0(v7441) -> (* Ok *)
                                                    US6_0(v7441)
                                            return v7564 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7565 : Async<US6> = _v7439 
                                    let _v7296 = v7565 
                                    #endif
                                    let v7566 : Async<US6> = _v7296 
                                    return! v7566 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v7571 : Async<US6> = _v7126 
                            let _v7110 = v7571 
                            #endif
#else
                            let v7572 : unit = ()
                            let _v7572 =
                                async {
                                    let v7573 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7574 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7573 = v7574 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7577 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7573 = v7577 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7580 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7573 = v7580 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7583 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7573 = v7583 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7586 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7573 = v7586 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7589 : Async<Async<bool>> = Async.StartChild (v7089, v4769)
                                    let _v7573 = v7589 
                                    #endif
#else
                                    let v7590 : Async<Async<bool>> = Async.StartChild (v7089, v4769)
                                    let _v7573 = v7590 
                                    #endif
                                    let v7591 : Async<Async<bool>> = _v7573 
                                    let! v7591 = v7591 
                                    let v7596 : Async<bool> = v7591 
                                    let v7597 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7598 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7597 = v7598 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7601 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7597 = v7601 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7604 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7597 = v7604 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7607 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7597 = v7607 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7610 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7597 = v7610 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7613 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v7614 : Async<Choice<bool, exn>> = v7613 v7596
                                    let _v7597 = v7614 
                                    #endif
#else
                                    let v7615 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v7616 : Async<Choice<bool, exn>> = v7615 v7596
                                    let _v7597 = v7616 
                                    #endif
                                    let v7617 : Async<Choice<bool, exn>> = _v7597 
                                    let v7622 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7623 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7622 = v7623 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7626 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7622 = v7626 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7629 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7622 = v7629 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7632 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7622 = v7632 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7635 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7622 = v7635 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7638 : unit = ()
                                    let _v7638 =
                                        async {
                                            let! v7617 = v7617 
                                            let v7639 : Choice<bool, exn> = v7617 
                                            let v7640 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v7641 : US7 = null |> unbox<US7>
                                            let _v7640 = v7641 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v7644 : US7 = null |> unbox<US7>
                                            let _v7640 = v7644 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v7647 : US7 = null |> unbox<US7>
                                            let _v7640 = v7647 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v7650 : US7 = null |> unbox<US7>
                                            let _v7640 = v7650 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v7653 : US7 = null |> unbox<US7>
                                            let _v7640 = v7653 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v7656 : (bool -> US7) = method19()
                                            let v7657 : (exn -> US7) = method20()
                                            let v7658 : US7 = match v7639 with Choice1Of2 x -> v7656 x | Choice2Of2 x -> v7657 x
                                            let _v7640 = v7658 
                                            #endif
#else
                                            let v7659 : (bool -> US7) = method19()
                                            let v7660 : (exn -> US7) = method20()
                                            let v7661 : US7 = match v7639 with Choice1Of2 x -> v7659 x | Choice2Of2 x -> v7660 x
                                            let _v7640 = v7661 
                                            #endif
                                            let v7662 : US7 = _v7640 
                                            return v7662 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7667 : Async<US7> = _v7638 
                                    let _v7622 = v7667 
                                    #endif
#else
                                    let v7668 : unit = ()
                                    let _v7668 =
                                        async {
                                            let! v7617 = v7617 
                                            let v7669 : Choice<bool, exn> = v7617 
                                            let v7670 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v7671 : US7 = null |> unbox<US7>
                                            let _v7670 = v7671 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v7674 : US7 = null |> unbox<US7>
                                            let _v7670 = v7674 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v7677 : US7 = null |> unbox<US7>
                                            let _v7670 = v7677 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v7680 : US7 = null |> unbox<US7>
                                            let _v7670 = v7680 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v7683 : US7 = null |> unbox<US7>
                                            let _v7670 = v7683 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v7686 : (bool -> US7) = method19()
                                            let v7687 : (exn -> US7) = method20()
                                            let v7688 : US7 = match v7669 with Choice1Of2 x -> v7686 x | Choice2Of2 x -> v7687 x
                                            let _v7670 = v7688 
                                            #endif
#else
                                            let v7689 : (bool -> US7) = method19()
                                            let v7690 : (exn -> US7) = method20()
                                            let v7691 : US7 = match v7669 with Choice1Of2 x -> v7689 x | Choice2Of2 x -> v7690 x
                                            let _v7670 = v7691 
                                            #endif
                                            let v7692 : US7 = _v7670 
                                            return v7692 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7697 : Async<US7> = _v7668 
                                    let _v7622 = v7697 
                                    #endif
                                    let v7698 : Async<US7> = _v7622 
                                    let v7703 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7704 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7703 = v7704 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7707 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7703 = v7707 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7710 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7703 = v7710 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7713 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7703 = v7713 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7716 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7703 = v7716 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7719 : unit = ()
                                    let _v7719 =
                                        async {
                                            let! v7698 = v7698 
                                            let v7720 : US7 = v7698 
                                            let v7726 : US8 =
                                                match v7720 with
                                                | US7_0(v7721) -> (* C1of2 *)
                                                    US8_0(v7721)
                                                | US7_1(v7723) -> (* C2of2 *)
                                                    US8_1(v7723)
                                            return v7726 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7727 : Async<US8> = _v7719 
                                    let _v7703 = v7727 
                                    #endif
#else
                                    let v7728 : unit = ()
                                    let _v7728 =
                                        async {
                                            let! v7698 = v7698 
                                            let v7729 : US7 = v7698 
                                            let v7735 : US8 =
                                                match v7729 with
                                                | US7_0(v7730) -> (* C1of2 *)
                                                    US8_0(v7730)
                                                | US7_1(v7732) -> (* C2of2 *)
                                                    US8_1(v7732)
                                            return v7735 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7736 : Async<US8> = _v7728 
                                    let _v7703 = v7736 
                                    #endif
                                    let v7737 : Async<US8> = _v7703 
                                    let v7742 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7743 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7742 = v7743 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7746 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7742 = v7746 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7749 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7742 = v7749 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7752 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7742 = v7752 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7755 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7742 = v7755 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7758 : unit = ()
                                    let _v7758 =
                                        async {
                                            let! v7737 = v7737 
                                            let v7759 : US8 = v7737 
                                            let v7883 : US6 =
                                                match v7759 with
                                                | US8_1(v7762) -> (* Error *)
                                                    let v7763 : string = $"%A{v7762}"
                                                    let v7766 : string = "System.TimeoutException"
                                                    let v7767 : bool = v7763.Contains v7766 
                                                    if v7767 then
                                                        let v7770 : unit = ()
                                                        let v7771 : (unit -> unit) = closure16(v4769)
                                                        let v7772 : unit = (fun () -> v7771 (); v7770) ()
                                                        US6_1
                                                    else
                                                        let v7813 : unit = ()
                                                        let v7814 : (unit -> unit) = closure17(v4769, v7762)
                                                        let v7815 : unit = (fun () -> v7814 (); v7813) ()
                                                        US6_1
                                                | US8_0(v7760) -> (* Ok *)
                                                    US6_0(v7760)
                                            return v7883 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7884 : Async<US6> = _v7758 
                                    let _v7742 = v7884 
                                    #endif
#else
                                    let v7885 : unit = ()
                                    let _v7885 =
                                        async {
                                            let! v7737 = v7737 
                                            let v7886 : US8 = v7737 
                                            let v8010 : US6 =
                                                match v7886 with
                                                | US8_1(v7889) -> (* Error *)
                                                    let v7890 : string = $"%A{v7889}"
                                                    let v7893 : string = "System.TimeoutException"
                                                    let v7894 : bool = v7890.Contains v7893 
                                                    if v7894 then
                                                        let v7897 : unit = ()
                                                        let v7898 : (unit -> unit) = closure16(v4769)
                                                        let v7899 : unit = (fun () -> v7898 (); v7897) ()
                                                        US6_1
                                                    else
                                                        let v7940 : unit = ()
                                                        let v7941 : (unit -> unit) = closure17(v4769, v7889)
                                                        let v7942 : unit = (fun () -> v7941 (); v7940) ()
                                                        US6_1
                                                | US8_0(v7887) -> (* Ok *)
                                                    US6_0(v7887)
                                            return v8010 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8011 : Async<US6> = _v7885 
                                    let _v7742 = v8011 
                                    #endif
                                    let v8012 : Async<US6> = _v7742 
                                    return! v8012 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v8017 : Async<US6> = _v7572 
                            let _v7110 = v8017 
                            #endif
                            let v8018 : Async<US6> = _v7110 
                            let _v7094 = v8018 
                            #endif
#else
                            let v8023 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v8024 : Async<US6> = null |> unbox<Async<US6>>
                            let _v8023 = v8024 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v8027 : Async<US6> = null |> unbox<Async<US6>>
                            let _v8023 = v8027 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v8030 : Async<US6> = null |> unbox<Async<US6>>
                            let _v8023 = v8030 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v8033 : Async<US6> = null |> unbox<Async<US6>>
                            let _v8023 = v8033 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v8036 : Async<US6> = null |> unbox<Async<US6>>
                            let _v8023 = v8036 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v8039 : unit = ()
                            let _v8039 =
                                async {
                                    let v8040 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8041 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8040 = v8041 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8044 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8040 = v8044 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8047 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8040 = v8047 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8050 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8040 = v8050 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8053 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8040 = v8053 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8056 : Async<Async<bool>> = Async.StartChild (v7089, v4769)
                                    let _v8040 = v8056 
                                    #endif
#else
                                    let v8057 : Async<Async<bool>> = Async.StartChild (v7089, v4769)
                                    let _v8040 = v8057 
                                    #endif
                                    let v8058 : Async<Async<bool>> = _v8040 
                                    let! v8058 = v8058 
                                    let v8063 : Async<bool> = v8058 
                                    let v8064 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8065 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8064 = v8065 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8068 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8064 = v8068 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8071 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8064 = v8071 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8074 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8064 = v8074 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8077 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8064 = v8077 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8080 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v8081 : Async<Choice<bool, exn>> = v8080 v8063
                                    let _v8064 = v8081 
                                    #endif
#else
                                    let v8082 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v8083 : Async<Choice<bool, exn>> = v8082 v8063
                                    let _v8064 = v8083 
                                    #endif
                                    let v8084 : Async<Choice<bool, exn>> = _v8064 
                                    let v8089 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8090 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8089 = v8090 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8093 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8089 = v8093 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8096 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8089 = v8096 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8099 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8089 = v8099 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8102 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8089 = v8102 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8105 : unit = ()
                                    let _v8105 =
                                        async {
                                            let! v8084 = v8084 
                                            let v8106 : Choice<bool, exn> = v8084 
                                            let v8107 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v8108 : US7 = null |> unbox<US7>
                                            let _v8107 = v8108 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v8111 : US7 = null |> unbox<US7>
                                            let _v8107 = v8111 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v8114 : US7 = null |> unbox<US7>
                                            let _v8107 = v8114 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v8117 : US7 = null |> unbox<US7>
                                            let _v8107 = v8117 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v8120 : US7 = null |> unbox<US7>
                                            let _v8107 = v8120 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v8123 : (bool -> US7) = method19()
                                            let v8124 : (exn -> US7) = method20()
                                            let v8125 : US7 = match v8106 with Choice1Of2 x -> v8123 x | Choice2Of2 x -> v8124 x
                                            let _v8107 = v8125 
                                            #endif
#else
                                            let v8126 : (bool -> US7) = method19()
                                            let v8127 : (exn -> US7) = method20()
                                            let v8128 : US7 = match v8106 with Choice1Of2 x -> v8126 x | Choice2Of2 x -> v8127 x
                                            let _v8107 = v8128 
                                            #endif
                                            let v8129 : US7 = _v8107 
                                            return v8129 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8134 : Async<US7> = _v8105 
                                    let _v8089 = v8134 
                                    #endif
#else
                                    let v8135 : unit = ()
                                    let _v8135 =
                                        async {
                                            let! v8084 = v8084 
                                            let v8136 : Choice<bool, exn> = v8084 
                                            let v8137 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v8138 : US7 = null |> unbox<US7>
                                            let _v8137 = v8138 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v8141 : US7 = null |> unbox<US7>
                                            let _v8137 = v8141 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v8144 : US7 = null |> unbox<US7>
                                            let _v8137 = v8144 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v8147 : US7 = null |> unbox<US7>
                                            let _v8137 = v8147 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v8150 : US7 = null |> unbox<US7>
                                            let _v8137 = v8150 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v8153 : (bool -> US7) = method19()
                                            let v8154 : (exn -> US7) = method20()
                                            let v8155 : US7 = match v8136 with Choice1Of2 x -> v8153 x | Choice2Of2 x -> v8154 x
                                            let _v8137 = v8155 
                                            #endif
#else
                                            let v8156 : (bool -> US7) = method19()
                                            let v8157 : (exn -> US7) = method20()
                                            let v8158 : US7 = match v8136 with Choice1Of2 x -> v8156 x | Choice2Of2 x -> v8157 x
                                            let _v8137 = v8158 
                                            #endif
                                            let v8159 : US7 = _v8137 
                                            return v8159 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8164 : Async<US7> = _v8135 
                                    let _v8089 = v8164 
                                    #endif
                                    let v8165 : Async<US7> = _v8089 
                                    let v8170 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8171 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8170 = v8171 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8174 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8170 = v8174 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8177 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8170 = v8177 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8180 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8170 = v8180 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8183 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8170 = v8183 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8186 : unit = ()
                                    let _v8186 =
                                        async {
                                            let! v8165 = v8165 
                                            let v8187 : US7 = v8165 
                                            let v8193 : US8 =
                                                match v8187 with
                                                | US7_0(v8188) -> (* C1of2 *)
                                                    US8_0(v8188)
                                                | US7_1(v8190) -> (* C2of2 *)
                                                    US8_1(v8190)
                                            return v8193 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8194 : Async<US8> = _v8186 
                                    let _v8170 = v8194 
                                    #endif
#else
                                    let v8195 : unit = ()
                                    let _v8195 =
                                        async {
                                            let! v8165 = v8165 
                                            let v8196 : US7 = v8165 
                                            let v8202 : US8 =
                                                match v8196 with
                                                | US7_0(v8197) -> (* C1of2 *)
                                                    US8_0(v8197)
                                                | US7_1(v8199) -> (* C2of2 *)
                                                    US8_1(v8199)
                                            return v8202 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8203 : Async<US8> = _v8195 
                                    let _v8170 = v8203 
                                    #endif
                                    let v8204 : Async<US8> = _v8170 
                                    let v8209 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8210 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8209 = v8210 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8213 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8209 = v8213 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8216 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8209 = v8216 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8219 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8209 = v8219 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8222 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8209 = v8222 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8225 : unit = ()
                                    let _v8225 =
                                        async {
                                            let! v8204 = v8204 
                                            let v8226 : US8 = v8204 
                                            let v8350 : US6 =
                                                match v8226 with
                                                | US8_1(v8229) -> (* Error *)
                                                    let v8230 : string = $"%A{v8229}"
                                                    let v8233 : string = "System.TimeoutException"
                                                    let v8234 : bool = v8230.Contains v8233 
                                                    if v8234 then
                                                        let v8237 : unit = ()
                                                        let v8238 : (unit -> unit) = closure16(v4769)
                                                        let v8239 : unit = (fun () -> v8238 (); v8237) ()
                                                        US6_1
                                                    else
                                                        let v8280 : unit = ()
                                                        let v8281 : (unit -> unit) = closure17(v4769, v8229)
                                                        let v8282 : unit = (fun () -> v8281 (); v8280) ()
                                                        US6_1
                                                | US8_0(v8227) -> (* Ok *)
                                                    US6_0(v8227)
                                            return v8350 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8351 : Async<US6> = _v8225 
                                    let _v8209 = v8351 
                                    #endif
#else
                                    let v8352 : unit = ()
                                    let _v8352 =
                                        async {
                                            let! v8204 = v8204 
                                            let v8353 : US8 = v8204 
                                            let v8477 : US6 =
                                                match v8353 with
                                                | US8_1(v8356) -> (* Error *)
                                                    let v8357 : string = $"%A{v8356}"
                                                    let v8360 : string = "System.TimeoutException"
                                                    let v8361 : bool = v8357.Contains v8360 
                                                    if v8361 then
                                                        let v8364 : unit = ()
                                                        let v8365 : (unit -> unit) = closure16(v4769)
                                                        let v8366 : unit = (fun () -> v8365 (); v8364) ()
                                                        US6_1
                                                    else
                                                        let v8407 : unit = ()
                                                        let v8408 : (unit -> unit) = closure17(v4769, v8356)
                                                        let v8409 : unit = (fun () -> v8408 (); v8407) ()
                                                        US6_1
                                                | US8_0(v8354) -> (* Ok *)
                                                    US6_0(v8354)
                                            return v8477 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8478 : Async<US6> = _v8352 
                                    let _v8209 = v8478 
                                    #endif
                                    let v8479 : Async<US6> = _v8209 
                                    return! v8479 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v8484 : Async<US6> = _v8039 
                            let _v8023 = v8484 
                            #endif
#else
                            let v8485 : unit = ()
                            let _v8485 =
                                async {
                                    let v8486 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8487 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8486 = v8487 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8490 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8486 = v8490 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8493 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8486 = v8493 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8496 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8486 = v8496 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8499 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8486 = v8499 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8502 : Async<Async<bool>> = Async.StartChild (v7089, v4769)
                                    let _v8486 = v8502 
                                    #endif
#else
                                    let v8503 : Async<Async<bool>> = Async.StartChild (v7089, v4769)
                                    let _v8486 = v8503 
                                    #endif
                                    let v8504 : Async<Async<bool>> = _v8486 
                                    let! v8504 = v8504 
                                    let v8509 : Async<bool> = v8504 
                                    let v8510 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8511 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8510 = v8511 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8514 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8510 = v8514 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8517 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8510 = v8517 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8520 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8510 = v8520 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8523 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8510 = v8523 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8526 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v8527 : Async<Choice<bool, exn>> = v8526 v8509
                                    let _v8510 = v8527 
                                    #endif
#else
                                    let v8528 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v8529 : Async<Choice<bool, exn>> = v8528 v8509
                                    let _v8510 = v8529 
                                    #endif
                                    let v8530 : Async<Choice<bool, exn>> = _v8510 
                                    let v8535 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8536 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8535 = v8536 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8539 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8535 = v8539 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8542 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8535 = v8542 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8545 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8535 = v8545 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8548 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8535 = v8548 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8551 : unit = ()
                                    let _v8551 =
                                        async {
                                            let! v8530 = v8530 
                                            let v8552 : Choice<bool, exn> = v8530 
                                            let v8553 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v8554 : US7 = null |> unbox<US7>
                                            let _v8553 = v8554 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v8557 : US7 = null |> unbox<US7>
                                            let _v8553 = v8557 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v8560 : US7 = null |> unbox<US7>
                                            let _v8553 = v8560 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v8563 : US7 = null |> unbox<US7>
                                            let _v8553 = v8563 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v8566 : US7 = null |> unbox<US7>
                                            let _v8553 = v8566 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v8569 : (bool -> US7) = method19()
                                            let v8570 : (exn -> US7) = method20()
                                            let v8571 : US7 = match v8552 with Choice1Of2 x -> v8569 x | Choice2Of2 x -> v8570 x
                                            let _v8553 = v8571 
                                            #endif
#else
                                            let v8572 : (bool -> US7) = method19()
                                            let v8573 : (exn -> US7) = method20()
                                            let v8574 : US7 = match v8552 with Choice1Of2 x -> v8572 x | Choice2Of2 x -> v8573 x
                                            let _v8553 = v8574 
                                            #endif
                                            let v8575 : US7 = _v8553 
                                            return v8575 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8580 : Async<US7> = _v8551 
                                    let _v8535 = v8580 
                                    #endif
#else
                                    let v8581 : unit = ()
                                    let _v8581 =
                                        async {
                                            let! v8530 = v8530 
                                            let v8582 : Choice<bool, exn> = v8530 
                                            let v8583 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v8584 : US7 = null |> unbox<US7>
                                            let _v8583 = v8584 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v8587 : US7 = null |> unbox<US7>
                                            let _v8583 = v8587 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v8590 : US7 = null |> unbox<US7>
                                            let _v8583 = v8590 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v8593 : US7 = null |> unbox<US7>
                                            let _v8583 = v8593 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v8596 : US7 = null |> unbox<US7>
                                            let _v8583 = v8596 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v8599 : (bool -> US7) = method19()
                                            let v8600 : (exn -> US7) = method20()
                                            let v8601 : US7 = match v8582 with Choice1Of2 x -> v8599 x | Choice2Of2 x -> v8600 x
                                            let _v8583 = v8601 
                                            #endif
#else
                                            let v8602 : (bool -> US7) = method19()
                                            let v8603 : (exn -> US7) = method20()
                                            let v8604 : US7 = match v8582 with Choice1Of2 x -> v8602 x | Choice2Of2 x -> v8603 x
                                            let _v8583 = v8604 
                                            #endif
                                            let v8605 : US7 = _v8583 
                                            return v8605 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8610 : Async<US7> = _v8581 
                                    let _v8535 = v8610 
                                    #endif
                                    let v8611 : Async<US7> = _v8535 
                                    let v8616 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8617 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8616 = v8617 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8620 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8616 = v8620 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8623 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8616 = v8623 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8626 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8616 = v8626 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8629 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8616 = v8629 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8632 : unit = ()
                                    let _v8632 =
                                        async {
                                            let! v8611 = v8611 
                                            let v8633 : US7 = v8611 
                                            let v8639 : US8 =
                                                match v8633 with
                                                | US7_0(v8634) -> (* C1of2 *)
                                                    US8_0(v8634)
                                                | US7_1(v8636) -> (* C2of2 *)
                                                    US8_1(v8636)
                                            return v8639 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8640 : Async<US8> = _v8632 
                                    let _v8616 = v8640 
                                    #endif
#else
                                    let v8641 : unit = ()
                                    let _v8641 =
                                        async {
                                            let! v8611 = v8611 
                                            let v8642 : US7 = v8611 
                                            let v8648 : US8 =
                                                match v8642 with
                                                | US7_0(v8643) -> (* C1of2 *)
                                                    US8_0(v8643)
                                                | US7_1(v8645) -> (* C2of2 *)
                                                    US8_1(v8645)
                                            return v8648 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8649 : Async<US8> = _v8641 
                                    let _v8616 = v8649 
                                    #endif
                                    let v8650 : Async<US8> = _v8616 
                                    let v8655 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8656 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8655 = v8656 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8659 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8655 = v8659 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8662 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8655 = v8662 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8665 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8655 = v8665 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8668 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8655 = v8668 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8671 : unit = ()
                                    let _v8671 =
                                        async {
                                            let! v8650 = v8650 
                                            let v8672 : US8 = v8650 
                                            let v8796 : US6 =
                                                match v8672 with
                                                | US8_1(v8675) -> (* Error *)
                                                    let v8676 : string = $"%A{v8675}"
                                                    let v8679 : string = "System.TimeoutException"
                                                    let v8680 : bool = v8676.Contains v8679 
                                                    if v8680 then
                                                        let v8683 : unit = ()
                                                        let v8684 : (unit -> unit) = closure16(v4769)
                                                        let v8685 : unit = (fun () -> v8684 (); v8683) ()
                                                        US6_1
                                                    else
                                                        let v8726 : unit = ()
                                                        let v8727 : (unit -> unit) = closure17(v4769, v8675)
                                                        let v8728 : unit = (fun () -> v8727 (); v8726) ()
                                                        US6_1
                                                | US8_0(v8673) -> (* Ok *)
                                                    US6_0(v8673)
                                            return v8796 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8797 : Async<US6> = _v8671 
                                    let _v8655 = v8797 
                                    #endif
#else
                                    let v8798 : unit = ()
                                    let _v8798 =
                                        async {
                                            let! v8650 = v8650 
                                            let v8799 : US8 = v8650 
                                            let v8923 : US6 =
                                                match v8799 with
                                                | US8_1(v8802) -> (* Error *)
                                                    let v8803 : string = $"%A{v8802}"
                                                    let v8806 : string = "System.TimeoutException"
                                                    let v8807 : bool = v8803.Contains v8806 
                                                    if v8807 then
                                                        let v8810 : unit = ()
                                                        let v8811 : (unit -> unit) = closure16(v4769)
                                                        let v8812 : unit = (fun () -> v8811 (); v8810) ()
                                                        US6_1
                                                    else
                                                        let v8853 : unit = ()
                                                        let v8854 : (unit -> unit) = closure17(v4769, v8802)
                                                        let v8855 : unit = (fun () -> v8854 (); v8853) ()
                                                        US6_1
                                                | US8_0(v8800) -> (* Ok *)
                                                    US6_0(v8800)
                                            return v8923 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8924 : Async<US6> = _v8798 
                                    let _v8655 = v8924 
                                    #endif
                                    let v8925 : Async<US6> = _v8655 
                                    return! v8925 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v8930 : Async<US6> = _v8485 
                            let _v8023 = v8930 
                            #endif
                            let v8931 : Async<US6> = _v8023 
                            let _v7094 = v8931 
                            #endif
                            let v8936 : Async<US6> = _v7094 
                            let! v8936 = v8936 
                            let v8941 : US6 = v8936 
                            let v8944 : bool =
                                match v8941 with
                                | US6_1 -> (* None *)
                                    false
                                | US6_0(v8942) -> (* Some *)
                                    v8942
                            return v8944 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v8945 : Async<bool> = _v6866 
                    let _v4770 = v8945 
                    #endif
                    let v8946 : Async<bool> = _v4770 
                    v8946
            let! v8952 = v8952 
            let v8953 : bool = v8952 
            let v8954 : bool = v8953 = v1
            if v8954 then
                return v4 
                (*
                ()
            else
                *) else
                let v8955 : int64 = v4 % 100L
                let v8956 : bool = v8955 = 0L
                if v8956 then
                    let v8957 : unit = ()
                    let v8958 : (unit -> unit) = closure23(v0, v1, v3, v4)
                    let v8959 : unit = (fun () -> v8958 (); v8957) ()
                    ()
                let v8999 : unit = ()
                
#if FABLE_COMPILER || WASM || CONTRACT
                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                let v9000 : Async<unit> = null |> unbox<Async<unit>>
                let _v8999 = v9000 
                #endif
#if FABLE_COMPILER_RUST && WASM
                let v9003 : Async<unit> = null |> unbox<Async<unit>>
                let _v8999 = v9003 
                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                let v9006 : Async<unit> = null |> unbox<Async<unit>>
                let _v8999 = v9006 
                #endif
#if FABLE_COMPILER_TYPESCRIPT
                let v9009 : Async<unit> = null |> unbox<Async<unit>>
                let _v8999 = v9009 
                #endif
#if FABLE_COMPILER_PYTHON
                let v9012 : Async<unit> = null |> unbox<Async<unit>>
                let _v8999 = v9012 
                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                let v9015 : (int32 -> Async<unit>) = Async.Sleep
                let v9016 : Async<unit> = v9015 10
                let _v8999 = v9016 
                #endif
#else
                let v9017 : (int32 -> Async<unit>) = Async.Sleep
                let v9018 : Async<unit> = v9017 10
                let _v8999 = v9018 
                #endif
                let v9019 : Async<unit> = _v8999 
                do! v9019 
                let v9024 : int64 = v4 + 1L
                let v9025 : Async<int64> = method26(v0, v1, v2, v3, v9024)
                return! v9025 
                (*
                ()
            *)
            (*
            ()
        *)
        }
        (*
        ()
    *)
    let v9026 : Async<int64> = _v4524 
    let _v5 = v9026 
    #endif
    let v9027 : Async<int64> = _v5 
    v9027
and closure21 (v0 : int32 option, v1 : bool, v2 : string) (v3 : int32) : Async<int64> =
    let v4 : int64 = 1L
    method26(v0, v1, v2, v3, v4)
and closure20 (v0 : int32 option, v1 : bool) (v2 : string) : (int32 -> Async<int64>) =
    closure21(v0, v1, v2)
and closure19 (v0 : int32 option) (v1 : bool) : (string -> (int32 -> Async<int64>)) =
    closure20(v0, v1)
and closure18 () (v0 : int32 option) : (bool -> (string -> (int32 -> Async<int64>))) =
    closure19(v0)
and method30 (v0 : int32 option, v1 : string, v2 : int32) : Async<int32> =
    let v3 : unit = ()
    
#if FABLE_COMPILER || WASM || CONTRACT
    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
    let v4 : Async<int32> = null |> unbox<Async<int32>>
    let _v3 = v4 
    #endif
#if FABLE_COMPILER_RUST && WASM
    let v7 : Async<int32> = null |> unbox<Async<int32>>
    let _v3 = v7 
    #endif
#if FABLE_COMPILER_RUST && CONTRACT
    let v10 : Async<int32> = null |> unbox<Async<int32>>
    let _v3 = v10 
    #endif
#if FABLE_COMPILER_TYPESCRIPT
    let v13 : Async<int32> = null |> unbox<Async<int32>>
    let _v3 = v13 
    #endif
#if FABLE_COMPILER_PYTHON
    let v16 : Async<int32> = null |> unbox<Async<int32>>
    let _v3 = v16 
    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
    let v19 : unit = ()
    let _v19 =
        async {
            let v20 : (int32 -> US9) = method27()
            let v21 : US9 option = v0 |> Option.map v20 
            let v32 : US9 = US9_1
            let v33 : US9 = v21 |> Option.defaultValue v32 
            let v4447 : Async<bool> =
                match v33 with
                | US9_1 -> (* None *)
                    let v37 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v38 : Async<bool> = null |> unbox<Async<bool>>
                    let _v37 = v38 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v41 : Async<bool> = null |> unbox<Async<bool>>
                    let _v37 = v41 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v44 : Async<bool> = null |> unbox<Async<bool>>
                    let _v37 = v44 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v47 : Async<bool> = null |> unbox<Async<bool>>
                    let _v37 = v47 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v50 : Async<bool> = null |> unbox<Async<bool>>
                    let _v37 = v50 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v53 : unit = ()
                    let _v53 =
                        async {
                            let v54 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                            let! v54 = v54 
                            let v55 : System.Threading.CancellationToken = v54 
                            let v56 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                            use v56 = v56 
                            let v57 : System.Net.Sockets.TcpClient = v56 
                            try
                            let v58 : System.Threading.Tasks.ValueTask = v57.ConnectAsync (v1, v2, v55)
                            let v59 : (unit -> System.Threading.Tasks.Task) = v58.AsTask
                            let v60 : System.Threading.Tasks.Task = v59 ()
                            let v61 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v62 : Async<unit> = null |> unbox<Async<unit>>
                            let _v61 = v62 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v65 : Async<unit> = null |> unbox<Async<unit>>
                            let _v61 = v65 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v68 : Async<unit> = null |> unbox<Async<unit>>
                            let _v61 = v68 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v71 : Async<unit> = null |> unbox<Async<unit>>
                            let _v61 = v71 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v74 : Async<unit> = null |> unbox<Async<unit>>
                            let _v61 = v74 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v77 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v78 : Async<unit> = v77 v60
                            let _v61 = v78 
                            #endif
#else
                            let v79 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v80 : Async<unit> = v79 v60
                            let _v61 = v80 
                            #endif
                            let v81 : Async<unit> = _v61 
                            do! v81 
                            return true 
                            with ex ->
                                let v86 : exn = ex
                                let v87 : unit = ()
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v88 : string = $"%A{v86}"
                                let _v87 = v88 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v91 : string = $"%A{v86}"
                                let _v87 = v91 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v94 : string = $"%A{v86}"
                                let _v87 = v94 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v97 : string = $"%A{v86}"
                                let _v87 = v97 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v100 : string = $"%A{v86}"
                                let _v87 = v100 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v103 : string = $"%A{v86}"
                                let _v87 = v103 
                                #endif
#else
                                let v106 : string = $"{v86.GetType ()}: {v86.Message}"
                                let _v87 = v106 
                                #endif
                                let v107 : string = _v87 
                                let v112 : unit = ()
                                let v113 : (unit -> unit) = closure5(v2, v107)
                                let v114 : unit = (fun () -> v113 (); v112) ()
                                return false 
                                (*
                                ()
                            *)
                            (*
                            let v154 : bool = *)
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v155 : Async<bool> = _v53 
                    let _v37 = v155 
                    #endif
#else
                    let v156 : unit = ()
                    let _v156 =
                        async {
                            let v157 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                            let! v157 = v157 
                            let v158 : System.Threading.CancellationToken = v157 
                            let v159 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                            use v159 = v159 
                            let v160 : System.Net.Sockets.TcpClient = v159 
                            try
                            let v161 : System.Threading.Tasks.ValueTask = v160.ConnectAsync (v1, v2, v158)
                            let v162 : (unit -> System.Threading.Tasks.Task) = v161.AsTask
                            let v163 : System.Threading.Tasks.Task = v162 ()
                            let v164 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v165 : Async<unit> = null |> unbox<Async<unit>>
                            let _v164 = v165 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v168 : Async<unit> = null |> unbox<Async<unit>>
                            let _v164 = v168 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v171 : Async<unit> = null |> unbox<Async<unit>>
                            let _v164 = v171 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v174 : Async<unit> = null |> unbox<Async<unit>>
                            let _v164 = v174 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v177 : Async<unit> = null |> unbox<Async<unit>>
                            let _v164 = v177 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v180 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v181 : Async<unit> = v180 v163
                            let _v164 = v181 
                            #endif
#else
                            let v182 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v183 : Async<unit> = v182 v163
                            let _v164 = v183 
                            #endif
                            let v184 : Async<unit> = _v164 
                            do! v184 
                            return true 
                            with ex ->
                                let v189 : exn = ex
                                let v190 : unit = ()
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v191 : string = $"%A{v189}"
                                let _v190 = v191 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v194 : string = $"%A{v189}"
                                let _v190 = v194 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v197 : string = $"%A{v189}"
                                let _v190 = v197 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v200 : string = $"%A{v189}"
                                let _v190 = v200 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v203 : string = $"%A{v189}"
                                let _v190 = v203 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v206 : string = $"%A{v189}"
                                let _v190 = v206 
                                #endif
#else
                                let v209 : string = $"{v189.GetType ()}: {v189.Message}"
                                let _v190 = v209 
                                #endif
                                let v210 : string = _v190 
                                let v215 : unit = ()
                                let v216 : (unit -> unit) = closure5(v2, v210)
                                let v217 : unit = (fun () -> v216 (); v215) ()
                                return false 
                                (*
                                ()
                            *)
                            (*
                            let v257 : bool = *)
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v258 : Async<bool> = _v156 
                    let _v37 = v258 
                    #endif
                    let v259 : Async<bool> = _v37 
                    v259
                | US9_0(v264) -> (* Some *)
                    let v265 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v266 : Async<bool> = null |> unbox<Async<bool>>
                    let _v265 = v266 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v269 : Async<bool> = null |> unbox<Async<bool>>
                    let _v265 = v269 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v272 : Async<bool> = null |> unbox<Async<bool>>
                    let _v265 = v272 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v275 : Async<bool> = null |> unbox<Async<bool>>
                    let _v265 = v275 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v278 : Async<bool> = null |> unbox<Async<bool>>
                    let _v265 = v278 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v281 : unit = ()
                    let _v281 =
                        async {
                            let v282 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v283 : Async<bool> = null |> unbox<Async<bool>>
                            let _v282 = v283 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v286 : Async<bool> = null |> unbox<Async<bool>>
                            let _v282 = v286 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v289 : Async<bool> = null |> unbox<Async<bool>>
                            let _v282 = v289 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v292 : Async<bool> = null |> unbox<Async<bool>>
                            let _v282 = v292 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v295 : Async<bool> = null |> unbox<Async<bool>>
                            let _v282 = v295 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v298 : unit = ()
                            let _v298 =
                                async {
                                    let v299 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v299 = v299 
                                    let v300 : System.Threading.CancellationToken = v299 
                                    let v301 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v301 = v301 
                                    let v302 : System.Net.Sockets.TcpClient = v301 
                                    try
                                    let v303 : System.Threading.Tasks.ValueTask = v302.ConnectAsync (v1, v2, v300)
                                    let v304 : (unit -> System.Threading.Tasks.Task) = v303.AsTask
                                    let v305 : System.Threading.Tasks.Task = v304 ()
                                    let v306 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v307 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v306 = v307 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v310 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v306 = v310 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v313 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v306 = v313 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v316 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v306 = v316 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v319 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v306 = v319 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v322 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v323 : Async<unit> = v322 v305
                                    let _v306 = v323 
                                    #endif
#else
                                    let v324 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v325 : Async<unit> = v324 v305
                                    let _v306 = v325 
                                    #endif
                                    let v326 : Async<unit> = _v306 
                                    do! v326 
                                    return true 
                                    with ex ->
                                        let v331 : exn = ex
                                        let v332 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v333 : string = $"%A{v331}"
                                        let _v332 = v333 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v336 : string = $"%A{v331}"
                                        let _v332 = v336 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v339 : string = $"%A{v331}"
                                        let _v332 = v339 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v342 : string = $"%A{v331}"
                                        let _v332 = v342 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v345 : string = $"%A{v331}"
                                        let _v332 = v345 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v348 : string = $"%A{v331}"
                                        let _v332 = v348 
                                        #endif
#else
                                        let v351 : string = $"{v331.GetType ()}: {v331.Message}"
                                        let _v332 = v351 
                                        #endif
                                        let v352 : string = _v332 
                                        let v357 : unit = ()
                                        let v358 : (unit -> unit) = closure5(v2, v352)
                                        let v359 : unit = (fun () -> v358 (); v357) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v399 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v400 : Async<bool> = _v298 
                            let _v282 = v400 
                            #endif
#else
                            let v401 : unit = ()
                            let _v401 =
                                async {
                                    let v402 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v402 = v402 
                                    let v403 : System.Threading.CancellationToken = v402 
                                    let v404 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v404 = v404 
                                    let v405 : System.Net.Sockets.TcpClient = v404 
                                    try
                                    let v406 : System.Threading.Tasks.ValueTask = v405.ConnectAsync (v1, v2, v403)
                                    let v407 : (unit -> System.Threading.Tasks.Task) = v406.AsTask
                                    let v408 : System.Threading.Tasks.Task = v407 ()
                                    let v409 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v410 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v409 = v410 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v413 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v409 = v413 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v416 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v409 = v416 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v419 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v409 = v419 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v422 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v409 = v422 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v425 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v426 : Async<unit> = v425 v408
                                    let _v409 = v426 
                                    #endif
#else
                                    let v427 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v428 : Async<unit> = v427 v408
                                    let _v409 = v428 
                                    #endif
                                    let v429 : Async<unit> = _v409 
                                    do! v429 
                                    return true 
                                    with ex ->
                                        let v434 : exn = ex
                                        let v435 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v436 : string = $"%A{v434}"
                                        let _v435 = v436 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v439 : string = $"%A{v434}"
                                        let _v435 = v439 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v442 : string = $"%A{v434}"
                                        let _v435 = v442 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v445 : string = $"%A{v434}"
                                        let _v435 = v445 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v448 : string = $"%A{v434}"
                                        let _v435 = v448 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v451 : string = $"%A{v434}"
                                        let _v435 = v451 
                                        #endif
#else
                                        let v454 : string = $"{v434.GetType ()}: {v434.Message}"
                                        let _v435 = v454 
                                        #endif
                                        let v455 : string = _v435 
                                        let v460 : unit = ()
                                        let v461 : (unit -> unit) = closure5(v2, v455)
                                        let v462 : unit = (fun () -> v461 (); v460) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v502 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v503 : Async<bool> = _v401 
                            let _v282 = v503 
                            #endif
                            let v504 : Async<bool> = _v282 
                            let v509 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v510 : Async<US6> = null |> unbox<Async<US6>>
                            let _v509 = v510 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v513 : Async<US6> = null |> unbox<Async<US6>>
                            let _v509 = v513 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v516 : Async<US6> = null |> unbox<Async<US6>>
                            let _v509 = v516 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v519 : Async<US6> = null |> unbox<Async<US6>>
                            let _v509 = v519 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v522 : Async<US6> = null |> unbox<Async<US6>>
                            let _v509 = v522 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v525 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v526 : Async<US6> = null |> unbox<Async<US6>>
                            let _v525 = v526 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v529 : Async<US6> = null |> unbox<Async<US6>>
                            let _v525 = v529 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v532 : Async<US6> = null |> unbox<Async<US6>>
                            let _v525 = v532 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v535 : Async<US6> = null |> unbox<Async<US6>>
                            let _v525 = v535 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v538 : Async<US6> = null |> unbox<Async<US6>>
                            let _v525 = v538 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v541 : unit = ()
                            let _v541 =
                                async {
                                    let v542 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v543 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v542 = v543 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v546 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v542 = v546 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v549 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v542 = v549 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v552 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v542 = v552 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v555 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v542 = v555 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v558 : Async<Async<bool>> = Async.StartChild (v504, v264)
                                    let _v542 = v558 
                                    #endif
#else
                                    let v559 : Async<Async<bool>> = Async.StartChild (v504, v264)
                                    let _v542 = v559 
                                    #endif
                                    let v560 : Async<Async<bool>> = _v542 
                                    let! v560 = v560 
                                    let v565 : Async<bool> = v560 
                                    let v566 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v567 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v566 = v567 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v570 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v566 = v570 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v573 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v566 = v573 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v576 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v566 = v576 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v579 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v566 = v579 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v582 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v583 : Async<Choice<bool, exn>> = v582 v565
                                    let _v566 = v583 
                                    #endif
#else
                                    let v584 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v585 : Async<Choice<bool, exn>> = v584 v565
                                    let _v566 = v585 
                                    #endif
                                    let v586 : Async<Choice<bool, exn>> = _v566 
                                    let v591 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v592 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v591 = v592 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v595 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v591 = v595 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v598 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v591 = v598 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v601 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v591 = v601 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v604 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v591 = v604 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v607 : unit = ()
                                    let _v607 =
                                        async {
                                            let! v586 = v586 
                                            let v608 : Choice<bool, exn> = v586 
                                            let v609 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v610 : US7 = null |> unbox<US7>
                                            let _v609 = v610 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v613 : US7 = null |> unbox<US7>
                                            let _v609 = v613 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v616 : US7 = null |> unbox<US7>
                                            let _v609 = v616 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v619 : US7 = null |> unbox<US7>
                                            let _v609 = v619 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v622 : US7 = null |> unbox<US7>
                                            let _v609 = v622 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v625 : (bool -> US7) = method19()
                                            let v626 : (exn -> US7) = method20()
                                            let v627 : US7 = match v608 with Choice1Of2 x -> v625 x | Choice2Of2 x -> v626 x
                                            let _v609 = v627 
                                            #endif
#else
                                            let v628 : (bool -> US7) = method19()
                                            let v629 : (exn -> US7) = method20()
                                            let v630 : US7 = match v608 with Choice1Of2 x -> v628 x | Choice2Of2 x -> v629 x
                                            let _v609 = v630 
                                            #endif
                                            let v631 : US7 = _v609 
                                            return v631 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v636 : Async<US7> = _v607 
                                    let _v591 = v636 
                                    #endif
#else
                                    let v637 : unit = ()
                                    let _v637 =
                                        async {
                                            let! v586 = v586 
                                            let v638 : Choice<bool, exn> = v586 
                                            let v639 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v640 : US7 = null |> unbox<US7>
                                            let _v639 = v640 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v643 : US7 = null |> unbox<US7>
                                            let _v639 = v643 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v646 : US7 = null |> unbox<US7>
                                            let _v639 = v646 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v649 : US7 = null |> unbox<US7>
                                            let _v639 = v649 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v652 : US7 = null |> unbox<US7>
                                            let _v639 = v652 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v655 : (bool -> US7) = method19()
                                            let v656 : (exn -> US7) = method20()
                                            let v657 : US7 = match v638 with Choice1Of2 x -> v655 x | Choice2Of2 x -> v656 x
                                            let _v639 = v657 
                                            #endif
#else
                                            let v658 : (bool -> US7) = method19()
                                            let v659 : (exn -> US7) = method20()
                                            let v660 : US7 = match v638 with Choice1Of2 x -> v658 x | Choice2Of2 x -> v659 x
                                            let _v639 = v660 
                                            #endif
                                            let v661 : US7 = _v639 
                                            return v661 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v666 : Async<US7> = _v637 
                                    let _v591 = v666 
                                    #endif
                                    let v667 : Async<US7> = _v591 
                                    let v672 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v673 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v672 = v673 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v676 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v672 = v676 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v679 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v672 = v679 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v682 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v672 = v682 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v685 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v672 = v685 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v688 : unit = ()
                                    let _v688 =
                                        async {
                                            let! v667 = v667 
                                            let v689 : US7 = v667 
                                            let v695 : US8 =
                                                match v689 with
                                                | US7_0(v690) -> (* C1of2 *)
                                                    US8_0(v690)
                                                | US7_1(v692) -> (* C2of2 *)
                                                    US8_1(v692)
                                            return v695 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v696 : Async<US8> = _v688 
                                    let _v672 = v696 
                                    #endif
#else
                                    let v697 : unit = ()
                                    let _v697 =
                                        async {
                                            let! v667 = v667 
                                            let v698 : US7 = v667 
                                            let v704 : US8 =
                                                match v698 with
                                                | US7_0(v699) -> (* C1of2 *)
                                                    US8_0(v699)
                                                | US7_1(v701) -> (* C2of2 *)
                                                    US8_1(v701)
                                            return v704 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v705 : Async<US8> = _v697 
                                    let _v672 = v705 
                                    #endif
                                    let v706 : Async<US8> = _v672 
                                    let v711 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v712 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v711 = v712 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v715 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v711 = v715 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v718 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v711 = v718 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v721 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v711 = v721 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v724 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v711 = v724 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v727 : unit = ()
                                    let _v727 =
                                        async {
                                            let! v706 = v706 
                                            let v728 : US8 = v706 
                                            let v852 : US6 =
                                                match v728 with
                                                | US8_1(v731) -> (* Error *)
                                                    let v732 : string = $"%A{v731}"
                                                    let v735 : string = "System.TimeoutException"
                                                    let v736 : bool = v732.Contains v735 
                                                    if v736 then
                                                        let v739 : unit = ()
                                                        let v740 : (unit -> unit) = closure16(v264)
                                                        let v741 : unit = (fun () -> v740 (); v739) ()
                                                        US6_1
                                                    else
                                                        let v782 : unit = ()
                                                        let v783 : (unit -> unit) = closure17(v264, v731)
                                                        let v784 : unit = (fun () -> v783 (); v782) ()
                                                        US6_1
                                                | US8_0(v729) -> (* Ok *)
                                                    US6_0(v729)
                                            return v852 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v853 : Async<US6> = _v727 
                                    let _v711 = v853 
                                    #endif
#else
                                    let v854 : unit = ()
                                    let _v854 =
                                        async {
                                            let! v706 = v706 
                                            let v855 : US8 = v706 
                                            let v979 : US6 =
                                                match v855 with
                                                | US8_1(v858) -> (* Error *)
                                                    let v859 : string = $"%A{v858}"
                                                    let v862 : string = "System.TimeoutException"
                                                    let v863 : bool = v859.Contains v862 
                                                    if v863 then
                                                        let v866 : unit = ()
                                                        let v867 : (unit -> unit) = closure16(v264)
                                                        let v868 : unit = (fun () -> v867 (); v866) ()
                                                        US6_1
                                                    else
                                                        let v909 : unit = ()
                                                        let v910 : (unit -> unit) = closure17(v264, v858)
                                                        let v911 : unit = (fun () -> v910 (); v909) ()
                                                        US6_1
                                                | US8_0(v856) -> (* Ok *)
                                                    US6_0(v856)
                                            return v979 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v980 : Async<US6> = _v854 
                                    let _v711 = v980 
                                    #endif
                                    let v981 : Async<US6> = _v711 
                                    return! v981 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v986 : Async<US6> = _v541 
                            let _v525 = v986 
                            #endif
#else
                            let v987 : unit = ()
                            let _v987 =
                                async {
                                    let v988 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v989 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v988 = v989 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v992 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v988 = v992 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v995 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v988 = v995 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v998 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v988 = v998 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1001 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v988 = v1001 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1004 : Async<Async<bool>> = Async.StartChild (v504, v264)
                                    let _v988 = v1004 
                                    #endif
#else
                                    let v1005 : Async<Async<bool>> = Async.StartChild (v504, v264)
                                    let _v988 = v1005 
                                    #endif
                                    let v1006 : Async<Async<bool>> = _v988 
                                    let! v1006 = v1006 
                                    let v1011 : Async<bool> = v1006 
                                    let v1012 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1013 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1012 = v1013 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1016 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1012 = v1016 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1019 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1012 = v1019 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1022 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1012 = v1022 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1025 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1012 = v1025 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1028 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1029 : Async<Choice<bool, exn>> = v1028 v1011
                                    let _v1012 = v1029 
                                    #endif
#else
                                    let v1030 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1031 : Async<Choice<bool, exn>> = v1030 v1011
                                    let _v1012 = v1031 
                                    #endif
                                    let v1032 : Async<Choice<bool, exn>> = _v1012 
                                    let v1037 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1038 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1037 = v1038 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1041 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1037 = v1041 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1044 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1037 = v1044 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1047 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1037 = v1047 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1050 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1037 = v1050 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1053 : unit = ()
                                    let _v1053 =
                                        async {
                                            let! v1032 = v1032 
                                            let v1054 : Choice<bool, exn> = v1032 
                                            let v1055 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1056 : US7 = null |> unbox<US7>
                                            let _v1055 = v1056 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v1059 : US7 = null |> unbox<US7>
                                            let _v1055 = v1059 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v1062 : US7 = null |> unbox<US7>
                                            let _v1055 = v1062 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v1065 : US7 = null |> unbox<US7>
                                            let _v1055 = v1065 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v1068 : US7 = null |> unbox<US7>
                                            let _v1055 = v1068 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v1071 : (bool -> US7) = method19()
                                            let v1072 : (exn -> US7) = method20()
                                            let v1073 : US7 = match v1054 with Choice1Of2 x -> v1071 x | Choice2Of2 x -> v1072 x
                                            let _v1055 = v1073 
                                            #endif
#else
                                            let v1074 : (bool -> US7) = method19()
                                            let v1075 : (exn -> US7) = method20()
                                            let v1076 : US7 = match v1054 with Choice1Of2 x -> v1074 x | Choice2Of2 x -> v1075 x
                                            let _v1055 = v1076 
                                            #endif
                                            let v1077 : US7 = _v1055 
                                            return v1077 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1082 : Async<US7> = _v1053 
                                    let _v1037 = v1082 
                                    #endif
#else
                                    let v1083 : unit = ()
                                    let _v1083 =
                                        async {
                                            let! v1032 = v1032 
                                            let v1084 : Choice<bool, exn> = v1032 
                                            let v1085 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1086 : US7 = null |> unbox<US7>
                                            let _v1085 = v1086 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v1089 : US7 = null |> unbox<US7>
                                            let _v1085 = v1089 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v1092 : US7 = null |> unbox<US7>
                                            let _v1085 = v1092 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v1095 : US7 = null |> unbox<US7>
                                            let _v1085 = v1095 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v1098 : US7 = null |> unbox<US7>
                                            let _v1085 = v1098 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v1101 : (bool -> US7) = method19()
                                            let v1102 : (exn -> US7) = method20()
                                            let v1103 : US7 = match v1084 with Choice1Of2 x -> v1101 x | Choice2Of2 x -> v1102 x
                                            let _v1085 = v1103 
                                            #endif
#else
                                            let v1104 : (bool -> US7) = method19()
                                            let v1105 : (exn -> US7) = method20()
                                            let v1106 : US7 = match v1084 with Choice1Of2 x -> v1104 x | Choice2Of2 x -> v1105 x
                                            let _v1085 = v1106 
                                            #endif
                                            let v1107 : US7 = _v1085 
                                            return v1107 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1112 : Async<US7> = _v1083 
                                    let _v1037 = v1112 
                                    #endif
                                    let v1113 : Async<US7> = _v1037 
                                    let v1118 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1119 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1118 = v1119 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1122 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1118 = v1122 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1125 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1118 = v1125 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1128 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1118 = v1128 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1131 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1118 = v1131 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1134 : unit = ()
                                    let _v1134 =
                                        async {
                                            let! v1113 = v1113 
                                            let v1135 : US7 = v1113 
                                            let v1141 : US8 =
                                                match v1135 with
                                                | US7_0(v1136) -> (* C1of2 *)
                                                    US8_0(v1136)
                                                | US7_1(v1138) -> (* C2of2 *)
                                                    US8_1(v1138)
                                            return v1141 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1142 : Async<US8> = _v1134 
                                    let _v1118 = v1142 
                                    #endif
#else
                                    let v1143 : unit = ()
                                    let _v1143 =
                                        async {
                                            let! v1113 = v1113 
                                            let v1144 : US7 = v1113 
                                            let v1150 : US8 =
                                                match v1144 with
                                                | US7_0(v1145) -> (* C1of2 *)
                                                    US8_0(v1145)
                                                | US7_1(v1147) -> (* C2of2 *)
                                                    US8_1(v1147)
                                            return v1150 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1151 : Async<US8> = _v1143 
                                    let _v1118 = v1151 
                                    #endif
                                    let v1152 : Async<US8> = _v1118 
                                    let v1157 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1158 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1157 = v1158 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1161 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1157 = v1161 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1164 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1157 = v1164 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1167 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1157 = v1167 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1170 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1157 = v1170 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1173 : unit = ()
                                    let _v1173 =
                                        async {
                                            let! v1152 = v1152 
                                            let v1174 : US8 = v1152 
                                            let v1298 : US6 =
                                                match v1174 with
                                                | US8_1(v1177) -> (* Error *)
                                                    let v1178 : string = $"%A{v1177}"
                                                    let v1181 : string = "System.TimeoutException"
                                                    let v1182 : bool = v1178.Contains v1181 
                                                    if v1182 then
                                                        let v1185 : unit = ()
                                                        let v1186 : (unit -> unit) = closure16(v264)
                                                        let v1187 : unit = (fun () -> v1186 (); v1185) ()
                                                        US6_1
                                                    else
                                                        let v1228 : unit = ()
                                                        let v1229 : (unit -> unit) = closure17(v264, v1177)
                                                        let v1230 : unit = (fun () -> v1229 (); v1228) ()
                                                        US6_1
                                                | US8_0(v1175) -> (* Ok *)
                                                    US6_0(v1175)
                                            return v1298 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1299 : Async<US6> = _v1173 
                                    let _v1157 = v1299 
                                    #endif
#else
                                    let v1300 : unit = ()
                                    let _v1300 =
                                        async {
                                            let! v1152 = v1152 
                                            let v1301 : US8 = v1152 
                                            let v1425 : US6 =
                                                match v1301 with
                                                | US8_1(v1304) -> (* Error *)
                                                    let v1305 : string = $"%A{v1304}"
                                                    let v1308 : string = "System.TimeoutException"
                                                    let v1309 : bool = v1305.Contains v1308 
                                                    if v1309 then
                                                        let v1312 : unit = ()
                                                        let v1313 : (unit -> unit) = closure16(v264)
                                                        let v1314 : unit = (fun () -> v1313 (); v1312) ()
                                                        US6_1
                                                    else
                                                        let v1355 : unit = ()
                                                        let v1356 : (unit -> unit) = closure17(v264, v1304)
                                                        let v1357 : unit = (fun () -> v1356 (); v1355) ()
                                                        US6_1
                                                | US8_0(v1302) -> (* Ok *)
                                                    US6_0(v1302)
                                            return v1425 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1426 : Async<US6> = _v1300 
                                    let _v1157 = v1426 
                                    #endif
                                    let v1427 : Async<US6> = _v1157 
                                    return! v1427 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v1432 : Async<US6> = _v987 
                            let _v525 = v1432 
                            #endif
                            let v1433 : Async<US6> = _v525 
                            let _v509 = v1433 
                            #endif
#else
                            let v1438 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v1439 : Async<US6> = null |> unbox<Async<US6>>
                            let _v1438 = v1439 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v1442 : Async<US6> = null |> unbox<Async<US6>>
                            let _v1438 = v1442 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v1445 : Async<US6> = null |> unbox<Async<US6>>
                            let _v1438 = v1445 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v1448 : Async<US6> = null |> unbox<Async<US6>>
                            let _v1438 = v1448 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v1451 : Async<US6> = null |> unbox<Async<US6>>
                            let _v1438 = v1451 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v1454 : unit = ()
                            let _v1454 =
                                async {
                                    let v1455 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1456 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1455 = v1456 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1459 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1455 = v1459 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1462 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1455 = v1462 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1465 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1455 = v1465 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1468 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1455 = v1468 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1471 : Async<Async<bool>> = Async.StartChild (v504, v264)
                                    let _v1455 = v1471 
                                    #endif
#else
                                    let v1472 : Async<Async<bool>> = Async.StartChild (v504, v264)
                                    let _v1455 = v1472 
                                    #endif
                                    let v1473 : Async<Async<bool>> = _v1455 
                                    let! v1473 = v1473 
                                    let v1478 : Async<bool> = v1473 
                                    let v1479 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1480 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1479 = v1480 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1483 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1479 = v1483 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1486 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1479 = v1486 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1489 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1479 = v1489 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1492 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1479 = v1492 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1495 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1496 : Async<Choice<bool, exn>> = v1495 v1478
                                    let _v1479 = v1496 
                                    #endif
#else
                                    let v1497 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1498 : Async<Choice<bool, exn>> = v1497 v1478
                                    let _v1479 = v1498 
                                    #endif
                                    let v1499 : Async<Choice<bool, exn>> = _v1479 
                                    let v1504 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1505 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1504 = v1505 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1508 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1504 = v1508 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1511 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1504 = v1511 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1514 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1504 = v1514 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1517 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1504 = v1517 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1520 : unit = ()
                                    let _v1520 =
                                        async {
                                            let! v1499 = v1499 
                                            let v1521 : Choice<bool, exn> = v1499 
                                            let v1522 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1523 : US7 = null |> unbox<US7>
                                            let _v1522 = v1523 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v1526 : US7 = null |> unbox<US7>
                                            let _v1522 = v1526 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v1529 : US7 = null |> unbox<US7>
                                            let _v1522 = v1529 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v1532 : US7 = null |> unbox<US7>
                                            let _v1522 = v1532 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v1535 : US7 = null |> unbox<US7>
                                            let _v1522 = v1535 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v1538 : (bool -> US7) = method19()
                                            let v1539 : (exn -> US7) = method20()
                                            let v1540 : US7 = match v1521 with Choice1Of2 x -> v1538 x | Choice2Of2 x -> v1539 x
                                            let _v1522 = v1540 
                                            #endif
#else
                                            let v1541 : (bool -> US7) = method19()
                                            let v1542 : (exn -> US7) = method20()
                                            let v1543 : US7 = match v1521 with Choice1Of2 x -> v1541 x | Choice2Of2 x -> v1542 x
                                            let _v1522 = v1543 
                                            #endif
                                            let v1544 : US7 = _v1522 
                                            return v1544 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1549 : Async<US7> = _v1520 
                                    let _v1504 = v1549 
                                    #endif
#else
                                    let v1550 : unit = ()
                                    let _v1550 =
                                        async {
                                            let! v1499 = v1499 
                                            let v1551 : Choice<bool, exn> = v1499 
                                            let v1552 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1553 : US7 = null |> unbox<US7>
                                            let _v1552 = v1553 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v1556 : US7 = null |> unbox<US7>
                                            let _v1552 = v1556 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v1559 : US7 = null |> unbox<US7>
                                            let _v1552 = v1559 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v1562 : US7 = null |> unbox<US7>
                                            let _v1552 = v1562 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v1565 : US7 = null |> unbox<US7>
                                            let _v1552 = v1565 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v1568 : (bool -> US7) = method19()
                                            let v1569 : (exn -> US7) = method20()
                                            let v1570 : US7 = match v1551 with Choice1Of2 x -> v1568 x | Choice2Of2 x -> v1569 x
                                            let _v1552 = v1570 
                                            #endif
#else
                                            let v1571 : (bool -> US7) = method19()
                                            let v1572 : (exn -> US7) = method20()
                                            let v1573 : US7 = match v1551 with Choice1Of2 x -> v1571 x | Choice2Of2 x -> v1572 x
                                            let _v1552 = v1573 
                                            #endif
                                            let v1574 : US7 = _v1552 
                                            return v1574 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1579 : Async<US7> = _v1550 
                                    let _v1504 = v1579 
                                    #endif
                                    let v1580 : Async<US7> = _v1504 
                                    let v1585 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1586 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1585 = v1586 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1589 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1585 = v1589 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1592 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1585 = v1592 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1595 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1585 = v1595 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1598 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v1585 = v1598 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1601 : unit = ()
                                    let _v1601 =
                                        async {
                                            let! v1580 = v1580 
                                            let v1602 : US7 = v1580 
                                            let v1608 : US8 =
                                                match v1602 with
                                                | US7_0(v1603) -> (* C1of2 *)
                                                    US8_0(v1603)
                                                | US7_1(v1605) -> (* C2of2 *)
                                                    US8_1(v1605)
                                            return v1608 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1609 : Async<US8> = _v1601 
                                    let _v1585 = v1609 
                                    #endif
#else
                                    let v1610 : unit = ()
                                    let _v1610 =
                                        async {
                                            let! v1580 = v1580 
                                            let v1611 : US7 = v1580 
                                            let v1617 : US8 =
                                                match v1611 with
                                                | US7_0(v1612) -> (* C1of2 *)
                                                    US8_0(v1612)
                                                | US7_1(v1614) -> (* C2of2 *)
                                                    US8_1(v1614)
                                            return v1617 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1618 : Async<US8> = _v1610 
                                    let _v1585 = v1618 
                                    #endif
                                    let v1619 : Async<US8> = _v1585 
                                    let v1624 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1625 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1624 = v1625 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1628 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1624 = v1628 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1631 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1624 = v1631 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1634 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1624 = v1634 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1637 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v1624 = v1637 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1640 : unit = ()
                                    let _v1640 =
                                        async {
                                            let! v1619 = v1619 
                                            let v1641 : US8 = v1619 
                                            let v1765 : US6 =
                                                match v1641 with
                                                | US8_1(v1644) -> (* Error *)
                                                    let v1645 : string = $"%A{v1644}"
                                                    let v1648 : string = "System.TimeoutException"
                                                    let v1649 : bool = v1645.Contains v1648 
                                                    if v1649 then
                                                        let v1652 : unit = ()
                                                        let v1653 : (unit -> unit) = closure16(v264)
                                                        let v1654 : unit = (fun () -> v1653 (); v1652) ()
                                                        US6_1
                                                    else
                                                        let v1695 : unit = ()
                                                        let v1696 : (unit -> unit) = closure17(v264, v1644)
                                                        let v1697 : unit = (fun () -> v1696 (); v1695) ()
                                                        US6_1
                                                | US8_0(v1642) -> (* Ok *)
                                                    US6_0(v1642)
                                            return v1765 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1766 : Async<US6> = _v1640 
                                    let _v1624 = v1766 
                                    #endif
#else
                                    let v1767 : unit = ()
                                    let _v1767 =
                                        async {
                                            let! v1619 = v1619 
                                            let v1768 : US8 = v1619 
                                            let v1892 : US6 =
                                                match v1768 with
                                                | US8_1(v1771) -> (* Error *)
                                                    let v1772 : string = $"%A{v1771}"
                                                    let v1775 : string = "System.TimeoutException"
                                                    let v1776 : bool = v1772.Contains v1775 
                                                    if v1776 then
                                                        let v1779 : unit = ()
                                                        let v1780 : (unit -> unit) = closure16(v264)
                                                        let v1781 : unit = (fun () -> v1780 (); v1779) ()
                                                        US6_1
                                                    else
                                                        let v1822 : unit = ()
                                                        let v1823 : (unit -> unit) = closure17(v264, v1771)
                                                        let v1824 : unit = (fun () -> v1823 (); v1822) ()
                                                        US6_1
                                                | US8_0(v1769) -> (* Ok *)
                                                    US6_0(v1769)
                                            return v1892 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1893 : Async<US6> = _v1767 
                                    let _v1624 = v1893 
                                    #endif
                                    let v1894 : Async<US6> = _v1624 
                                    return! v1894 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v1899 : Async<US6> = _v1454 
                            let _v1438 = v1899 
                            #endif
#else
                            let v1900 : unit = ()
                            let _v1900 =
                                async {
                                    let v1901 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1902 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1901 = v1902 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1905 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1901 = v1905 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1908 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1901 = v1908 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1911 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1901 = v1911 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1914 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v1901 = v1914 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1917 : Async<Async<bool>> = Async.StartChild (v504, v264)
                                    let _v1901 = v1917 
                                    #endif
#else
                                    let v1918 : Async<Async<bool>> = Async.StartChild (v504, v264)
                                    let _v1901 = v1918 
                                    #endif
                                    let v1919 : Async<Async<bool>> = _v1901 
                                    let! v1919 = v1919 
                                    let v1924 : Async<bool> = v1919 
                                    let v1925 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1926 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1925 = v1926 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1929 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1925 = v1929 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1932 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1925 = v1932 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1935 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1925 = v1935 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1938 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v1925 = v1938 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1941 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1942 : Async<Choice<bool, exn>> = v1941 v1924
                                    let _v1925 = v1942 
                                    #endif
#else
                                    let v1943 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v1944 : Async<Choice<bool, exn>> = v1943 v1924
                                    let _v1925 = v1944 
                                    #endif
                                    let v1945 : Async<Choice<bool, exn>> = _v1925 
                                    let v1950 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v1951 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1950 = v1951 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v1954 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1950 = v1954 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v1957 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1950 = v1957 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v1960 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1950 = v1960 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v1963 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v1950 = v1963 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v1966 : unit = ()
                                    let _v1966 =
                                        async {
                                            let! v1945 = v1945 
                                            let v1967 : Choice<bool, exn> = v1945 
                                            let v1968 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1969 : US7 = null |> unbox<US7>
                                            let _v1968 = v1969 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v1972 : US7 = null |> unbox<US7>
                                            let _v1968 = v1972 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v1975 : US7 = null |> unbox<US7>
                                            let _v1968 = v1975 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v1978 : US7 = null |> unbox<US7>
                                            let _v1968 = v1978 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v1981 : US7 = null |> unbox<US7>
                                            let _v1968 = v1981 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v1984 : (bool -> US7) = method19()
                                            let v1985 : (exn -> US7) = method20()
                                            let v1986 : US7 = match v1967 with Choice1Of2 x -> v1984 x | Choice2Of2 x -> v1985 x
                                            let _v1968 = v1986 
                                            #endif
#else
                                            let v1987 : (bool -> US7) = method19()
                                            let v1988 : (exn -> US7) = method20()
                                            let v1989 : US7 = match v1967 with Choice1Of2 x -> v1987 x | Choice2Of2 x -> v1988 x
                                            let _v1968 = v1989 
                                            #endif
                                            let v1990 : US7 = _v1968 
                                            return v1990 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v1995 : Async<US7> = _v1966 
                                    let _v1950 = v1995 
                                    #endif
#else
                                    let v1996 : unit = ()
                                    let _v1996 =
                                        async {
                                            let! v1945 = v1945 
                                            let v1997 : Choice<bool, exn> = v1945 
                                            let v1998 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v1999 : US7 = null |> unbox<US7>
                                            let _v1998 = v1999 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v2002 : US7 = null |> unbox<US7>
                                            let _v1998 = v2002 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v2005 : US7 = null |> unbox<US7>
                                            let _v1998 = v2005 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v2008 : US7 = null |> unbox<US7>
                                            let _v1998 = v2008 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v2011 : US7 = null |> unbox<US7>
                                            let _v1998 = v2011 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v2014 : (bool -> US7) = method19()
                                            let v2015 : (exn -> US7) = method20()
                                            let v2016 : US7 = match v1997 with Choice1Of2 x -> v2014 x | Choice2Of2 x -> v2015 x
                                            let _v1998 = v2016 
                                            #endif
#else
                                            let v2017 : (bool -> US7) = method19()
                                            let v2018 : (exn -> US7) = method20()
                                            let v2019 : US7 = match v1997 with Choice1Of2 x -> v2017 x | Choice2Of2 x -> v2018 x
                                            let _v1998 = v2019 
                                            #endif
                                            let v2020 : US7 = _v1998 
                                            return v2020 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2025 : Async<US7> = _v1996 
                                    let _v1950 = v2025 
                                    #endif
                                    let v2026 : Async<US7> = _v1950 
                                    let v2031 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2032 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2031 = v2032 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2035 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2031 = v2035 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2038 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2031 = v2038 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2041 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2031 = v2041 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2044 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2031 = v2044 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2047 : unit = ()
                                    let _v2047 =
                                        async {
                                            let! v2026 = v2026 
                                            let v2048 : US7 = v2026 
                                            let v2054 : US8 =
                                                match v2048 with
                                                | US7_0(v2049) -> (* C1of2 *)
                                                    US8_0(v2049)
                                                | US7_1(v2051) -> (* C2of2 *)
                                                    US8_1(v2051)
                                            return v2054 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2055 : Async<US8> = _v2047 
                                    let _v2031 = v2055 
                                    #endif
#else
                                    let v2056 : unit = ()
                                    let _v2056 =
                                        async {
                                            let! v2026 = v2026 
                                            let v2057 : US7 = v2026 
                                            let v2063 : US8 =
                                                match v2057 with
                                                | US7_0(v2058) -> (* C1of2 *)
                                                    US8_0(v2058)
                                                | US7_1(v2060) -> (* C2of2 *)
                                                    US8_1(v2060)
                                            return v2063 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2064 : Async<US8> = _v2056 
                                    let _v2031 = v2064 
                                    #endif
                                    let v2065 : Async<US8> = _v2031 
                                    let v2070 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2071 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2070 = v2071 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2074 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2070 = v2074 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2077 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2070 = v2077 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2080 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2070 = v2080 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2083 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2070 = v2083 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2086 : unit = ()
                                    let _v2086 =
                                        async {
                                            let! v2065 = v2065 
                                            let v2087 : US8 = v2065 
                                            let v2211 : US6 =
                                                match v2087 with
                                                | US8_1(v2090) -> (* Error *)
                                                    let v2091 : string = $"%A{v2090}"
                                                    let v2094 : string = "System.TimeoutException"
                                                    let v2095 : bool = v2091.Contains v2094 
                                                    if v2095 then
                                                        let v2098 : unit = ()
                                                        let v2099 : (unit -> unit) = closure16(v264)
                                                        let v2100 : unit = (fun () -> v2099 (); v2098) ()
                                                        US6_1
                                                    else
                                                        let v2141 : unit = ()
                                                        let v2142 : (unit -> unit) = closure17(v264, v2090)
                                                        let v2143 : unit = (fun () -> v2142 (); v2141) ()
                                                        US6_1
                                                | US8_0(v2088) -> (* Ok *)
                                                    US6_0(v2088)
                                            return v2211 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2212 : Async<US6> = _v2086 
                                    let _v2070 = v2212 
                                    #endif
#else
                                    let v2213 : unit = ()
                                    let _v2213 =
                                        async {
                                            let! v2065 = v2065 
                                            let v2214 : US8 = v2065 
                                            let v2338 : US6 =
                                                match v2214 with
                                                | US8_1(v2217) -> (* Error *)
                                                    let v2218 : string = $"%A{v2217}"
                                                    let v2221 : string = "System.TimeoutException"
                                                    let v2222 : bool = v2218.Contains v2221 
                                                    if v2222 then
                                                        let v2225 : unit = ()
                                                        let v2226 : (unit -> unit) = closure16(v264)
                                                        let v2227 : unit = (fun () -> v2226 (); v2225) ()
                                                        US6_1
                                                    else
                                                        let v2268 : unit = ()
                                                        let v2269 : (unit -> unit) = closure17(v264, v2217)
                                                        let v2270 : unit = (fun () -> v2269 (); v2268) ()
                                                        US6_1
                                                | US8_0(v2215) -> (* Ok *)
                                                    US6_0(v2215)
                                            return v2338 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2339 : Async<US6> = _v2213 
                                    let _v2070 = v2339 
                                    #endif
                                    let v2340 : Async<US6> = _v2070 
                                    return! v2340 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v2345 : Async<US6> = _v1900 
                            let _v1438 = v2345 
                            #endif
                            let v2346 : Async<US6> = _v1438 
                            let _v509 = v2346 
                            #endif
                            let v2351 : Async<US6> = _v509 
                            let! v2351 = v2351 
                            let v2356 : US6 = v2351 
                            let v2359 : bool =
                                match v2356 with
                                | US6_1 -> (* None *)
                                    false
                                | US6_0(v2357) -> (* Some *)
                                    v2357
                            return v2359 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v2360 : Async<bool> = _v281 
                    let _v265 = v2360 
                    #endif
#else
                    let v2361 : unit = ()
                    let _v2361 =
                        async {
                            let v2362 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v2363 : Async<bool> = null |> unbox<Async<bool>>
                            let _v2362 = v2363 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v2366 : Async<bool> = null |> unbox<Async<bool>>
                            let _v2362 = v2366 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v2369 : Async<bool> = null |> unbox<Async<bool>>
                            let _v2362 = v2369 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v2372 : Async<bool> = null |> unbox<Async<bool>>
                            let _v2362 = v2372 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v2375 : Async<bool> = null |> unbox<Async<bool>>
                            let _v2362 = v2375 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v2378 : unit = ()
                            let _v2378 =
                                async {
                                    let v2379 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v2379 = v2379 
                                    let v2380 : System.Threading.CancellationToken = v2379 
                                    let v2381 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v2381 = v2381 
                                    let v2382 : System.Net.Sockets.TcpClient = v2381 
                                    try
                                    let v2383 : System.Threading.Tasks.ValueTask = v2382.ConnectAsync (v1, v2, v2380)
                                    let v2384 : (unit -> System.Threading.Tasks.Task) = v2383.AsTask
                                    let v2385 : System.Threading.Tasks.Task = v2384 ()
                                    let v2386 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2387 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2386 = v2387 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2390 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2386 = v2390 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2393 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2386 = v2393 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2396 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2386 = v2396 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2399 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2386 = v2399 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2402 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v2403 : Async<unit> = v2402 v2385
                                    let _v2386 = v2403 
                                    #endif
#else
                                    let v2404 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v2405 : Async<unit> = v2404 v2385
                                    let _v2386 = v2405 
                                    #endif
                                    let v2406 : Async<unit> = _v2386 
                                    do! v2406 
                                    return true 
                                    with ex ->
                                        let v2411 : exn = ex
                                        let v2412 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v2413 : string = $"%A{v2411}"
                                        let _v2412 = v2413 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v2416 : string = $"%A{v2411}"
                                        let _v2412 = v2416 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v2419 : string = $"%A{v2411}"
                                        let _v2412 = v2419 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v2422 : string = $"%A{v2411}"
                                        let _v2412 = v2422 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v2425 : string = $"%A{v2411}"
                                        let _v2412 = v2425 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v2428 : string = $"%A{v2411}"
                                        let _v2412 = v2428 
                                        #endif
#else
                                        let v2431 : string = $"{v2411.GetType ()}: {v2411.Message}"
                                        let _v2412 = v2431 
                                        #endif
                                        let v2432 : string = _v2412 
                                        let v2437 : unit = ()
                                        let v2438 : (unit -> unit) = closure5(v2, v2432)
                                        let v2439 : unit = (fun () -> v2438 (); v2437) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v2479 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v2480 : Async<bool> = _v2378 
                            let _v2362 = v2480 
                            #endif
#else
                            let v2481 : unit = ()
                            let _v2481 =
                                async {
                                    let v2482 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v2482 = v2482 
                                    let v2483 : System.Threading.CancellationToken = v2482 
                                    let v2484 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v2484 = v2484 
                                    let v2485 : System.Net.Sockets.TcpClient = v2484 
                                    try
                                    let v2486 : System.Threading.Tasks.ValueTask = v2485.ConnectAsync (v1, v2, v2483)
                                    let v2487 : (unit -> System.Threading.Tasks.Task) = v2486.AsTask
                                    let v2488 : System.Threading.Tasks.Task = v2487 ()
                                    let v2489 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2490 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2489 = v2490 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2493 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2489 = v2493 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2496 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2489 = v2496 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2499 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2489 = v2499 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2502 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v2489 = v2502 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2505 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v2506 : Async<unit> = v2505 v2488
                                    let _v2489 = v2506 
                                    #endif
#else
                                    let v2507 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v2508 : Async<unit> = v2507 v2488
                                    let _v2489 = v2508 
                                    #endif
                                    let v2509 : Async<unit> = _v2489 
                                    do! v2509 
                                    return true 
                                    with ex ->
                                        let v2514 : exn = ex
                                        let v2515 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v2516 : string = $"%A{v2514}"
                                        let _v2515 = v2516 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v2519 : string = $"%A{v2514}"
                                        let _v2515 = v2519 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v2522 : string = $"%A{v2514}"
                                        let _v2515 = v2522 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v2525 : string = $"%A{v2514}"
                                        let _v2515 = v2525 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v2528 : string = $"%A{v2514}"
                                        let _v2515 = v2528 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v2531 : string = $"%A{v2514}"
                                        let _v2515 = v2531 
                                        #endif
#else
                                        let v2534 : string = $"{v2514.GetType ()}: {v2514.Message}"
                                        let _v2515 = v2534 
                                        #endif
                                        let v2535 : string = _v2515 
                                        let v2540 : unit = ()
                                        let v2541 : (unit -> unit) = closure5(v2, v2535)
                                        let v2542 : unit = (fun () -> v2541 (); v2540) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v2582 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v2583 : Async<bool> = _v2481 
                            let _v2362 = v2583 
                            #endif
                            let v2584 : Async<bool> = _v2362 
                            let v2589 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v2590 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2589 = v2590 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v2593 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2589 = v2593 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v2596 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2589 = v2596 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v2599 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2589 = v2599 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v2602 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2589 = v2602 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v2605 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v2606 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2605 = v2606 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v2609 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2605 = v2609 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v2612 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2605 = v2612 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v2615 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2605 = v2615 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v2618 : Async<US6> = null |> unbox<Async<US6>>
                            let _v2605 = v2618 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v2621 : unit = ()
                            let _v2621 =
                                async {
                                    let v2622 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2623 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v2622 = v2623 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2626 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v2622 = v2626 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2629 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v2622 = v2629 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2632 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v2622 = v2632 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2635 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v2622 = v2635 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2638 : Async<Async<bool>> = Async.StartChild (v2584, v264)
                                    let _v2622 = v2638 
                                    #endif
#else
                                    let v2639 : Async<Async<bool>> = Async.StartChild (v2584, v264)
                                    let _v2622 = v2639 
                                    #endif
                                    let v2640 : Async<Async<bool>> = _v2622 
                                    let! v2640 = v2640 
                                    let v2645 : Async<bool> = v2640 
                                    let v2646 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2647 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v2646 = v2647 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2650 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v2646 = v2650 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2653 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v2646 = v2653 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2656 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v2646 = v2656 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2659 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v2646 = v2659 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2662 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v2663 : Async<Choice<bool, exn>> = v2662 v2645
                                    let _v2646 = v2663 
                                    #endif
#else
                                    let v2664 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v2665 : Async<Choice<bool, exn>> = v2664 v2645
                                    let _v2646 = v2665 
                                    #endif
                                    let v2666 : Async<Choice<bool, exn>> = _v2646 
                                    let v2671 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2672 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v2671 = v2672 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2675 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v2671 = v2675 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2678 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v2671 = v2678 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2681 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v2671 = v2681 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2684 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v2671 = v2684 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2687 : unit = ()
                                    let _v2687 =
                                        async {
                                            let! v2666 = v2666 
                                            let v2688 : Choice<bool, exn> = v2666 
                                            let v2689 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v2690 : US7 = null |> unbox<US7>
                                            let _v2689 = v2690 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v2693 : US7 = null |> unbox<US7>
                                            let _v2689 = v2693 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v2696 : US7 = null |> unbox<US7>
                                            let _v2689 = v2696 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v2699 : US7 = null |> unbox<US7>
                                            let _v2689 = v2699 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v2702 : US7 = null |> unbox<US7>
                                            let _v2689 = v2702 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v2705 : (bool -> US7) = method19()
                                            let v2706 : (exn -> US7) = method20()
                                            let v2707 : US7 = match v2688 with Choice1Of2 x -> v2705 x | Choice2Of2 x -> v2706 x
                                            let _v2689 = v2707 
                                            #endif
#else
                                            let v2708 : (bool -> US7) = method19()
                                            let v2709 : (exn -> US7) = method20()
                                            let v2710 : US7 = match v2688 with Choice1Of2 x -> v2708 x | Choice2Of2 x -> v2709 x
                                            let _v2689 = v2710 
                                            #endif
                                            let v2711 : US7 = _v2689 
                                            return v2711 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2716 : Async<US7> = _v2687 
                                    let _v2671 = v2716 
                                    #endif
#else
                                    let v2717 : unit = ()
                                    let _v2717 =
                                        async {
                                            let! v2666 = v2666 
                                            let v2718 : Choice<bool, exn> = v2666 
                                            let v2719 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v2720 : US7 = null |> unbox<US7>
                                            let _v2719 = v2720 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v2723 : US7 = null |> unbox<US7>
                                            let _v2719 = v2723 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v2726 : US7 = null |> unbox<US7>
                                            let _v2719 = v2726 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v2729 : US7 = null |> unbox<US7>
                                            let _v2719 = v2729 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v2732 : US7 = null |> unbox<US7>
                                            let _v2719 = v2732 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v2735 : (bool -> US7) = method19()
                                            let v2736 : (exn -> US7) = method20()
                                            let v2737 : US7 = match v2718 with Choice1Of2 x -> v2735 x | Choice2Of2 x -> v2736 x
                                            let _v2719 = v2737 
                                            #endif
#else
                                            let v2738 : (bool -> US7) = method19()
                                            let v2739 : (exn -> US7) = method20()
                                            let v2740 : US7 = match v2718 with Choice1Of2 x -> v2738 x | Choice2Of2 x -> v2739 x
                                            let _v2719 = v2740 
                                            #endif
                                            let v2741 : US7 = _v2719 
                                            return v2741 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2746 : Async<US7> = _v2717 
                                    let _v2671 = v2746 
                                    #endif
                                    let v2747 : Async<US7> = _v2671 
                                    let v2752 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2753 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2752 = v2753 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2756 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2752 = v2756 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2759 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2752 = v2759 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2762 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2752 = v2762 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2765 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v2752 = v2765 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2768 : unit = ()
                                    let _v2768 =
                                        async {
                                            let! v2747 = v2747 
                                            let v2769 : US7 = v2747 
                                            let v2775 : US8 =
                                                match v2769 with
                                                | US7_0(v2770) -> (* C1of2 *)
                                                    US8_0(v2770)
                                                | US7_1(v2772) -> (* C2of2 *)
                                                    US8_1(v2772)
                                            return v2775 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2776 : Async<US8> = _v2768 
                                    let _v2752 = v2776 
                                    #endif
#else
                                    let v2777 : unit = ()
                                    let _v2777 =
                                        async {
                                            let! v2747 = v2747 
                                            let v2778 : US7 = v2747 
                                            let v2784 : US8 =
                                                match v2778 with
                                                | US7_0(v2779) -> (* C1of2 *)
                                                    US8_0(v2779)
                                                | US7_1(v2781) -> (* C2of2 *)
                                                    US8_1(v2781)
                                            return v2784 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2785 : Async<US8> = _v2777 
                                    let _v2752 = v2785 
                                    #endif
                                    let v2786 : Async<US8> = _v2752 
                                    let v2791 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v2792 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2791 = v2792 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v2795 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2791 = v2795 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v2798 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2791 = v2798 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v2801 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2791 = v2801 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v2804 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v2791 = v2804 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v2807 : unit = ()
                                    let _v2807 =
                                        async {
                                            let! v2786 = v2786 
                                            let v2808 : US8 = v2786 
                                            let v2932 : US6 =
                                                match v2808 with
                                                | US8_1(v2811) -> (* Error *)
                                                    let v2812 : string = $"%A{v2811}"
                                                    let v2815 : string = "System.TimeoutException"
                                                    let v2816 : bool = v2812.Contains v2815 
                                                    if v2816 then
                                                        let v2819 : unit = ()
                                                        let v2820 : (unit -> unit) = closure16(v264)
                                                        let v2821 : unit = (fun () -> v2820 (); v2819) ()
                                                        US6_1
                                                    else
                                                        let v2862 : unit = ()
                                                        let v2863 : (unit -> unit) = closure17(v264, v2811)
                                                        let v2864 : unit = (fun () -> v2863 (); v2862) ()
                                                        US6_1
                                                | US8_0(v2809) -> (* Ok *)
                                                    US6_0(v2809)
                                            return v2932 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v2933 : Async<US6> = _v2807 
                                    let _v2791 = v2933 
                                    #endif
#else
                                    let v2934 : unit = ()
                                    let _v2934 =
                                        async {
                                            let! v2786 = v2786 
                                            let v2935 : US8 = v2786 
                                            let v3059 : US6 =
                                                match v2935 with
                                                | US8_1(v2938) -> (* Error *)
                                                    let v2939 : string = $"%A{v2938}"
                                                    let v2942 : string = "System.TimeoutException"
                                                    let v2943 : bool = v2939.Contains v2942 
                                                    if v2943 then
                                                        let v2946 : unit = ()
                                                        let v2947 : (unit -> unit) = closure16(v264)
                                                        let v2948 : unit = (fun () -> v2947 (); v2946) ()
                                                        US6_1
                                                    else
                                                        let v2989 : unit = ()
                                                        let v2990 : (unit -> unit) = closure17(v264, v2938)
                                                        let v2991 : unit = (fun () -> v2990 (); v2989) ()
                                                        US6_1
                                                | US8_0(v2936) -> (* Ok *)
                                                    US6_0(v2936)
                                            return v3059 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3060 : Async<US6> = _v2934 
                                    let _v2791 = v3060 
                                    #endif
                                    let v3061 : Async<US6> = _v2791 
                                    return! v3061 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v3066 : Async<US6> = _v2621 
                            let _v2605 = v3066 
                            #endif
#else
                            let v3067 : unit = ()
                            let _v3067 =
                                async {
                                    let v3068 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3069 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3068 = v3069 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3072 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3068 = v3072 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3075 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3068 = v3075 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3078 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3068 = v3078 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3081 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3068 = v3081 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3084 : Async<Async<bool>> = Async.StartChild (v2584, v264)
                                    let _v3068 = v3084 
                                    #endif
#else
                                    let v3085 : Async<Async<bool>> = Async.StartChild (v2584, v264)
                                    let _v3068 = v3085 
                                    #endif
                                    let v3086 : Async<Async<bool>> = _v3068 
                                    let! v3086 = v3086 
                                    let v3091 : Async<bool> = v3086 
                                    let v3092 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3093 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3092 = v3093 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3096 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3092 = v3096 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3099 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3092 = v3099 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3102 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3092 = v3102 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3105 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3092 = v3105 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3108 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v3109 : Async<Choice<bool, exn>> = v3108 v3091
                                    let _v3092 = v3109 
                                    #endif
#else
                                    let v3110 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v3111 : Async<Choice<bool, exn>> = v3110 v3091
                                    let _v3092 = v3111 
                                    #endif
                                    let v3112 : Async<Choice<bool, exn>> = _v3092 
                                    let v3117 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3118 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3117 = v3118 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3121 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3117 = v3121 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3124 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3117 = v3124 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3127 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3117 = v3127 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3130 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3117 = v3130 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3133 : unit = ()
                                    let _v3133 =
                                        async {
                                            let! v3112 = v3112 
                                            let v3134 : Choice<bool, exn> = v3112 
                                            let v3135 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v3136 : US7 = null |> unbox<US7>
                                            let _v3135 = v3136 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v3139 : US7 = null |> unbox<US7>
                                            let _v3135 = v3139 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v3142 : US7 = null |> unbox<US7>
                                            let _v3135 = v3142 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v3145 : US7 = null |> unbox<US7>
                                            let _v3135 = v3145 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v3148 : US7 = null |> unbox<US7>
                                            let _v3135 = v3148 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v3151 : (bool -> US7) = method19()
                                            let v3152 : (exn -> US7) = method20()
                                            let v3153 : US7 = match v3134 with Choice1Of2 x -> v3151 x | Choice2Of2 x -> v3152 x
                                            let _v3135 = v3153 
                                            #endif
#else
                                            let v3154 : (bool -> US7) = method19()
                                            let v3155 : (exn -> US7) = method20()
                                            let v3156 : US7 = match v3134 with Choice1Of2 x -> v3154 x | Choice2Of2 x -> v3155 x
                                            let _v3135 = v3156 
                                            #endif
                                            let v3157 : US7 = _v3135 
                                            return v3157 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3162 : Async<US7> = _v3133 
                                    let _v3117 = v3162 
                                    #endif
#else
                                    let v3163 : unit = ()
                                    let _v3163 =
                                        async {
                                            let! v3112 = v3112 
                                            let v3164 : Choice<bool, exn> = v3112 
                                            let v3165 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v3166 : US7 = null |> unbox<US7>
                                            let _v3165 = v3166 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v3169 : US7 = null |> unbox<US7>
                                            let _v3165 = v3169 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v3172 : US7 = null |> unbox<US7>
                                            let _v3165 = v3172 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v3175 : US7 = null |> unbox<US7>
                                            let _v3165 = v3175 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v3178 : US7 = null |> unbox<US7>
                                            let _v3165 = v3178 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v3181 : (bool -> US7) = method19()
                                            let v3182 : (exn -> US7) = method20()
                                            let v3183 : US7 = match v3164 with Choice1Of2 x -> v3181 x | Choice2Of2 x -> v3182 x
                                            let _v3165 = v3183 
                                            #endif
#else
                                            let v3184 : (bool -> US7) = method19()
                                            let v3185 : (exn -> US7) = method20()
                                            let v3186 : US7 = match v3164 with Choice1Of2 x -> v3184 x | Choice2Of2 x -> v3185 x
                                            let _v3165 = v3186 
                                            #endif
                                            let v3187 : US7 = _v3165 
                                            return v3187 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3192 : Async<US7> = _v3163 
                                    let _v3117 = v3192 
                                    #endif
                                    let v3193 : Async<US7> = _v3117 
                                    let v3198 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3199 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3198 = v3199 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3202 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3198 = v3202 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3205 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3198 = v3205 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3208 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3198 = v3208 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3211 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3198 = v3211 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3214 : unit = ()
                                    let _v3214 =
                                        async {
                                            let! v3193 = v3193 
                                            let v3215 : US7 = v3193 
                                            let v3221 : US8 =
                                                match v3215 with
                                                | US7_0(v3216) -> (* C1of2 *)
                                                    US8_0(v3216)
                                                | US7_1(v3218) -> (* C2of2 *)
                                                    US8_1(v3218)
                                            return v3221 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3222 : Async<US8> = _v3214 
                                    let _v3198 = v3222 
                                    #endif
#else
                                    let v3223 : unit = ()
                                    let _v3223 =
                                        async {
                                            let! v3193 = v3193 
                                            let v3224 : US7 = v3193 
                                            let v3230 : US8 =
                                                match v3224 with
                                                | US7_0(v3225) -> (* C1of2 *)
                                                    US8_0(v3225)
                                                | US7_1(v3227) -> (* C2of2 *)
                                                    US8_1(v3227)
                                            return v3230 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3231 : Async<US8> = _v3223 
                                    let _v3198 = v3231 
                                    #endif
                                    let v3232 : Async<US8> = _v3198 
                                    let v3237 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3238 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3237 = v3238 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3241 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3237 = v3241 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3244 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3237 = v3244 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3247 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3237 = v3247 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3250 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3237 = v3250 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3253 : unit = ()
                                    let _v3253 =
                                        async {
                                            let! v3232 = v3232 
                                            let v3254 : US8 = v3232 
                                            let v3378 : US6 =
                                                match v3254 with
                                                | US8_1(v3257) -> (* Error *)
                                                    let v3258 : string = $"%A{v3257}"
                                                    let v3261 : string = "System.TimeoutException"
                                                    let v3262 : bool = v3258.Contains v3261 
                                                    if v3262 then
                                                        let v3265 : unit = ()
                                                        let v3266 : (unit -> unit) = closure16(v264)
                                                        let v3267 : unit = (fun () -> v3266 (); v3265) ()
                                                        US6_1
                                                    else
                                                        let v3308 : unit = ()
                                                        let v3309 : (unit -> unit) = closure17(v264, v3257)
                                                        let v3310 : unit = (fun () -> v3309 (); v3308) ()
                                                        US6_1
                                                | US8_0(v3255) -> (* Ok *)
                                                    US6_0(v3255)
                                            return v3378 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3379 : Async<US6> = _v3253 
                                    let _v3237 = v3379 
                                    #endif
#else
                                    let v3380 : unit = ()
                                    let _v3380 =
                                        async {
                                            let! v3232 = v3232 
                                            let v3381 : US8 = v3232 
                                            let v3505 : US6 =
                                                match v3381 with
                                                | US8_1(v3384) -> (* Error *)
                                                    let v3385 : string = $"%A{v3384}"
                                                    let v3388 : string = "System.TimeoutException"
                                                    let v3389 : bool = v3385.Contains v3388 
                                                    if v3389 then
                                                        let v3392 : unit = ()
                                                        let v3393 : (unit -> unit) = closure16(v264)
                                                        let v3394 : unit = (fun () -> v3393 (); v3392) ()
                                                        US6_1
                                                    else
                                                        let v3435 : unit = ()
                                                        let v3436 : (unit -> unit) = closure17(v264, v3384)
                                                        let v3437 : unit = (fun () -> v3436 (); v3435) ()
                                                        US6_1
                                                | US8_0(v3382) -> (* Ok *)
                                                    US6_0(v3382)
                                            return v3505 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3506 : Async<US6> = _v3380 
                                    let _v3237 = v3506 
                                    #endif
                                    let v3507 : Async<US6> = _v3237 
                                    return! v3507 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v3512 : Async<US6> = _v3067 
                            let _v2605 = v3512 
                            #endif
                            let v3513 : Async<US6> = _v2605 
                            let _v2589 = v3513 
                            #endif
#else
                            let v3518 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v3519 : Async<US6> = null |> unbox<Async<US6>>
                            let _v3518 = v3519 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v3522 : Async<US6> = null |> unbox<Async<US6>>
                            let _v3518 = v3522 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v3525 : Async<US6> = null |> unbox<Async<US6>>
                            let _v3518 = v3525 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v3528 : Async<US6> = null |> unbox<Async<US6>>
                            let _v3518 = v3528 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v3531 : Async<US6> = null |> unbox<Async<US6>>
                            let _v3518 = v3531 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v3534 : unit = ()
                            let _v3534 =
                                async {
                                    let v3535 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3536 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3535 = v3536 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3539 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3535 = v3539 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3542 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3535 = v3542 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3545 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3535 = v3545 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3548 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3535 = v3548 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3551 : Async<Async<bool>> = Async.StartChild (v2584, v264)
                                    let _v3535 = v3551 
                                    #endif
#else
                                    let v3552 : Async<Async<bool>> = Async.StartChild (v2584, v264)
                                    let _v3535 = v3552 
                                    #endif
                                    let v3553 : Async<Async<bool>> = _v3535 
                                    let! v3553 = v3553 
                                    let v3558 : Async<bool> = v3553 
                                    let v3559 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3560 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3559 = v3560 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3563 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3559 = v3563 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3566 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3559 = v3566 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3569 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3559 = v3569 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3572 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v3559 = v3572 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3575 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v3576 : Async<Choice<bool, exn>> = v3575 v3558
                                    let _v3559 = v3576 
                                    #endif
#else
                                    let v3577 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v3578 : Async<Choice<bool, exn>> = v3577 v3558
                                    let _v3559 = v3578 
                                    #endif
                                    let v3579 : Async<Choice<bool, exn>> = _v3559 
                                    let v3584 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3585 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3584 = v3585 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3588 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3584 = v3588 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3591 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3584 = v3591 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3594 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3584 = v3594 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3597 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v3584 = v3597 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3600 : unit = ()
                                    let _v3600 =
                                        async {
                                            let! v3579 = v3579 
                                            let v3601 : Choice<bool, exn> = v3579 
                                            let v3602 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v3603 : US7 = null |> unbox<US7>
                                            let _v3602 = v3603 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v3606 : US7 = null |> unbox<US7>
                                            let _v3602 = v3606 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v3609 : US7 = null |> unbox<US7>
                                            let _v3602 = v3609 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v3612 : US7 = null |> unbox<US7>
                                            let _v3602 = v3612 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v3615 : US7 = null |> unbox<US7>
                                            let _v3602 = v3615 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v3618 : (bool -> US7) = method19()
                                            let v3619 : (exn -> US7) = method20()
                                            let v3620 : US7 = match v3601 with Choice1Of2 x -> v3618 x | Choice2Of2 x -> v3619 x
                                            let _v3602 = v3620 
                                            #endif
#else
                                            let v3621 : (bool -> US7) = method19()
                                            let v3622 : (exn -> US7) = method20()
                                            let v3623 : US7 = match v3601 with Choice1Of2 x -> v3621 x | Choice2Of2 x -> v3622 x
                                            let _v3602 = v3623 
                                            #endif
                                            let v3624 : US7 = _v3602 
                                            return v3624 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3629 : Async<US7> = _v3600 
                                    let _v3584 = v3629 
                                    #endif
#else
                                    let v3630 : unit = ()
                                    let _v3630 =
                                        async {
                                            let! v3579 = v3579 
                                            let v3631 : Choice<bool, exn> = v3579 
                                            let v3632 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v3633 : US7 = null |> unbox<US7>
                                            let _v3632 = v3633 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v3636 : US7 = null |> unbox<US7>
                                            let _v3632 = v3636 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v3639 : US7 = null |> unbox<US7>
                                            let _v3632 = v3639 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v3642 : US7 = null |> unbox<US7>
                                            let _v3632 = v3642 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v3645 : US7 = null |> unbox<US7>
                                            let _v3632 = v3645 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v3648 : (bool -> US7) = method19()
                                            let v3649 : (exn -> US7) = method20()
                                            let v3650 : US7 = match v3631 with Choice1Of2 x -> v3648 x | Choice2Of2 x -> v3649 x
                                            let _v3632 = v3650 
                                            #endif
#else
                                            let v3651 : (bool -> US7) = method19()
                                            let v3652 : (exn -> US7) = method20()
                                            let v3653 : US7 = match v3631 with Choice1Of2 x -> v3651 x | Choice2Of2 x -> v3652 x
                                            let _v3632 = v3653 
                                            #endif
                                            let v3654 : US7 = _v3632 
                                            return v3654 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3659 : Async<US7> = _v3630 
                                    let _v3584 = v3659 
                                    #endif
                                    let v3660 : Async<US7> = _v3584 
                                    let v3665 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3666 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3665 = v3666 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3669 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3665 = v3669 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3672 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3665 = v3672 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3675 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3665 = v3675 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3678 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v3665 = v3678 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3681 : unit = ()
                                    let _v3681 =
                                        async {
                                            let! v3660 = v3660 
                                            let v3682 : US7 = v3660 
                                            let v3688 : US8 =
                                                match v3682 with
                                                | US7_0(v3683) -> (* C1of2 *)
                                                    US8_0(v3683)
                                                | US7_1(v3685) -> (* C2of2 *)
                                                    US8_1(v3685)
                                            return v3688 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3689 : Async<US8> = _v3681 
                                    let _v3665 = v3689 
                                    #endif
#else
                                    let v3690 : unit = ()
                                    let _v3690 =
                                        async {
                                            let! v3660 = v3660 
                                            let v3691 : US7 = v3660 
                                            let v3697 : US8 =
                                                match v3691 with
                                                | US7_0(v3692) -> (* C1of2 *)
                                                    US8_0(v3692)
                                                | US7_1(v3694) -> (* C2of2 *)
                                                    US8_1(v3694)
                                            return v3697 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3698 : Async<US8> = _v3690 
                                    let _v3665 = v3698 
                                    #endif
                                    let v3699 : Async<US8> = _v3665 
                                    let v3704 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3705 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3704 = v3705 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3708 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3704 = v3708 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3711 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3704 = v3711 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3714 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3704 = v3714 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3717 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v3704 = v3717 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3720 : unit = ()
                                    let _v3720 =
                                        async {
                                            let! v3699 = v3699 
                                            let v3721 : US8 = v3699 
                                            let v3845 : US6 =
                                                match v3721 with
                                                | US8_1(v3724) -> (* Error *)
                                                    let v3725 : string = $"%A{v3724}"
                                                    let v3728 : string = "System.TimeoutException"
                                                    let v3729 : bool = v3725.Contains v3728 
                                                    if v3729 then
                                                        let v3732 : unit = ()
                                                        let v3733 : (unit -> unit) = closure16(v264)
                                                        let v3734 : unit = (fun () -> v3733 (); v3732) ()
                                                        US6_1
                                                    else
                                                        let v3775 : unit = ()
                                                        let v3776 : (unit -> unit) = closure17(v264, v3724)
                                                        let v3777 : unit = (fun () -> v3776 (); v3775) ()
                                                        US6_1
                                                | US8_0(v3722) -> (* Ok *)
                                                    US6_0(v3722)
                                            return v3845 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3846 : Async<US6> = _v3720 
                                    let _v3704 = v3846 
                                    #endif
#else
                                    let v3847 : unit = ()
                                    let _v3847 =
                                        async {
                                            let! v3699 = v3699 
                                            let v3848 : US8 = v3699 
                                            let v3972 : US6 =
                                                match v3848 with
                                                | US8_1(v3851) -> (* Error *)
                                                    let v3852 : string = $"%A{v3851}"
                                                    let v3855 : string = "System.TimeoutException"
                                                    let v3856 : bool = v3852.Contains v3855 
                                                    if v3856 then
                                                        let v3859 : unit = ()
                                                        let v3860 : (unit -> unit) = closure16(v264)
                                                        let v3861 : unit = (fun () -> v3860 (); v3859) ()
                                                        US6_1
                                                    else
                                                        let v3902 : unit = ()
                                                        let v3903 : (unit -> unit) = closure17(v264, v3851)
                                                        let v3904 : unit = (fun () -> v3903 (); v3902) ()
                                                        US6_1
                                                | US8_0(v3849) -> (* Ok *)
                                                    US6_0(v3849)
                                            return v3972 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v3973 : Async<US6> = _v3847 
                                    let _v3704 = v3973 
                                    #endif
                                    let v3974 : Async<US6> = _v3704 
                                    return! v3974 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v3979 : Async<US6> = _v3534 
                            let _v3518 = v3979 
                            #endif
#else
                            let v3980 : unit = ()
                            let _v3980 =
                                async {
                                    let v3981 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v3982 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3981 = v3982 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v3985 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3981 = v3985 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v3988 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3981 = v3988 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v3991 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3981 = v3991 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v3994 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v3981 = v3994 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v3997 : Async<Async<bool>> = Async.StartChild (v2584, v264)
                                    let _v3981 = v3997 
                                    #endif
#else
                                    let v3998 : Async<Async<bool>> = Async.StartChild (v2584, v264)
                                    let _v3981 = v3998 
                                    #endif
                                    let v3999 : Async<Async<bool>> = _v3981 
                                    let! v3999 = v3999 
                                    let v4004 : Async<bool> = v3999 
                                    let v4005 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4006 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v4005 = v4006 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4009 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v4005 = v4009 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4012 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v4005 = v4012 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4015 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v4005 = v4015 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4018 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v4005 = v4018 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4021 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v4022 : Async<Choice<bool, exn>> = v4021 v4004
                                    let _v4005 = v4022 
                                    #endif
#else
                                    let v4023 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v4024 : Async<Choice<bool, exn>> = v4023 v4004
                                    let _v4005 = v4024 
                                    #endif
                                    let v4025 : Async<Choice<bool, exn>> = _v4005 
                                    let v4030 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4031 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v4030 = v4031 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4034 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v4030 = v4034 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4037 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v4030 = v4037 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4040 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v4030 = v4040 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4043 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v4030 = v4043 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4046 : unit = ()
                                    let _v4046 =
                                        async {
                                            let! v4025 = v4025 
                                            let v4047 : Choice<bool, exn> = v4025 
                                            let v4048 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v4049 : US7 = null |> unbox<US7>
                                            let _v4048 = v4049 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v4052 : US7 = null |> unbox<US7>
                                            let _v4048 = v4052 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v4055 : US7 = null |> unbox<US7>
                                            let _v4048 = v4055 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v4058 : US7 = null |> unbox<US7>
                                            let _v4048 = v4058 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v4061 : US7 = null |> unbox<US7>
                                            let _v4048 = v4061 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v4064 : (bool -> US7) = method19()
                                            let v4065 : (exn -> US7) = method20()
                                            let v4066 : US7 = match v4047 with Choice1Of2 x -> v4064 x | Choice2Of2 x -> v4065 x
                                            let _v4048 = v4066 
                                            #endif
#else
                                            let v4067 : (bool -> US7) = method19()
                                            let v4068 : (exn -> US7) = method20()
                                            let v4069 : US7 = match v4047 with Choice1Of2 x -> v4067 x | Choice2Of2 x -> v4068 x
                                            let _v4048 = v4069 
                                            #endif
                                            let v4070 : US7 = _v4048 
                                            return v4070 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4075 : Async<US7> = _v4046 
                                    let _v4030 = v4075 
                                    #endif
#else
                                    let v4076 : unit = ()
                                    let _v4076 =
                                        async {
                                            let! v4025 = v4025 
                                            let v4077 : Choice<bool, exn> = v4025 
                                            let v4078 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v4079 : US7 = null |> unbox<US7>
                                            let _v4078 = v4079 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v4082 : US7 = null |> unbox<US7>
                                            let _v4078 = v4082 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v4085 : US7 = null |> unbox<US7>
                                            let _v4078 = v4085 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v4088 : US7 = null |> unbox<US7>
                                            let _v4078 = v4088 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v4091 : US7 = null |> unbox<US7>
                                            let _v4078 = v4091 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v4094 : (bool -> US7) = method19()
                                            let v4095 : (exn -> US7) = method20()
                                            let v4096 : US7 = match v4077 with Choice1Of2 x -> v4094 x | Choice2Of2 x -> v4095 x
                                            let _v4078 = v4096 
                                            #endif
#else
                                            let v4097 : (bool -> US7) = method19()
                                            let v4098 : (exn -> US7) = method20()
                                            let v4099 : US7 = match v4077 with Choice1Of2 x -> v4097 x | Choice2Of2 x -> v4098 x
                                            let _v4078 = v4099 
                                            #endif
                                            let v4100 : US7 = _v4078 
                                            return v4100 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4105 : Async<US7> = _v4076 
                                    let _v4030 = v4105 
                                    #endif
                                    let v4106 : Async<US7> = _v4030 
                                    let v4111 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4112 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v4111 = v4112 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4115 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v4111 = v4115 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4118 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v4111 = v4118 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4121 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v4111 = v4121 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4124 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v4111 = v4124 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4127 : unit = ()
                                    let _v4127 =
                                        async {
                                            let! v4106 = v4106 
                                            let v4128 : US7 = v4106 
                                            let v4134 : US8 =
                                                match v4128 with
                                                | US7_0(v4129) -> (* C1of2 *)
                                                    US8_0(v4129)
                                                | US7_1(v4131) -> (* C2of2 *)
                                                    US8_1(v4131)
                                            return v4134 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4135 : Async<US8> = _v4127 
                                    let _v4111 = v4135 
                                    #endif
#else
                                    let v4136 : unit = ()
                                    let _v4136 =
                                        async {
                                            let! v4106 = v4106 
                                            let v4137 : US7 = v4106 
                                            let v4143 : US8 =
                                                match v4137 with
                                                | US7_0(v4138) -> (* C1of2 *)
                                                    US8_0(v4138)
                                                | US7_1(v4140) -> (* C2of2 *)
                                                    US8_1(v4140)
                                            return v4143 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4144 : Async<US8> = _v4136 
                                    let _v4111 = v4144 
                                    #endif
                                    let v4145 : Async<US8> = _v4111 
                                    let v4150 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4151 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v4150 = v4151 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4154 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v4150 = v4154 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4157 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v4150 = v4157 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4160 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v4150 = v4160 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4163 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v4150 = v4163 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4166 : unit = ()
                                    let _v4166 =
                                        async {
                                            let! v4145 = v4145 
                                            let v4167 : US8 = v4145 
                                            let v4291 : US6 =
                                                match v4167 with
                                                | US8_1(v4170) -> (* Error *)
                                                    let v4171 : string = $"%A{v4170}"
                                                    let v4174 : string = "System.TimeoutException"
                                                    let v4175 : bool = v4171.Contains v4174 
                                                    if v4175 then
                                                        let v4178 : unit = ()
                                                        let v4179 : (unit -> unit) = closure16(v264)
                                                        let v4180 : unit = (fun () -> v4179 (); v4178) ()
                                                        US6_1
                                                    else
                                                        let v4221 : unit = ()
                                                        let v4222 : (unit -> unit) = closure17(v264, v4170)
                                                        let v4223 : unit = (fun () -> v4222 (); v4221) ()
                                                        US6_1
                                                | US8_0(v4168) -> (* Ok *)
                                                    US6_0(v4168)
                                            return v4291 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4292 : Async<US6> = _v4166 
                                    let _v4150 = v4292 
                                    #endif
#else
                                    let v4293 : unit = ()
                                    let _v4293 =
                                        async {
                                            let! v4145 = v4145 
                                            let v4294 : US8 = v4145 
                                            let v4418 : US6 =
                                                match v4294 with
                                                | US8_1(v4297) -> (* Error *)
                                                    let v4298 : string = $"%A{v4297}"
                                                    let v4301 : string = "System.TimeoutException"
                                                    let v4302 : bool = v4298.Contains v4301 
                                                    if v4302 then
                                                        let v4305 : unit = ()
                                                        let v4306 : (unit -> unit) = closure16(v264)
                                                        let v4307 : unit = (fun () -> v4306 (); v4305) ()
                                                        US6_1
                                                    else
                                                        let v4348 : unit = ()
                                                        let v4349 : (unit -> unit) = closure17(v264, v4297)
                                                        let v4350 : unit = (fun () -> v4349 (); v4348) ()
                                                        US6_1
                                                | US8_0(v4295) -> (* Ok *)
                                                    US6_0(v4295)
                                            return v4418 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v4419 : Async<US6> = _v4293 
                                    let _v4150 = v4419 
                                    #endif
                                    let v4420 : Async<US6> = _v4150 
                                    return! v4420 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v4425 : Async<US6> = _v3980 
                            let _v3518 = v4425 
                            #endif
                            let v4426 : Async<US6> = _v3518 
                            let _v2589 = v4426 
                            #endif
                            let v4431 : Async<US6> = _v2589 
                            let! v4431 = v4431 
                            let v4436 : US6 = v4431 
                            let v4439 : bool =
                                match v4436 with
                                | US6_1 -> (* None *)
                                    false
                                | US6_0(v4437) -> (* Some *)
                                    v4437
                            return v4439 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v4440 : Async<bool> = _v2361 
                    let _v265 = v4440 
                    #endif
                    let v4441 : Async<bool> = _v265 
                    v4441
            let! v4447 = v4447 
            let v4448 : bool = v4447 
            let v4449 : bool = v4448 = false
            if v4449 then
                return v2 
                (*
                ()
            else
                *) else
                let v4450 : int32 = v2 + 1
                let v4451 : Async<int32> = method30(v0, v1, v4450)
                return! v4451 
                (*
                ()
            *)
            (*
            ()
        *)
        }
        (*
        ()
    *)
    let v4452 : Async<int32> = _v19 
    let _v3 = v4452 
    #endif
#else
    let v4453 : unit = ()
    let _v4453 =
        async {
            let v4454 : (int32 -> US9) = method27()
            let v4455 : US9 option = v0 |> Option.map v4454 
            let v4466 : US9 = US9_1
            let v4467 : US9 = v4455 |> Option.defaultValue v4466 
            let v8881 : Async<bool> =
                match v4467 with
                | US9_1 -> (* None *)
                    let v4471 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4472 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4471 = v4472 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4475 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4471 = v4475 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4478 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4471 = v4478 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4481 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4471 = v4481 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4484 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4471 = v4484 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4487 : unit = ()
                    let _v4487 =
                        async {
                            let v4488 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                            let! v4488 = v4488 
                            let v4489 : System.Threading.CancellationToken = v4488 
                            let v4490 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                            use v4490 = v4490 
                            let v4491 : System.Net.Sockets.TcpClient = v4490 
                            try
                            let v4492 : System.Threading.Tasks.ValueTask = v4491.ConnectAsync (v1, v2, v4489)
                            let v4493 : (unit -> System.Threading.Tasks.Task) = v4492.AsTask
                            let v4494 : System.Threading.Tasks.Task = v4493 ()
                            let v4495 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v4496 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4495 = v4496 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v4499 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4495 = v4499 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v4502 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4495 = v4502 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v4505 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4495 = v4505 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v4508 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4495 = v4508 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v4511 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v4512 : Async<unit> = v4511 v4494
                            let _v4495 = v4512 
                            #endif
#else
                            let v4513 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v4514 : Async<unit> = v4513 v4494
                            let _v4495 = v4514 
                            #endif
                            let v4515 : Async<unit> = _v4495 
                            do! v4515 
                            return true 
                            with ex ->
                                let v4520 : exn = ex
                                let v4521 : unit = ()
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v4522 : string = $"%A{v4520}"
                                let _v4521 = v4522 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v4525 : string = $"%A{v4520}"
                                let _v4521 = v4525 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v4528 : string = $"%A{v4520}"
                                let _v4521 = v4528 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v4531 : string = $"%A{v4520}"
                                let _v4521 = v4531 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v4534 : string = $"%A{v4520}"
                                let _v4521 = v4534 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v4537 : string = $"%A{v4520}"
                                let _v4521 = v4537 
                                #endif
#else
                                let v4540 : string = $"{v4520.GetType ()}: {v4520.Message}"
                                let _v4521 = v4540 
                                #endif
                                let v4541 : string = _v4521 
                                let v4546 : unit = ()
                                let v4547 : (unit -> unit) = closure5(v2, v4541)
                                let v4548 : unit = (fun () -> v4547 (); v4546) ()
                                return false 
                                (*
                                ()
                            *)
                            (*
                            let v4588 : bool = *)
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v4589 : Async<bool> = _v4487 
                    let _v4471 = v4589 
                    #endif
#else
                    let v4590 : unit = ()
                    let _v4590 =
                        async {
                            let v4591 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                            let! v4591 = v4591 
                            let v4592 : System.Threading.CancellationToken = v4591 
                            let v4593 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                            use v4593 = v4593 
                            let v4594 : System.Net.Sockets.TcpClient = v4593 
                            try
                            let v4595 : System.Threading.Tasks.ValueTask = v4594.ConnectAsync (v1, v2, v4592)
                            let v4596 : (unit -> System.Threading.Tasks.Task) = v4595.AsTask
                            let v4597 : System.Threading.Tasks.Task = v4596 ()
                            let v4598 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v4599 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4598 = v4599 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v4602 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4598 = v4602 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v4605 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4598 = v4605 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v4608 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4598 = v4608 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v4611 : Async<unit> = null |> unbox<Async<unit>>
                            let _v4598 = v4611 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v4614 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v4615 : Async<unit> = v4614 v4597
                            let _v4598 = v4615 
                            #endif
#else
                            let v4616 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                            let v4617 : Async<unit> = v4616 v4597
                            let _v4598 = v4617 
                            #endif
                            let v4618 : Async<unit> = _v4598 
                            do! v4618 
                            return true 
                            with ex ->
                                let v4623 : exn = ex
                                let v4624 : unit = ()
                                
#if FABLE_COMPILER || WASM || CONTRACT
                                
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                let v4625 : string = $"%A{v4623}"
                                let _v4624 = v4625 
                                #endif
#if FABLE_COMPILER_RUST && WASM
                                let v4628 : string = $"%A{v4623}"
                                let _v4624 = v4628 
                                #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                let v4631 : string = $"%A{v4623}"
                                let _v4624 = v4631 
                                #endif
#if FABLE_COMPILER_TYPESCRIPT
                                let v4634 : string = $"%A{v4623}"
                                let _v4624 = v4634 
                                #endif
#if FABLE_COMPILER_PYTHON
                                let v4637 : string = $"%A{v4623}"
                                let _v4624 = v4637 
                                #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                let v4640 : string = $"%A{v4623}"
                                let _v4624 = v4640 
                                #endif
#else
                                let v4643 : string = $"{v4623.GetType ()}: {v4623.Message}"
                                let _v4624 = v4643 
                                #endif
                                let v4644 : string = _v4624 
                                let v4649 : unit = ()
                                let v4650 : (unit -> unit) = closure5(v2, v4644)
                                let v4651 : unit = (fun () -> v4650 (); v4649) ()
                                return false 
                                (*
                                ()
                            *)
                            (*
                            let v4691 : bool = *)
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v4692 : Async<bool> = _v4590 
                    let _v4471 = v4692 
                    #endif
                    let v4693 : Async<bool> = _v4471 
                    v4693
                | US9_0(v4698) -> (* Some *)
                    let v4699 : unit = ()
                    
#if FABLE_COMPILER || WASM || CONTRACT
                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                    let v4700 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4699 = v4700 
                    #endif
#if FABLE_COMPILER_RUST && WASM
                    let v4703 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4699 = v4703 
                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                    let v4706 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4699 = v4706 
                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                    let v4709 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4699 = v4709 
                    #endif
#if FABLE_COMPILER_PYTHON
                    let v4712 : Async<bool> = null |> unbox<Async<bool>>
                    let _v4699 = v4712 
                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                    let v4715 : unit = ()
                    let _v4715 =
                        async {
                            let v4716 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v4717 : Async<bool> = null |> unbox<Async<bool>>
                            let _v4716 = v4717 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v4720 : Async<bool> = null |> unbox<Async<bool>>
                            let _v4716 = v4720 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v4723 : Async<bool> = null |> unbox<Async<bool>>
                            let _v4716 = v4723 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v4726 : Async<bool> = null |> unbox<Async<bool>>
                            let _v4716 = v4726 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v4729 : Async<bool> = null |> unbox<Async<bool>>
                            let _v4716 = v4729 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v4732 : unit = ()
                            let _v4732 =
                                async {
                                    let v4733 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v4733 = v4733 
                                    let v4734 : System.Threading.CancellationToken = v4733 
                                    let v4735 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v4735 = v4735 
                                    let v4736 : System.Net.Sockets.TcpClient = v4735 
                                    try
                                    let v4737 : System.Threading.Tasks.ValueTask = v4736.ConnectAsync (v1, v2, v4734)
                                    let v4738 : (unit -> System.Threading.Tasks.Task) = v4737.AsTask
                                    let v4739 : System.Threading.Tasks.Task = v4738 ()
                                    let v4740 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4741 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4740 = v4741 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4744 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4740 = v4744 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4747 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4740 = v4747 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4750 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4740 = v4750 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4753 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4740 = v4753 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4756 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v4757 : Async<unit> = v4756 v4739
                                    let _v4740 = v4757 
                                    #endif
#else
                                    let v4758 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v4759 : Async<unit> = v4758 v4739
                                    let _v4740 = v4759 
                                    #endif
                                    let v4760 : Async<unit> = _v4740 
                                    do! v4760 
                                    return true 
                                    with ex ->
                                        let v4765 : exn = ex
                                        let v4766 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v4767 : string = $"%A{v4765}"
                                        let _v4766 = v4767 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v4770 : string = $"%A{v4765}"
                                        let _v4766 = v4770 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v4773 : string = $"%A{v4765}"
                                        let _v4766 = v4773 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v4776 : string = $"%A{v4765}"
                                        let _v4766 = v4776 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v4779 : string = $"%A{v4765}"
                                        let _v4766 = v4779 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v4782 : string = $"%A{v4765}"
                                        let _v4766 = v4782 
                                        #endif
#else
                                        let v4785 : string = $"{v4765.GetType ()}: {v4765.Message}"
                                        let _v4766 = v4785 
                                        #endif
                                        let v4786 : string = _v4766 
                                        let v4791 : unit = ()
                                        let v4792 : (unit -> unit) = closure5(v2, v4786)
                                        let v4793 : unit = (fun () -> v4792 (); v4791) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v4833 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v4834 : Async<bool> = _v4732 
                            let _v4716 = v4834 
                            #endif
#else
                            let v4835 : unit = ()
                            let _v4835 =
                                async {
                                    let v4836 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v4836 = v4836 
                                    let v4837 : System.Threading.CancellationToken = v4836 
                                    let v4838 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v4838 = v4838 
                                    let v4839 : System.Net.Sockets.TcpClient = v4838 
                                    try
                                    let v4840 : System.Threading.Tasks.ValueTask = v4839.ConnectAsync (v1, v2, v4837)
                                    let v4841 : (unit -> System.Threading.Tasks.Task) = v4840.AsTask
                                    let v4842 : System.Threading.Tasks.Task = v4841 ()
                                    let v4843 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4844 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4843 = v4844 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4847 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4843 = v4847 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4850 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4843 = v4850 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4853 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4843 = v4853 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4856 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v4843 = v4856 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4859 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v4860 : Async<unit> = v4859 v4842
                                    let _v4843 = v4860 
                                    #endif
#else
                                    let v4861 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v4862 : Async<unit> = v4861 v4842
                                    let _v4843 = v4862 
                                    #endif
                                    let v4863 : Async<unit> = _v4843 
                                    do! v4863 
                                    return true 
                                    with ex ->
                                        let v4868 : exn = ex
                                        let v4869 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v4870 : string = $"%A{v4868}"
                                        let _v4869 = v4870 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v4873 : string = $"%A{v4868}"
                                        let _v4869 = v4873 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v4876 : string = $"%A{v4868}"
                                        let _v4869 = v4876 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v4879 : string = $"%A{v4868}"
                                        let _v4869 = v4879 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v4882 : string = $"%A{v4868}"
                                        let _v4869 = v4882 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v4885 : string = $"%A{v4868}"
                                        let _v4869 = v4885 
                                        #endif
#else
                                        let v4888 : string = $"{v4868.GetType ()}: {v4868.Message}"
                                        let _v4869 = v4888 
                                        #endif
                                        let v4889 : string = _v4869 
                                        let v4894 : unit = ()
                                        let v4895 : (unit -> unit) = closure5(v2, v4889)
                                        let v4896 : unit = (fun () -> v4895 (); v4894) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v4936 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v4937 : Async<bool> = _v4835 
                            let _v4716 = v4937 
                            #endif
                            let v4938 : Async<bool> = _v4716 
                            let v4943 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v4944 : Async<US6> = null |> unbox<Async<US6>>
                            let _v4943 = v4944 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v4947 : Async<US6> = null |> unbox<Async<US6>>
                            let _v4943 = v4947 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v4950 : Async<US6> = null |> unbox<Async<US6>>
                            let _v4943 = v4950 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v4953 : Async<US6> = null |> unbox<Async<US6>>
                            let _v4943 = v4953 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v4956 : Async<US6> = null |> unbox<Async<US6>>
                            let _v4943 = v4956 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v4959 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v4960 : Async<US6> = null |> unbox<Async<US6>>
                            let _v4959 = v4960 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v4963 : Async<US6> = null |> unbox<Async<US6>>
                            let _v4959 = v4963 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v4966 : Async<US6> = null |> unbox<Async<US6>>
                            let _v4959 = v4966 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v4969 : Async<US6> = null |> unbox<Async<US6>>
                            let _v4959 = v4969 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v4972 : Async<US6> = null |> unbox<Async<US6>>
                            let _v4959 = v4972 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v4975 : unit = ()
                            let _v4975 =
                                async {
                                    let v4976 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v4977 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v4976 = v4977 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v4980 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v4976 = v4980 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v4983 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v4976 = v4983 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v4986 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v4976 = v4986 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v4989 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v4976 = v4989 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v4992 : Async<Async<bool>> = Async.StartChild (v4938, v4698)
                                    let _v4976 = v4992 
                                    #endif
#else
                                    let v4993 : Async<Async<bool>> = Async.StartChild (v4938, v4698)
                                    let _v4976 = v4993 
                                    #endif
                                    let v4994 : Async<Async<bool>> = _v4976 
                                    let! v4994 = v4994 
                                    let v4999 : Async<bool> = v4994 
                                    let v5000 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5001 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5000 = v5001 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5004 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5000 = v5004 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5007 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5000 = v5007 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5010 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5000 = v5010 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5013 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5000 = v5013 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5016 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v5017 : Async<Choice<bool, exn>> = v5016 v4999
                                    let _v5000 = v5017 
                                    #endif
#else
                                    let v5018 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v5019 : Async<Choice<bool, exn>> = v5018 v4999
                                    let _v5000 = v5019 
                                    #endif
                                    let v5020 : Async<Choice<bool, exn>> = _v5000 
                                    let v5025 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5026 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5025 = v5026 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5029 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5025 = v5029 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5032 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5025 = v5032 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5035 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5025 = v5035 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5038 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5025 = v5038 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5041 : unit = ()
                                    let _v5041 =
                                        async {
                                            let! v5020 = v5020 
                                            let v5042 : Choice<bool, exn> = v5020 
                                            let v5043 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v5044 : US7 = null |> unbox<US7>
                                            let _v5043 = v5044 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v5047 : US7 = null |> unbox<US7>
                                            let _v5043 = v5047 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v5050 : US7 = null |> unbox<US7>
                                            let _v5043 = v5050 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v5053 : US7 = null |> unbox<US7>
                                            let _v5043 = v5053 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v5056 : US7 = null |> unbox<US7>
                                            let _v5043 = v5056 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v5059 : (bool -> US7) = method19()
                                            let v5060 : (exn -> US7) = method20()
                                            let v5061 : US7 = match v5042 with Choice1Of2 x -> v5059 x | Choice2Of2 x -> v5060 x
                                            let _v5043 = v5061 
                                            #endif
#else
                                            let v5062 : (bool -> US7) = method19()
                                            let v5063 : (exn -> US7) = method20()
                                            let v5064 : US7 = match v5042 with Choice1Of2 x -> v5062 x | Choice2Of2 x -> v5063 x
                                            let _v5043 = v5064 
                                            #endif
                                            let v5065 : US7 = _v5043 
                                            return v5065 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5070 : Async<US7> = _v5041 
                                    let _v5025 = v5070 
                                    #endif
#else
                                    let v5071 : unit = ()
                                    let _v5071 =
                                        async {
                                            let! v5020 = v5020 
                                            let v5072 : Choice<bool, exn> = v5020 
                                            let v5073 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v5074 : US7 = null |> unbox<US7>
                                            let _v5073 = v5074 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v5077 : US7 = null |> unbox<US7>
                                            let _v5073 = v5077 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v5080 : US7 = null |> unbox<US7>
                                            let _v5073 = v5080 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v5083 : US7 = null |> unbox<US7>
                                            let _v5073 = v5083 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v5086 : US7 = null |> unbox<US7>
                                            let _v5073 = v5086 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v5089 : (bool -> US7) = method19()
                                            let v5090 : (exn -> US7) = method20()
                                            let v5091 : US7 = match v5072 with Choice1Of2 x -> v5089 x | Choice2Of2 x -> v5090 x
                                            let _v5073 = v5091 
                                            #endif
#else
                                            let v5092 : (bool -> US7) = method19()
                                            let v5093 : (exn -> US7) = method20()
                                            let v5094 : US7 = match v5072 with Choice1Of2 x -> v5092 x | Choice2Of2 x -> v5093 x
                                            let _v5073 = v5094 
                                            #endif
                                            let v5095 : US7 = _v5073 
                                            return v5095 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5100 : Async<US7> = _v5071 
                                    let _v5025 = v5100 
                                    #endif
                                    let v5101 : Async<US7> = _v5025 
                                    let v5106 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5107 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5106 = v5107 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5110 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5106 = v5110 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5113 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5106 = v5113 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5116 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5106 = v5116 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5119 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5106 = v5119 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5122 : unit = ()
                                    let _v5122 =
                                        async {
                                            let! v5101 = v5101 
                                            let v5123 : US7 = v5101 
                                            let v5129 : US8 =
                                                match v5123 with
                                                | US7_0(v5124) -> (* C1of2 *)
                                                    US8_0(v5124)
                                                | US7_1(v5126) -> (* C2of2 *)
                                                    US8_1(v5126)
                                            return v5129 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5130 : Async<US8> = _v5122 
                                    let _v5106 = v5130 
                                    #endif
#else
                                    let v5131 : unit = ()
                                    let _v5131 =
                                        async {
                                            let! v5101 = v5101 
                                            let v5132 : US7 = v5101 
                                            let v5138 : US8 =
                                                match v5132 with
                                                | US7_0(v5133) -> (* C1of2 *)
                                                    US8_0(v5133)
                                                | US7_1(v5135) -> (* C2of2 *)
                                                    US8_1(v5135)
                                            return v5138 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5139 : Async<US8> = _v5131 
                                    let _v5106 = v5139 
                                    #endif
                                    let v5140 : Async<US8> = _v5106 
                                    let v5145 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5146 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5145 = v5146 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5149 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5145 = v5149 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5152 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5145 = v5152 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5155 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5145 = v5155 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5158 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5145 = v5158 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5161 : unit = ()
                                    let _v5161 =
                                        async {
                                            let! v5140 = v5140 
                                            let v5162 : US8 = v5140 
                                            let v5286 : US6 =
                                                match v5162 with
                                                | US8_1(v5165) -> (* Error *)
                                                    let v5166 : string = $"%A{v5165}"
                                                    let v5169 : string = "System.TimeoutException"
                                                    let v5170 : bool = v5166.Contains v5169 
                                                    if v5170 then
                                                        let v5173 : unit = ()
                                                        let v5174 : (unit -> unit) = closure16(v4698)
                                                        let v5175 : unit = (fun () -> v5174 (); v5173) ()
                                                        US6_1
                                                    else
                                                        let v5216 : unit = ()
                                                        let v5217 : (unit -> unit) = closure17(v4698, v5165)
                                                        let v5218 : unit = (fun () -> v5217 (); v5216) ()
                                                        US6_1
                                                | US8_0(v5163) -> (* Ok *)
                                                    US6_0(v5163)
                                            return v5286 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5287 : Async<US6> = _v5161 
                                    let _v5145 = v5287 
                                    #endif
#else
                                    let v5288 : unit = ()
                                    let _v5288 =
                                        async {
                                            let! v5140 = v5140 
                                            let v5289 : US8 = v5140 
                                            let v5413 : US6 =
                                                match v5289 with
                                                | US8_1(v5292) -> (* Error *)
                                                    let v5293 : string = $"%A{v5292}"
                                                    let v5296 : string = "System.TimeoutException"
                                                    let v5297 : bool = v5293.Contains v5296 
                                                    if v5297 then
                                                        let v5300 : unit = ()
                                                        let v5301 : (unit -> unit) = closure16(v4698)
                                                        let v5302 : unit = (fun () -> v5301 (); v5300) ()
                                                        US6_1
                                                    else
                                                        let v5343 : unit = ()
                                                        let v5344 : (unit -> unit) = closure17(v4698, v5292)
                                                        let v5345 : unit = (fun () -> v5344 (); v5343) ()
                                                        US6_1
                                                | US8_0(v5290) -> (* Ok *)
                                                    US6_0(v5290)
                                            return v5413 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5414 : Async<US6> = _v5288 
                                    let _v5145 = v5414 
                                    #endif
                                    let v5415 : Async<US6> = _v5145 
                                    return! v5415 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v5420 : Async<US6> = _v4975 
                            let _v4959 = v5420 
                            #endif
#else
                            let v5421 : unit = ()
                            let _v5421 =
                                async {
                                    let v5422 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5423 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5422 = v5423 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5426 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5422 = v5426 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5429 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5422 = v5429 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5432 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5422 = v5432 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5435 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5422 = v5435 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5438 : Async<Async<bool>> = Async.StartChild (v4938, v4698)
                                    let _v5422 = v5438 
                                    #endif
#else
                                    let v5439 : Async<Async<bool>> = Async.StartChild (v4938, v4698)
                                    let _v5422 = v5439 
                                    #endif
                                    let v5440 : Async<Async<bool>> = _v5422 
                                    let! v5440 = v5440 
                                    let v5445 : Async<bool> = v5440 
                                    let v5446 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5447 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5446 = v5447 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5450 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5446 = v5450 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5453 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5446 = v5453 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5456 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5446 = v5456 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5459 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5446 = v5459 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5462 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v5463 : Async<Choice<bool, exn>> = v5462 v5445
                                    let _v5446 = v5463 
                                    #endif
#else
                                    let v5464 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v5465 : Async<Choice<bool, exn>> = v5464 v5445
                                    let _v5446 = v5465 
                                    #endif
                                    let v5466 : Async<Choice<bool, exn>> = _v5446 
                                    let v5471 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5472 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5471 = v5472 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5475 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5471 = v5475 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5478 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5471 = v5478 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5481 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5471 = v5481 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5484 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5471 = v5484 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5487 : unit = ()
                                    let _v5487 =
                                        async {
                                            let! v5466 = v5466 
                                            let v5488 : Choice<bool, exn> = v5466 
                                            let v5489 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v5490 : US7 = null |> unbox<US7>
                                            let _v5489 = v5490 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v5493 : US7 = null |> unbox<US7>
                                            let _v5489 = v5493 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v5496 : US7 = null |> unbox<US7>
                                            let _v5489 = v5496 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v5499 : US7 = null |> unbox<US7>
                                            let _v5489 = v5499 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v5502 : US7 = null |> unbox<US7>
                                            let _v5489 = v5502 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v5505 : (bool -> US7) = method19()
                                            let v5506 : (exn -> US7) = method20()
                                            let v5507 : US7 = match v5488 with Choice1Of2 x -> v5505 x | Choice2Of2 x -> v5506 x
                                            let _v5489 = v5507 
                                            #endif
#else
                                            let v5508 : (bool -> US7) = method19()
                                            let v5509 : (exn -> US7) = method20()
                                            let v5510 : US7 = match v5488 with Choice1Of2 x -> v5508 x | Choice2Of2 x -> v5509 x
                                            let _v5489 = v5510 
                                            #endif
                                            let v5511 : US7 = _v5489 
                                            return v5511 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5516 : Async<US7> = _v5487 
                                    let _v5471 = v5516 
                                    #endif
#else
                                    let v5517 : unit = ()
                                    let _v5517 =
                                        async {
                                            let! v5466 = v5466 
                                            let v5518 : Choice<bool, exn> = v5466 
                                            let v5519 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v5520 : US7 = null |> unbox<US7>
                                            let _v5519 = v5520 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v5523 : US7 = null |> unbox<US7>
                                            let _v5519 = v5523 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v5526 : US7 = null |> unbox<US7>
                                            let _v5519 = v5526 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v5529 : US7 = null |> unbox<US7>
                                            let _v5519 = v5529 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v5532 : US7 = null |> unbox<US7>
                                            let _v5519 = v5532 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v5535 : (bool -> US7) = method19()
                                            let v5536 : (exn -> US7) = method20()
                                            let v5537 : US7 = match v5518 with Choice1Of2 x -> v5535 x | Choice2Of2 x -> v5536 x
                                            let _v5519 = v5537 
                                            #endif
#else
                                            let v5538 : (bool -> US7) = method19()
                                            let v5539 : (exn -> US7) = method20()
                                            let v5540 : US7 = match v5518 with Choice1Of2 x -> v5538 x | Choice2Of2 x -> v5539 x
                                            let _v5519 = v5540 
                                            #endif
                                            let v5541 : US7 = _v5519 
                                            return v5541 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5546 : Async<US7> = _v5517 
                                    let _v5471 = v5546 
                                    #endif
                                    let v5547 : Async<US7> = _v5471 
                                    let v5552 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5553 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5552 = v5553 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5556 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5552 = v5556 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5559 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5552 = v5559 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5562 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5552 = v5562 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5565 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v5552 = v5565 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5568 : unit = ()
                                    let _v5568 =
                                        async {
                                            let! v5547 = v5547 
                                            let v5569 : US7 = v5547 
                                            let v5575 : US8 =
                                                match v5569 with
                                                | US7_0(v5570) -> (* C1of2 *)
                                                    US8_0(v5570)
                                                | US7_1(v5572) -> (* C2of2 *)
                                                    US8_1(v5572)
                                            return v5575 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5576 : Async<US8> = _v5568 
                                    let _v5552 = v5576 
                                    #endif
#else
                                    let v5577 : unit = ()
                                    let _v5577 =
                                        async {
                                            let! v5547 = v5547 
                                            let v5578 : US7 = v5547 
                                            let v5584 : US8 =
                                                match v5578 with
                                                | US7_0(v5579) -> (* C1of2 *)
                                                    US8_0(v5579)
                                                | US7_1(v5581) -> (* C2of2 *)
                                                    US8_1(v5581)
                                            return v5584 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5585 : Async<US8> = _v5577 
                                    let _v5552 = v5585 
                                    #endif
                                    let v5586 : Async<US8> = _v5552 
                                    let v5591 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5592 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5591 = v5592 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5595 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5591 = v5595 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5598 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5591 = v5598 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5601 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5591 = v5601 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5604 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v5591 = v5604 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5607 : unit = ()
                                    let _v5607 =
                                        async {
                                            let! v5586 = v5586 
                                            let v5608 : US8 = v5586 
                                            let v5732 : US6 =
                                                match v5608 with
                                                | US8_1(v5611) -> (* Error *)
                                                    let v5612 : string = $"%A{v5611}"
                                                    let v5615 : string = "System.TimeoutException"
                                                    let v5616 : bool = v5612.Contains v5615 
                                                    if v5616 then
                                                        let v5619 : unit = ()
                                                        let v5620 : (unit -> unit) = closure16(v4698)
                                                        let v5621 : unit = (fun () -> v5620 (); v5619) ()
                                                        US6_1
                                                    else
                                                        let v5662 : unit = ()
                                                        let v5663 : (unit -> unit) = closure17(v4698, v5611)
                                                        let v5664 : unit = (fun () -> v5663 (); v5662) ()
                                                        US6_1
                                                | US8_0(v5609) -> (* Ok *)
                                                    US6_0(v5609)
                                            return v5732 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5733 : Async<US6> = _v5607 
                                    let _v5591 = v5733 
                                    #endif
#else
                                    let v5734 : unit = ()
                                    let _v5734 =
                                        async {
                                            let! v5586 = v5586 
                                            let v5735 : US8 = v5586 
                                            let v5859 : US6 =
                                                match v5735 with
                                                | US8_1(v5738) -> (* Error *)
                                                    let v5739 : string = $"%A{v5738}"
                                                    let v5742 : string = "System.TimeoutException"
                                                    let v5743 : bool = v5739.Contains v5742 
                                                    if v5743 then
                                                        let v5746 : unit = ()
                                                        let v5747 : (unit -> unit) = closure16(v4698)
                                                        let v5748 : unit = (fun () -> v5747 (); v5746) ()
                                                        US6_1
                                                    else
                                                        let v5789 : unit = ()
                                                        let v5790 : (unit -> unit) = closure17(v4698, v5738)
                                                        let v5791 : unit = (fun () -> v5790 (); v5789) ()
                                                        US6_1
                                                | US8_0(v5736) -> (* Ok *)
                                                    US6_0(v5736)
                                            return v5859 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5860 : Async<US6> = _v5734 
                                    let _v5591 = v5860 
                                    #endif
                                    let v5861 : Async<US6> = _v5591 
                                    return! v5861 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v5866 : Async<US6> = _v5421 
                            let _v4959 = v5866 
                            #endif
                            let v5867 : Async<US6> = _v4959 
                            let _v4943 = v5867 
                            #endif
#else
                            let v5872 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v5873 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5872 = v5873 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v5876 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5872 = v5876 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v5879 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5872 = v5879 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v5882 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5872 = v5882 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v5885 : Async<US6> = null |> unbox<Async<US6>>
                            let _v5872 = v5885 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v5888 : unit = ()
                            let _v5888 =
                                async {
                                    let v5889 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5890 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5889 = v5890 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5893 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5889 = v5893 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5896 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5889 = v5896 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5899 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5889 = v5899 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5902 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v5889 = v5902 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5905 : Async<Async<bool>> = Async.StartChild (v4938, v4698)
                                    let _v5889 = v5905 
                                    #endif
#else
                                    let v5906 : Async<Async<bool>> = Async.StartChild (v4938, v4698)
                                    let _v5889 = v5906 
                                    #endif
                                    let v5907 : Async<Async<bool>> = _v5889 
                                    let! v5907 = v5907 
                                    let v5912 : Async<bool> = v5907 
                                    let v5913 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5914 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5913 = v5914 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5917 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5913 = v5917 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5920 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5913 = v5920 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5923 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5913 = v5923 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5926 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v5913 = v5926 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5929 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v5930 : Async<Choice<bool, exn>> = v5929 v5912
                                    let _v5913 = v5930 
                                    #endif
#else
                                    let v5931 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v5932 : Async<Choice<bool, exn>> = v5931 v5912
                                    let _v5913 = v5932 
                                    #endif
                                    let v5933 : Async<Choice<bool, exn>> = _v5913 
                                    let v5938 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v5939 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5938 = v5939 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v5942 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5938 = v5942 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v5945 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5938 = v5945 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v5948 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5938 = v5948 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v5951 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v5938 = v5951 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v5954 : unit = ()
                                    let _v5954 =
                                        async {
                                            let! v5933 = v5933 
                                            let v5955 : Choice<bool, exn> = v5933 
                                            let v5956 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v5957 : US7 = null |> unbox<US7>
                                            let _v5956 = v5957 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v5960 : US7 = null |> unbox<US7>
                                            let _v5956 = v5960 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v5963 : US7 = null |> unbox<US7>
                                            let _v5956 = v5963 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v5966 : US7 = null |> unbox<US7>
                                            let _v5956 = v5966 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v5969 : US7 = null |> unbox<US7>
                                            let _v5956 = v5969 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v5972 : (bool -> US7) = method19()
                                            let v5973 : (exn -> US7) = method20()
                                            let v5974 : US7 = match v5955 with Choice1Of2 x -> v5972 x | Choice2Of2 x -> v5973 x
                                            let _v5956 = v5974 
                                            #endif
#else
                                            let v5975 : (bool -> US7) = method19()
                                            let v5976 : (exn -> US7) = method20()
                                            let v5977 : US7 = match v5955 with Choice1Of2 x -> v5975 x | Choice2Of2 x -> v5976 x
                                            let _v5956 = v5977 
                                            #endif
                                            let v5978 : US7 = _v5956 
                                            return v5978 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v5983 : Async<US7> = _v5954 
                                    let _v5938 = v5983 
                                    #endif
#else
                                    let v5984 : unit = ()
                                    let _v5984 =
                                        async {
                                            let! v5933 = v5933 
                                            let v5985 : Choice<bool, exn> = v5933 
                                            let v5986 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v5987 : US7 = null |> unbox<US7>
                                            let _v5986 = v5987 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v5990 : US7 = null |> unbox<US7>
                                            let _v5986 = v5990 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v5993 : US7 = null |> unbox<US7>
                                            let _v5986 = v5993 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v5996 : US7 = null |> unbox<US7>
                                            let _v5986 = v5996 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v5999 : US7 = null |> unbox<US7>
                                            let _v5986 = v5999 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v6002 : (bool -> US7) = method19()
                                            let v6003 : (exn -> US7) = method20()
                                            let v6004 : US7 = match v5985 with Choice1Of2 x -> v6002 x | Choice2Of2 x -> v6003 x
                                            let _v5986 = v6004 
                                            #endif
#else
                                            let v6005 : (bool -> US7) = method19()
                                            let v6006 : (exn -> US7) = method20()
                                            let v6007 : US7 = match v5985 with Choice1Of2 x -> v6005 x | Choice2Of2 x -> v6006 x
                                            let _v5986 = v6007 
                                            #endif
                                            let v6008 : US7 = _v5986 
                                            return v6008 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6013 : Async<US7> = _v5984 
                                    let _v5938 = v6013 
                                    #endif
                                    let v6014 : Async<US7> = _v5938 
                                    let v6019 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6020 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6019 = v6020 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6023 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6019 = v6023 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6026 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6019 = v6026 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6029 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6019 = v6029 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6032 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6019 = v6032 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6035 : unit = ()
                                    let _v6035 =
                                        async {
                                            let! v6014 = v6014 
                                            let v6036 : US7 = v6014 
                                            let v6042 : US8 =
                                                match v6036 with
                                                | US7_0(v6037) -> (* C1of2 *)
                                                    US8_0(v6037)
                                                | US7_1(v6039) -> (* C2of2 *)
                                                    US8_1(v6039)
                                            return v6042 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6043 : Async<US8> = _v6035 
                                    let _v6019 = v6043 
                                    #endif
#else
                                    let v6044 : unit = ()
                                    let _v6044 =
                                        async {
                                            let! v6014 = v6014 
                                            let v6045 : US7 = v6014 
                                            let v6051 : US8 =
                                                match v6045 with
                                                | US7_0(v6046) -> (* C1of2 *)
                                                    US8_0(v6046)
                                                | US7_1(v6048) -> (* C2of2 *)
                                                    US8_1(v6048)
                                            return v6051 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6052 : Async<US8> = _v6044 
                                    let _v6019 = v6052 
                                    #endif
                                    let v6053 : Async<US8> = _v6019 
                                    let v6058 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6059 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6058 = v6059 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6062 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6058 = v6062 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6065 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6058 = v6065 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6068 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6058 = v6068 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6071 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6058 = v6071 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6074 : unit = ()
                                    let _v6074 =
                                        async {
                                            let! v6053 = v6053 
                                            let v6075 : US8 = v6053 
                                            let v6199 : US6 =
                                                match v6075 with
                                                | US8_1(v6078) -> (* Error *)
                                                    let v6079 : string = $"%A{v6078}"
                                                    let v6082 : string = "System.TimeoutException"
                                                    let v6083 : bool = v6079.Contains v6082 
                                                    if v6083 then
                                                        let v6086 : unit = ()
                                                        let v6087 : (unit -> unit) = closure16(v4698)
                                                        let v6088 : unit = (fun () -> v6087 (); v6086) ()
                                                        US6_1
                                                    else
                                                        let v6129 : unit = ()
                                                        let v6130 : (unit -> unit) = closure17(v4698, v6078)
                                                        let v6131 : unit = (fun () -> v6130 (); v6129) ()
                                                        US6_1
                                                | US8_0(v6076) -> (* Ok *)
                                                    US6_0(v6076)
                                            return v6199 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6200 : Async<US6> = _v6074 
                                    let _v6058 = v6200 
                                    #endif
#else
                                    let v6201 : unit = ()
                                    let _v6201 =
                                        async {
                                            let! v6053 = v6053 
                                            let v6202 : US8 = v6053 
                                            let v6326 : US6 =
                                                match v6202 with
                                                | US8_1(v6205) -> (* Error *)
                                                    let v6206 : string = $"%A{v6205}"
                                                    let v6209 : string = "System.TimeoutException"
                                                    let v6210 : bool = v6206.Contains v6209 
                                                    if v6210 then
                                                        let v6213 : unit = ()
                                                        let v6214 : (unit -> unit) = closure16(v4698)
                                                        let v6215 : unit = (fun () -> v6214 (); v6213) ()
                                                        US6_1
                                                    else
                                                        let v6256 : unit = ()
                                                        let v6257 : (unit -> unit) = closure17(v4698, v6205)
                                                        let v6258 : unit = (fun () -> v6257 (); v6256) ()
                                                        US6_1
                                                | US8_0(v6203) -> (* Ok *)
                                                    US6_0(v6203)
                                            return v6326 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6327 : Async<US6> = _v6201 
                                    let _v6058 = v6327 
                                    #endif
                                    let v6328 : Async<US6> = _v6058 
                                    return! v6328 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v6333 : Async<US6> = _v5888 
                            let _v5872 = v6333 
                            #endif
#else
                            let v6334 : unit = ()
                            let _v6334 =
                                async {
                                    let v6335 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6336 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v6335 = v6336 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6339 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v6335 = v6339 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6342 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v6335 = v6342 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6345 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v6335 = v6345 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6348 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v6335 = v6348 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6351 : Async<Async<bool>> = Async.StartChild (v4938, v4698)
                                    let _v6335 = v6351 
                                    #endif
#else
                                    let v6352 : Async<Async<bool>> = Async.StartChild (v4938, v4698)
                                    let _v6335 = v6352 
                                    #endif
                                    let v6353 : Async<Async<bool>> = _v6335 
                                    let! v6353 = v6353 
                                    let v6358 : Async<bool> = v6353 
                                    let v6359 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6360 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v6359 = v6360 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6363 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v6359 = v6363 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6366 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v6359 = v6366 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6369 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v6359 = v6369 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6372 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v6359 = v6372 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6375 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v6376 : Async<Choice<bool, exn>> = v6375 v6358
                                    let _v6359 = v6376 
                                    #endif
#else
                                    let v6377 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v6378 : Async<Choice<bool, exn>> = v6377 v6358
                                    let _v6359 = v6378 
                                    #endif
                                    let v6379 : Async<Choice<bool, exn>> = _v6359 
                                    let v6384 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6385 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6384 = v6385 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6388 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6384 = v6388 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6391 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6384 = v6391 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6394 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6384 = v6394 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6397 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v6384 = v6397 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6400 : unit = ()
                                    let _v6400 =
                                        async {
                                            let! v6379 = v6379 
                                            let v6401 : Choice<bool, exn> = v6379 
                                            let v6402 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v6403 : US7 = null |> unbox<US7>
                                            let _v6402 = v6403 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v6406 : US7 = null |> unbox<US7>
                                            let _v6402 = v6406 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v6409 : US7 = null |> unbox<US7>
                                            let _v6402 = v6409 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v6412 : US7 = null |> unbox<US7>
                                            let _v6402 = v6412 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v6415 : US7 = null |> unbox<US7>
                                            let _v6402 = v6415 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v6418 : (bool -> US7) = method19()
                                            let v6419 : (exn -> US7) = method20()
                                            let v6420 : US7 = match v6401 with Choice1Of2 x -> v6418 x | Choice2Of2 x -> v6419 x
                                            let _v6402 = v6420 
                                            #endif
#else
                                            let v6421 : (bool -> US7) = method19()
                                            let v6422 : (exn -> US7) = method20()
                                            let v6423 : US7 = match v6401 with Choice1Of2 x -> v6421 x | Choice2Of2 x -> v6422 x
                                            let _v6402 = v6423 
                                            #endif
                                            let v6424 : US7 = _v6402 
                                            return v6424 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6429 : Async<US7> = _v6400 
                                    let _v6384 = v6429 
                                    #endif
#else
                                    let v6430 : unit = ()
                                    let _v6430 =
                                        async {
                                            let! v6379 = v6379 
                                            let v6431 : Choice<bool, exn> = v6379 
                                            let v6432 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v6433 : US7 = null |> unbox<US7>
                                            let _v6432 = v6433 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v6436 : US7 = null |> unbox<US7>
                                            let _v6432 = v6436 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v6439 : US7 = null |> unbox<US7>
                                            let _v6432 = v6439 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v6442 : US7 = null |> unbox<US7>
                                            let _v6432 = v6442 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v6445 : US7 = null |> unbox<US7>
                                            let _v6432 = v6445 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v6448 : (bool -> US7) = method19()
                                            let v6449 : (exn -> US7) = method20()
                                            let v6450 : US7 = match v6431 with Choice1Of2 x -> v6448 x | Choice2Of2 x -> v6449 x
                                            let _v6432 = v6450 
                                            #endif
#else
                                            let v6451 : (bool -> US7) = method19()
                                            let v6452 : (exn -> US7) = method20()
                                            let v6453 : US7 = match v6431 with Choice1Of2 x -> v6451 x | Choice2Of2 x -> v6452 x
                                            let _v6432 = v6453 
                                            #endif
                                            let v6454 : US7 = _v6432 
                                            return v6454 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6459 : Async<US7> = _v6430 
                                    let _v6384 = v6459 
                                    #endif
                                    let v6460 : Async<US7> = _v6384 
                                    let v6465 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6466 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6465 = v6466 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6469 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6465 = v6469 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6472 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6465 = v6472 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6475 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6465 = v6475 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6478 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v6465 = v6478 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6481 : unit = ()
                                    let _v6481 =
                                        async {
                                            let! v6460 = v6460 
                                            let v6482 : US7 = v6460 
                                            let v6488 : US8 =
                                                match v6482 with
                                                | US7_0(v6483) -> (* C1of2 *)
                                                    US8_0(v6483)
                                                | US7_1(v6485) -> (* C2of2 *)
                                                    US8_1(v6485)
                                            return v6488 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6489 : Async<US8> = _v6481 
                                    let _v6465 = v6489 
                                    #endif
#else
                                    let v6490 : unit = ()
                                    let _v6490 =
                                        async {
                                            let! v6460 = v6460 
                                            let v6491 : US7 = v6460 
                                            let v6497 : US8 =
                                                match v6491 with
                                                | US7_0(v6492) -> (* C1of2 *)
                                                    US8_0(v6492)
                                                | US7_1(v6494) -> (* C2of2 *)
                                                    US8_1(v6494)
                                            return v6497 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6498 : Async<US8> = _v6490 
                                    let _v6465 = v6498 
                                    #endif
                                    let v6499 : Async<US8> = _v6465 
                                    let v6504 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6505 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6504 = v6505 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6508 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6504 = v6508 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6511 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6504 = v6511 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6514 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6504 = v6514 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6517 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v6504 = v6517 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6520 : unit = ()
                                    let _v6520 =
                                        async {
                                            let! v6499 = v6499 
                                            let v6521 : US8 = v6499 
                                            let v6645 : US6 =
                                                match v6521 with
                                                | US8_1(v6524) -> (* Error *)
                                                    let v6525 : string = $"%A{v6524}"
                                                    let v6528 : string = "System.TimeoutException"
                                                    let v6529 : bool = v6525.Contains v6528 
                                                    if v6529 then
                                                        let v6532 : unit = ()
                                                        let v6533 : (unit -> unit) = closure16(v4698)
                                                        let v6534 : unit = (fun () -> v6533 (); v6532) ()
                                                        US6_1
                                                    else
                                                        let v6575 : unit = ()
                                                        let v6576 : (unit -> unit) = closure17(v4698, v6524)
                                                        let v6577 : unit = (fun () -> v6576 (); v6575) ()
                                                        US6_1
                                                | US8_0(v6522) -> (* Ok *)
                                                    US6_0(v6522)
                                            return v6645 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6646 : Async<US6> = _v6520 
                                    let _v6504 = v6646 
                                    #endif
#else
                                    let v6647 : unit = ()
                                    let _v6647 =
                                        async {
                                            let! v6499 = v6499 
                                            let v6648 : US8 = v6499 
                                            let v6772 : US6 =
                                                match v6648 with
                                                | US8_1(v6651) -> (* Error *)
                                                    let v6652 : string = $"%A{v6651}"
                                                    let v6655 : string = "System.TimeoutException"
                                                    let v6656 : bool = v6652.Contains v6655 
                                                    if v6656 then
                                                        let v6659 : unit = ()
                                                        let v6660 : (unit -> unit) = closure16(v4698)
                                                        let v6661 : unit = (fun () -> v6660 (); v6659) ()
                                                        US6_1
                                                    else
                                                        let v6702 : unit = ()
                                                        let v6703 : (unit -> unit) = closure17(v4698, v6651)
                                                        let v6704 : unit = (fun () -> v6703 (); v6702) ()
                                                        US6_1
                                                | US8_0(v6649) -> (* Ok *)
                                                    US6_0(v6649)
                                            return v6772 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v6773 : Async<US6> = _v6647 
                                    let _v6504 = v6773 
                                    #endif
                                    let v6774 : Async<US6> = _v6504 
                                    return! v6774 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v6779 : Async<US6> = _v6334 
                            let _v5872 = v6779 
                            #endif
                            let v6780 : Async<US6> = _v5872 
                            let _v4943 = v6780 
                            #endif
                            let v6785 : Async<US6> = _v4943 
                            let! v6785 = v6785 
                            let v6790 : US6 = v6785 
                            let v6793 : bool =
                                match v6790 with
                                | US6_1 -> (* None *)
                                    false
                                | US6_0(v6791) -> (* Some *)
                                    v6791
                            return v6793 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v6794 : Async<bool> = _v4715 
                    let _v4699 = v6794 
                    #endif
#else
                    let v6795 : unit = ()
                    let _v6795 =
                        async {
                            let v6796 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v6797 : Async<bool> = null |> unbox<Async<bool>>
                            let _v6796 = v6797 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v6800 : Async<bool> = null |> unbox<Async<bool>>
                            let _v6796 = v6800 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v6803 : Async<bool> = null |> unbox<Async<bool>>
                            let _v6796 = v6803 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v6806 : Async<bool> = null |> unbox<Async<bool>>
                            let _v6796 = v6806 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v6809 : Async<bool> = null |> unbox<Async<bool>>
                            let _v6796 = v6809 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v6812 : unit = ()
                            let _v6812 =
                                async {
                                    let v6813 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v6813 = v6813 
                                    let v6814 : System.Threading.CancellationToken = v6813 
                                    let v6815 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v6815 = v6815 
                                    let v6816 : System.Net.Sockets.TcpClient = v6815 
                                    try
                                    let v6817 : System.Threading.Tasks.ValueTask = v6816.ConnectAsync (v1, v2, v6814)
                                    let v6818 : (unit -> System.Threading.Tasks.Task) = v6817.AsTask
                                    let v6819 : System.Threading.Tasks.Task = v6818 ()
                                    let v6820 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6821 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6820 = v6821 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6824 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6820 = v6824 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6827 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6820 = v6827 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6830 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6820 = v6830 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6833 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6820 = v6833 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6836 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v6837 : Async<unit> = v6836 v6819
                                    let _v6820 = v6837 
                                    #endif
#else
                                    let v6838 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v6839 : Async<unit> = v6838 v6819
                                    let _v6820 = v6839 
                                    #endif
                                    let v6840 : Async<unit> = _v6820 
                                    do! v6840 
                                    return true 
                                    with ex ->
                                        let v6845 : exn = ex
                                        let v6846 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v6847 : string = $"%A{v6845}"
                                        let _v6846 = v6847 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v6850 : string = $"%A{v6845}"
                                        let _v6846 = v6850 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v6853 : string = $"%A{v6845}"
                                        let _v6846 = v6853 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v6856 : string = $"%A{v6845}"
                                        let _v6846 = v6856 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v6859 : string = $"%A{v6845}"
                                        let _v6846 = v6859 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v6862 : string = $"%A{v6845}"
                                        let _v6846 = v6862 
                                        #endif
#else
                                        let v6865 : string = $"{v6845.GetType ()}: {v6845.Message}"
                                        let _v6846 = v6865 
                                        #endif
                                        let v6866 : string = _v6846 
                                        let v6871 : unit = ()
                                        let v6872 : (unit -> unit) = closure5(v2, v6866)
                                        let v6873 : unit = (fun () -> v6872 (); v6871) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v6913 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v6914 : Async<bool> = _v6812 
                            let _v6796 = v6914 
                            #endif
#else
                            let v6915 : unit = ()
                            let _v6915 =
                                async {
                                    let v6916 : Async<System.Threading.CancellationToken> = Async.CancellationToken
                                    let! v6916 = v6916 
                                    let v6917 : System.Threading.CancellationToken = v6916 
                                    let v6918 : System.Net.Sockets.TcpClient = new System.Net.Sockets.TcpClient ()
                                    use v6918 = v6918 
                                    let v6919 : System.Net.Sockets.TcpClient = v6918 
                                    try
                                    let v6920 : System.Threading.Tasks.ValueTask = v6919.ConnectAsync (v1, v2, v6917)
                                    let v6921 : (unit -> System.Threading.Tasks.Task) = v6920.AsTask
                                    let v6922 : System.Threading.Tasks.Task = v6921 ()
                                    let v6923 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v6924 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6923 = v6924 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v6927 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6923 = v6927 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v6930 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6923 = v6930 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v6933 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6923 = v6933 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v6936 : Async<unit> = null |> unbox<Async<unit>>
                                    let _v6923 = v6936 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v6939 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v6940 : Async<unit> = v6939 v6922
                                    let _v6923 = v6940 
                                    #endif
#else
                                    let v6941 : (System.Threading.Tasks.Task -> Async<unit>) = Async.AwaitTask
                                    let v6942 : Async<unit> = v6941 v6922
                                    let _v6923 = v6942 
                                    #endif
                                    let v6943 : Async<unit> = _v6923 
                                    do! v6943 
                                    return true 
                                    with ex ->
                                        let v6948 : exn = ex
                                        let v6949 : unit = ()
                                        
#if FABLE_COMPILER || WASM || CONTRACT
                                        
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                        let v6950 : string = $"%A{v6948}"
                                        let _v6949 = v6950 
                                        #endif
#if FABLE_COMPILER_RUST && WASM
                                        let v6953 : string = $"%A{v6948}"
                                        let _v6949 = v6953 
                                        #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                        let v6956 : string = $"%A{v6948}"
                                        let _v6949 = v6956 
                                        #endif
#if FABLE_COMPILER_TYPESCRIPT
                                        let v6959 : string = $"%A{v6948}"
                                        let _v6949 = v6959 
                                        #endif
#if FABLE_COMPILER_PYTHON
                                        let v6962 : string = $"%A{v6948}"
                                        let _v6949 = v6962 
                                        #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                        let v6965 : string = $"%A{v6948}"
                                        let _v6949 = v6965 
                                        #endif
#else
                                        let v6968 : string = $"{v6948.GetType ()}: {v6948.Message}"
                                        let _v6949 = v6968 
                                        #endif
                                        let v6969 : string = _v6949 
                                        let v6974 : unit = ()
                                        let v6975 : (unit -> unit) = closure5(v2, v6969)
                                        let v6976 : unit = (fun () -> v6975 (); v6974) ()
                                        return false 
                                        (*
                                        ()
                                    *)
                                    (*
                                    let v7016 : bool = *)
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v7017 : Async<bool> = _v6915 
                            let _v6796 = v7017 
                            #endif
                            let v7018 : Async<bool> = _v6796 
                            let v7023 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v7024 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7023 = v7024 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v7027 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7023 = v7027 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v7030 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7023 = v7030 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v7033 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7023 = v7033 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v7036 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7023 = v7036 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v7039 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v7040 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7039 = v7040 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v7043 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7039 = v7043 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v7046 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7039 = v7046 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v7049 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7039 = v7049 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v7052 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7039 = v7052 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v7055 : unit = ()
                            let _v7055 =
                                async {
                                    let v7056 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7057 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7056 = v7057 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7060 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7056 = v7060 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7063 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7056 = v7063 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7066 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7056 = v7066 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7069 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7056 = v7069 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7072 : Async<Async<bool>> = Async.StartChild (v7018, v4698)
                                    let _v7056 = v7072 
                                    #endif
#else
                                    let v7073 : Async<Async<bool>> = Async.StartChild (v7018, v4698)
                                    let _v7056 = v7073 
                                    #endif
                                    let v7074 : Async<Async<bool>> = _v7056 
                                    let! v7074 = v7074 
                                    let v7079 : Async<bool> = v7074 
                                    let v7080 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7081 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7080 = v7081 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7084 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7080 = v7084 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7087 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7080 = v7087 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7090 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7080 = v7090 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7093 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7080 = v7093 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7096 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v7097 : Async<Choice<bool, exn>> = v7096 v7079
                                    let _v7080 = v7097 
                                    #endif
#else
                                    let v7098 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v7099 : Async<Choice<bool, exn>> = v7098 v7079
                                    let _v7080 = v7099 
                                    #endif
                                    let v7100 : Async<Choice<bool, exn>> = _v7080 
                                    let v7105 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7106 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7105 = v7106 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7109 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7105 = v7109 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7112 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7105 = v7112 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7115 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7105 = v7115 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7118 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7105 = v7118 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7121 : unit = ()
                                    let _v7121 =
                                        async {
                                            let! v7100 = v7100 
                                            let v7122 : Choice<bool, exn> = v7100 
                                            let v7123 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v7124 : US7 = null |> unbox<US7>
                                            let _v7123 = v7124 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v7127 : US7 = null |> unbox<US7>
                                            let _v7123 = v7127 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v7130 : US7 = null |> unbox<US7>
                                            let _v7123 = v7130 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v7133 : US7 = null |> unbox<US7>
                                            let _v7123 = v7133 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v7136 : US7 = null |> unbox<US7>
                                            let _v7123 = v7136 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v7139 : (bool -> US7) = method19()
                                            let v7140 : (exn -> US7) = method20()
                                            let v7141 : US7 = match v7122 with Choice1Of2 x -> v7139 x | Choice2Of2 x -> v7140 x
                                            let _v7123 = v7141 
                                            #endif
#else
                                            let v7142 : (bool -> US7) = method19()
                                            let v7143 : (exn -> US7) = method20()
                                            let v7144 : US7 = match v7122 with Choice1Of2 x -> v7142 x | Choice2Of2 x -> v7143 x
                                            let _v7123 = v7144 
                                            #endif
                                            let v7145 : US7 = _v7123 
                                            return v7145 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7150 : Async<US7> = _v7121 
                                    let _v7105 = v7150 
                                    #endif
#else
                                    let v7151 : unit = ()
                                    let _v7151 =
                                        async {
                                            let! v7100 = v7100 
                                            let v7152 : Choice<bool, exn> = v7100 
                                            let v7153 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v7154 : US7 = null |> unbox<US7>
                                            let _v7153 = v7154 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v7157 : US7 = null |> unbox<US7>
                                            let _v7153 = v7157 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v7160 : US7 = null |> unbox<US7>
                                            let _v7153 = v7160 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v7163 : US7 = null |> unbox<US7>
                                            let _v7153 = v7163 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v7166 : US7 = null |> unbox<US7>
                                            let _v7153 = v7166 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v7169 : (bool -> US7) = method19()
                                            let v7170 : (exn -> US7) = method20()
                                            let v7171 : US7 = match v7152 with Choice1Of2 x -> v7169 x | Choice2Of2 x -> v7170 x
                                            let _v7153 = v7171 
                                            #endif
#else
                                            let v7172 : (bool -> US7) = method19()
                                            let v7173 : (exn -> US7) = method20()
                                            let v7174 : US7 = match v7152 with Choice1Of2 x -> v7172 x | Choice2Of2 x -> v7173 x
                                            let _v7153 = v7174 
                                            #endif
                                            let v7175 : US7 = _v7153 
                                            return v7175 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7180 : Async<US7> = _v7151 
                                    let _v7105 = v7180 
                                    #endif
                                    let v7181 : Async<US7> = _v7105 
                                    let v7186 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7187 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7186 = v7187 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7190 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7186 = v7190 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7193 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7186 = v7193 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7196 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7186 = v7196 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7199 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7186 = v7199 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7202 : unit = ()
                                    let _v7202 =
                                        async {
                                            let! v7181 = v7181 
                                            let v7203 : US7 = v7181 
                                            let v7209 : US8 =
                                                match v7203 with
                                                | US7_0(v7204) -> (* C1of2 *)
                                                    US8_0(v7204)
                                                | US7_1(v7206) -> (* C2of2 *)
                                                    US8_1(v7206)
                                            return v7209 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7210 : Async<US8> = _v7202 
                                    let _v7186 = v7210 
                                    #endif
#else
                                    let v7211 : unit = ()
                                    let _v7211 =
                                        async {
                                            let! v7181 = v7181 
                                            let v7212 : US7 = v7181 
                                            let v7218 : US8 =
                                                match v7212 with
                                                | US7_0(v7213) -> (* C1of2 *)
                                                    US8_0(v7213)
                                                | US7_1(v7215) -> (* C2of2 *)
                                                    US8_1(v7215)
                                            return v7218 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7219 : Async<US8> = _v7211 
                                    let _v7186 = v7219 
                                    #endif
                                    let v7220 : Async<US8> = _v7186 
                                    let v7225 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7226 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7225 = v7226 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7229 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7225 = v7229 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7232 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7225 = v7232 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7235 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7225 = v7235 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7238 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7225 = v7238 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7241 : unit = ()
                                    let _v7241 =
                                        async {
                                            let! v7220 = v7220 
                                            let v7242 : US8 = v7220 
                                            let v7366 : US6 =
                                                match v7242 with
                                                | US8_1(v7245) -> (* Error *)
                                                    let v7246 : string = $"%A{v7245}"
                                                    let v7249 : string = "System.TimeoutException"
                                                    let v7250 : bool = v7246.Contains v7249 
                                                    if v7250 then
                                                        let v7253 : unit = ()
                                                        let v7254 : (unit -> unit) = closure16(v4698)
                                                        let v7255 : unit = (fun () -> v7254 (); v7253) ()
                                                        US6_1
                                                    else
                                                        let v7296 : unit = ()
                                                        let v7297 : (unit -> unit) = closure17(v4698, v7245)
                                                        let v7298 : unit = (fun () -> v7297 (); v7296) ()
                                                        US6_1
                                                | US8_0(v7243) -> (* Ok *)
                                                    US6_0(v7243)
                                            return v7366 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7367 : Async<US6> = _v7241 
                                    let _v7225 = v7367 
                                    #endif
#else
                                    let v7368 : unit = ()
                                    let _v7368 =
                                        async {
                                            let! v7220 = v7220 
                                            let v7369 : US8 = v7220 
                                            let v7493 : US6 =
                                                match v7369 with
                                                | US8_1(v7372) -> (* Error *)
                                                    let v7373 : string = $"%A{v7372}"
                                                    let v7376 : string = "System.TimeoutException"
                                                    let v7377 : bool = v7373.Contains v7376 
                                                    if v7377 then
                                                        let v7380 : unit = ()
                                                        let v7381 : (unit -> unit) = closure16(v4698)
                                                        let v7382 : unit = (fun () -> v7381 (); v7380) ()
                                                        US6_1
                                                    else
                                                        let v7423 : unit = ()
                                                        let v7424 : (unit -> unit) = closure17(v4698, v7372)
                                                        let v7425 : unit = (fun () -> v7424 (); v7423) ()
                                                        US6_1
                                                | US8_0(v7370) -> (* Ok *)
                                                    US6_0(v7370)
                                            return v7493 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7494 : Async<US6> = _v7368 
                                    let _v7225 = v7494 
                                    #endif
                                    let v7495 : Async<US6> = _v7225 
                                    return! v7495 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v7500 : Async<US6> = _v7055 
                            let _v7039 = v7500 
                            #endif
#else
                            let v7501 : unit = ()
                            let _v7501 =
                                async {
                                    let v7502 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7503 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7502 = v7503 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7506 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7502 = v7506 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7509 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7502 = v7509 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7512 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7502 = v7512 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7515 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7502 = v7515 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7518 : Async<Async<bool>> = Async.StartChild (v7018, v4698)
                                    let _v7502 = v7518 
                                    #endif
#else
                                    let v7519 : Async<Async<bool>> = Async.StartChild (v7018, v4698)
                                    let _v7502 = v7519 
                                    #endif
                                    let v7520 : Async<Async<bool>> = _v7502 
                                    let! v7520 = v7520 
                                    let v7525 : Async<bool> = v7520 
                                    let v7526 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7527 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7526 = v7527 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7530 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7526 = v7530 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7533 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7526 = v7533 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7536 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7526 = v7536 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7539 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7526 = v7539 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7542 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v7543 : Async<Choice<bool, exn>> = v7542 v7525
                                    let _v7526 = v7543 
                                    #endif
#else
                                    let v7544 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v7545 : Async<Choice<bool, exn>> = v7544 v7525
                                    let _v7526 = v7545 
                                    #endif
                                    let v7546 : Async<Choice<bool, exn>> = _v7526 
                                    let v7551 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7552 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7551 = v7552 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7555 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7551 = v7555 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7558 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7551 = v7558 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7561 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7551 = v7561 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7564 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v7551 = v7564 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7567 : unit = ()
                                    let _v7567 =
                                        async {
                                            let! v7546 = v7546 
                                            let v7568 : Choice<bool, exn> = v7546 
                                            let v7569 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v7570 : US7 = null |> unbox<US7>
                                            let _v7569 = v7570 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v7573 : US7 = null |> unbox<US7>
                                            let _v7569 = v7573 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v7576 : US7 = null |> unbox<US7>
                                            let _v7569 = v7576 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v7579 : US7 = null |> unbox<US7>
                                            let _v7569 = v7579 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v7582 : US7 = null |> unbox<US7>
                                            let _v7569 = v7582 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v7585 : (bool -> US7) = method19()
                                            let v7586 : (exn -> US7) = method20()
                                            let v7587 : US7 = match v7568 with Choice1Of2 x -> v7585 x | Choice2Of2 x -> v7586 x
                                            let _v7569 = v7587 
                                            #endif
#else
                                            let v7588 : (bool -> US7) = method19()
                                            let v7589 : (exn -> US7) = method20()
                                            let v7590 : US7 = match v7568 with Choice1Of2 x -> v7588 x | Choice2Of2 x -> v7589 x
                                            let _v7569 = v7590 
                                            #endif
                                            let v7591 : US7 = _v7569 
                                            return v7591 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7596 : Async<US7> = _v7567 
                                    let _v7551 = v7596 
                                    #endif
#else
                                    let v7597 : unit = ()
                                    let _v7597 =
                                        async {
                                            let! v7546 = v7546 
                                            let v7598 : Choice<bool, exn> = v7546 
                                            let v7599 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v7600 : US7 = null |> unbox<US7>
                                            let _v7599 = v7600 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v7603 : US7 = null |> unbox<US7>
                                            let _v7599 = v7603 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v7606 : US7 = null |> unbox<US7>
                                            let _v7599 = v7606 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v7609 : US7 = null |> unbox<US7>
                                            let _v7599 = v7609 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v7612 : US7 = null |> unbox<US7>
                                            let _v7599 = v7612 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v7615 : (bool -> US7) = method19()
                                            let v7616 : (exn -> US7) = method20()
                                            let v7617 : US7 = match v7598 with Choice1Of2 x -> v7615 x | Choice2Of2 x -> v7616 x
                                            let _v7599 = v7617 
                                            #endif
#else
                                            let v7618 : (bool -> US7) = method19()
                                            let v7619 : (exn -> US7) = method20()
                                            let v7620 : US7 = match v7598 with Choice1Of2 x -> v7618 x | Choice2Of2 x -> v7619 x
                                            let _v7599 = v7620 
                                            #endif
                                            let v7621 : US7 = _v7599 
                                            return v7621 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7626 : Async<US7> = _v7597 
                                    let _v7551 = v7626 
                                    #endif
                                    let v7627 : Async<US7> = _v7551 
                                    let v7632 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7633 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7632 = v7633 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7636 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7632 = v7636 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7639 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7632 = v7639 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7642 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7632 = v7642 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7645 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v7632 = v7645 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7648 : unit = ()
                                    let _v7648 =
                                        async {
                                            let! v7627 = v7627 
                                            let v7649 : US7 = v7627 
                                            let v7655 : US8 =
                                                match v7649 with
                                                | US7_0(v7650) -> (* C1of2 *)
                                                    US8_0(v7650)
                                                | US7_1(v7652) -> (* C2of2 *)
                                                    US8_1(v7652)
                                            return v7655 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7656 : Async<US8> = _v7648 
                                    let _v7632 = v7656 
                                    #endif
#else
                                    let v7657 : unit = ()
                                    let _v7657 =
                                        async {
                                            let! v7627 = v7627 
                                            let v7658 : US7 = v7627 
                                            let v7664 : US8 =
                                                match v7658 with
                                                | US7_0(v7659) -> (* C1of2 *)
                                                    US8_0(v7659)
                                                | US7_1(v7661) -> (* C2of2 *)
                                                    US8_1(v7661)
                                            return v7664 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7665 : Async<US8> = _v7657 
                                    let _v7632 = v7665 
                                    #endif
                                    let v7666 : Async<US8> = _v7632 
                                    let v7671 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7672 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7671 = v7672 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7675 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7671 = v7675 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7678 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7671 = v7678 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7681 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7671 = v7681 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7684 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v7671 = v7684 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7687 : unit = ()
                                    let _v7687 =
                                        async {
                                            let! v7666 = v7666 
                                            let v7688 : US8 = v7666 
                                            let v7812 : US6 =
                                                match v7688 with
                                                | US8_1(v7691) -> (* Error *)
                                                    let v7692 : string = $"%A{v7691}"
                                                    let v7695 : string = "System.TimeoutException"
                                                    let v7696 : bool = v7692.Contains v7695 
                                                    if v7696 then
                                                        let v7699 : unit = ()
                                                        let v7700 : (unit -> unit) = closure16(v4698)
                                                        let v7701 : unit = (fun () -> v7700 (); v7699) ()
                                                        US6_1
                                                    else
                                                        let v7742 : unit = ()
                                                        let v7743 : (unit -> unit) = closure17(v4698, v7691)
                                                        let v7744 : unit = (fun () -> v7743 (); v7742) ()
                                                        US6_1
                                                | US8_0(v7689) -> (* Ok *)
                                                    US6_0(v7689)
                                            return v7812 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7813 : Async<US6> = _v7687 
                                    let _v7671 = v7813 
                                    #endif
#else
                                    let v7814 : unit = ()
                                    let _v7814 =
                                        async {
                                            let! v7666 = v7666 
                                            let v7815 : US8 = v7666 
                                            let v7939 : US6 =
                                                match v7815 with
                                                | US8_1(v7818) -> (* Error *)
                                                    let v7819 : string = $"%A{v7818}"
                                                    let v7822 : string = "System.TimeoutException"
                                                    let v7823 : bool = v7819.Contains v7822 
                                                    if v7823 then
                                                        let v7826 : unit = ()
                                                        let v7827 : (unit -> unit) = closure16(v4698)
                                                        let v7828 : unit = (fun () -> v7827 (); v7826) ()
                                                        US6_1
                                                    else
                                                        let v7869 : unit = ()
                                                        let v7870 : (unit -> unit) = closure17(v4698, v7818)
                                                        let v7871 : unit = (fun () -> v7870 (); v7869) ()
                                                        US6_1
                                                | US8_0(v7816) -> (* Ok *)
                                                    US6_0(v7816)
                                            return v7939 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v7940 : Async<US6> = _v7814 
                                    let _v7671 = v7940 
                                    #endif
                                    let v7941 : Async<US6> = _v7671 
                                    return! v7941 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v7946 : Async<US6> = _v7501 
                            let _v7039 = v7946 
                            #endif
                            let v7947 : Async<US6> = _v7039 
                            let _v7023 = v7947 
                            #endif
#else
                            let v7952 : unit = ()
                            
#if FABLE_COMPILER || WASM || CONTRACT
                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                            let v7953 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7952 = v7953 
                            #endif
#if FABLE_COMPILER_RUST && WASM
                            let v7956 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7952 = v7956 
                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                            let v7959 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7952 = v7959 
                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                            let v7962 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7952 = v7962 
                            #endif
#if FABLE_COMPILER_PYTHON
                            let v7965 : Async<US6> = null |> unbox<Async<US6>>
                            let _v7952 = v7965 
                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                            let v7968 : unit = ()
                            let _v7968 =
                                async {
                                    let v7969 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7970 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7969 = v7970 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7973 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7969 = v7973 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v7976 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7969 = v7976 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v7979 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7969 = v7979 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v7982 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v7969 = v7982 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v7985 : Async<Async<bool>> = Async.StartChild (v7018, v4698)
                                    let _v7969 = v7985 
                                    #endif
#else
                                    let v7986 : Async<Async<bool>> = Async.StartChild (v7018, v4698)
                                    let _v7969 = v7986 
                                    #endif
                                    let v7987 : Async<Async<bool>> = _v7969 
                                    let! v7987 = v7987 
                                    let v7992 : Async<bool> = v7987 
                                    let v7993 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v7994 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7993 = v7994 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v7997 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7993 = v7997 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8000 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7993 = v8000 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8003 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7993 = v8003 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8006 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v7993 = v8006 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8009 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v8010 : Async<Choice<bool, exn>> = v8009 v7992
                                    let _v7993 = v8010 
                                    #endif
#else
                                    let v8011 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v8012 : Async<Choice<bool, exn>> = v8011 v7992
                                    let _v7993 = v8012 
                                    #endif
                                    let v8013 : Async<Choice<bool, exn>> = _v7993 
                                    let v8018 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8019 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8018 = v8019 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8022 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8018 = v8022 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8025 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8018 = v8025 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8028 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8018 = v8028 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8031 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8018 = v8031 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8034 : unit = ()
                                    let _v8034 =
                                        async {
                                            let! v8013 = v8013 
                                            let v8035 : Choice<bool, exn> = v8013 
                                            let v8036 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v8037 : US7 = null |> unbox<US7>
                                            let _v8036 = v8037 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v8040 : US7 = null |> unbox<US7>
                                            let _v8036 = v8040 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v8043 : US7 = null |> unbox<US7>
                                            let _v8036 = v8043 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v8046 : US7 = null |> unbox<US7>
                                            let _v8036 = v8046 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v8049 : US7 = null |> unbox<US7>
                                            let _v8036 = v8049 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v8052 : (bool -> US7) = method19()
                                            let v8053 : (exn -> US7) = method20()
                                            let v8054 : US7 = match v8035 with Choice1Of2 x -> v8052 x | Choice2Of2 x -> v8053 x
                                            let _v8036 = v8054 
                                            #endif
#else
                                            let v8055 : (bool -> US7) = method19()
                                            let v8056 : (exn -> US7) = method20()
                                            let v8057 : US7 = match v8035 with Choice1Of2 x -> v8055 x | Choice2Of2 x -> v8056 x
                                            let _v8036 = v8057 
                                            #endif
                                            let v8058 : US7 = _v8036 
                                            return v8058 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8063 : Async<US7> = _v8034 
                                    let _v8018 = v8063 
                                    #endif
#else
                                    let v8064 : unit = ()
                                    let _v8064 =
                                        async {
                                            let! v8013 = v8013 
                                            let v8065 : Choice<bool, exn> = v8013 
                                            let v8066 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v8067 : US7 = null |> unbox<US7>
                                            let _v8066 = v8067 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v8070 : US7 = null |> unbox<US7>
                                            let _v8066 = v8070 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v8073 : US7 = null |> unbox<US7>
                                            let _v8066 = v8073 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v8076 : US7 = null |> unbox<US7>
                                            let _v8066 = v8076 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v8079 : US7 = null |> unbox<US7>
                                            let _v8066 = v8079 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v8082 : (bool -> US7) = method19()
                                            let v8083 : (exn -> US7) = method20()
                                            let v8084 : US7 = match v8065 with Choice1Of2 x -> v8082 x | Choice2Of2 x -> v8083 x
                                            let _v8066 = v8084 
                                            #endif
#else
                                            let v8085 : (bool -> US7) = method19()
                                            let v8086 : (exn -> US7) = method20()
                                            let v8087 : US7 = match v8065 with Choice1Of2 x -> v8085 x | Choice2Of2 x -> v8086 x
                                            let _v8066 = v8087 
                                            #endif
                                            let v8088 : US7 = _v8066 
                                            return v8088 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8093 : Async<US7> = _v8064 
                                    let _v8018 = v8093 
                                    #endif
                                    let v8094 : Async<US7> = _v8018 
                                    let v8099 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8100 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8099 = v8100 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8103 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8099 = v8103 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8106 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8099 = v8106 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8109 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8099 = v8109 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8112 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8099 = v8112 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8115 : unit = ()
                                    let _v8115 =
                                        async {
                                            let! v8094 = v8094 
                                            let v8116 : US7 = v8094 
                                            let v8122 : US8 =
                                                match v8116 with
                                                | US7_0(v8117) -> (* C1of2 *)
                                                    US8_0(v8117)
                                                | US7_1(v8119) -> (* C2of2 *)
                                                    US8_1(v8119)
                                            return v8122 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8123 : Async<US8> = _v8115 
                                    let _v8099 = v8123 
                                    #endif
#else
                                    let v8124 : unit = ()
                                    let _v8124 =
                                        async {
                                            let! v8094 = v8094 
                                            let v8125 : US7 = v8094 
                                            let v8131 : US8 =
                                                match v8125 with
                                                | US7_0(v8126) -> (* C1of2 *)
                                                    US8_0(v8126)
                                                | US7_1(v8128) -> (* C2of2 *)
                                                    US8_1(v8128)
                                            return v8131 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8132 : Async<US8> = _v8124 
                                    let _v8099 = v8132 
                                    #endif
                                    let v8133 : Async<US8> = _v8099 
                                    let v8138 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8139 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8138 = v8139 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8142 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8138 = v8142 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8145 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8138 = v8145 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8148 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8138 = v8148 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8151 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8138 = v8151 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8154 : unit = ()
                                    let _v8154 =
                                        async {
                                            let! v8133 = v8133 
                                            let v8155 : US8 = v8133 
                                            let v8279 : US6 =
                                                match v8155 with
                                                | US8_1(v8158) -> (* Error *)
                                                    let v8159 : string = $"%A{v8158}"
                                                    let v8162 : string = "System.TimeoutException"
                                                    let v8163 : bool = v8159.Contains v8162 
                                                    if v8163 then
                                                        let v8166 : unit = ()
                                                        let v8167 : (unit -> unit) = closure16(v4698)
                                                        let v8168 : unit = (fun () -> v8167 (); v8166) ()
                                                        US6_1
                                                    else
                                                        let v8209 : unit = ()
                                                        let v8210 : (unit -> unit) = closure17(v4698, v8158)
                                                        let v8211 : unit = (fun () -> v8210 (); v8209) ()
                                                        US6_1
                                                | US8_0(v8156) -> (* Ok *)
                                                    US6_0(v8156)
                                            return v8279 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8280 : Async<US6> = _v8154 
                                    let _v8138 = v8280 
                                    #endif
#else
                                    let v8281 : unit = ()
                                    let _v8281 =
                                        async {
                                            let! v8133 = v8133 
                                            let v8282 : US8 = v8133 
                                            let v8406 : US6 =
                                                match v8282 with
                                                | US8_1(v8285) -> (* Error *)
                                                    let v8286 : string = $"%A{v8285}"
                                                    let v8289 : string = "System.TimeoutException"
                                                    let v8290 : bool = v8286.Contains v8289 
                                                    if v8290 then
                                                        let v8293 : unit = ()
                                                        let v8294 : (unit -> unit) = closure16(v4698)
                                                        let v8295 : unit = (fun () -> v8294 (); v8293) ()
                                                        US6_1
                                                    else
                                                        let v8336 : unit = ()
                                                        let v8337 : (unit -> unit) = closure17(v4698, v8285)
                                                        let v8338 : unit = (fun () -> v8337 (); v8336) ()
                                                        US6_1
                                                | US8_0(v8283) -> (* Ok *)
                                                    US6_0(v8283)
                                            return v8406 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8407 : Async<US6> = _v8281 
                                    let _v8138 = v8407 
                                    #endif
                                    let v8408 : Async<US6> = _v8138 
                                    return! v8408 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v8413 : Async<US6> = _v7968 
                            let _v7952 = v8413 
                            #endif
#else
                            let v8414 : unit = ()
                            let _v8414 =
                                async {
                                    let v8415 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8416 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8415 = v8416 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8419 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8415 = v8419 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8422 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8415 = v8422 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8425 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8415 = v8425 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8428 : Async<Async<bool>> = null |> unbox<Async<Async<bool>>>
                                    let _v8415 = v8428 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8431 : Async<Async<bool>> = Async.StartChild (v7018, v4698)
                                    let _v8415 = v8431 
                                    #endif
#else
                                    let v8432 : Async<Async<bool>> = Async.StartChild (v7018, v4698)
                                    let _v8415 = v8432 
                                    #endif
                                    let v8433 : Async<Async<bool>> = _v8415 
                                    let! v8433 = v8433 
                                    let v8438 : Async<bool> = v8433 
                                    let v8439 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8440 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8439 = v8440 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8443 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8439 = v8443 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8446 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8439 = v8446 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8449 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8439 = v8449 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8452 : Async<Choice<bool, exn>> = null |> unbox<Async<Choice<bool, exn>>>
                                    let _v8439 = v8452 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8455 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v8456 : Async<Choice<bool, exn>> = v8455 v8438
                                    let _v8439 = v8456 
                                    #endif
#else
                                    let v8457 : (Async<bool> -> Async<Choice<bool, exn>>) = Async.Catch
                                    let v8458 : Async<Choice<bool, exn>> = v8457 v8438
                                    let _v8439 = v8458 
                                    #endif
                                    let v8459 : Async<Choice<bool, exn>> = _v8439 
                                    let v8464 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8465 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8464 = v8465 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8468 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8464 = v8468 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8471 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8464 = v8471 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8474 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8464 = v8474 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8477 : Async<US7> = null |> unbox<Async<US7>>
                                    let _v8464 = v8477 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8480 : unit = ()
                                    let _v8480 =
                                        async {
                                            let! v8459 = v8459 
                                            let v8481 : Choice<bool, exn> = v8459 
                                            let v8482 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v8483 : US7 = null |> unbox<US7>
                                            let _v8482 = v8483 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v8486 : US7 = null |> unbox<US7>
                                            let _v8482 = v8486 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v8489 : US7 = null |> unbox<US7>
                                            let _v8482 = v8489 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v8492 : US7 = null |> unbox<US7>
                                            let _v8482 = v8492 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v8495 : US7 = null |> unbox<US7>
                                            let _v8482 = v8495 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v8498 : (bool -> US7) = method19()
                                            let v8499 : (exn -> US7) = method20()
                                            let v8500 : US7 = match v8481 with Choice1Of2 x -> v8498 x | Choice2Of2 x -> v8499 x
                                            let _v8482 = v8500 
                                            #endif
#else
                                            let v8501 : (bool -> US7) = method19()
                                            let v8502 : (exn -> US7) = method20()
                                            let v8503 : US7 = match v8481 with Choice1Of2 x -> v8501 x | Choice2Of2 x -> v8502 x
                                            let _v8482 = v8503 
                                            #endif
                                            let v8504 : US7 = _v8482 
                                            return v8504 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8509 : Async<US7> = _v8480 
                                    let _v8464 = v8509 
                                    #endif
#else
                                    let v8510 : unit = ()
                                    let _v8510 =
                                        async {
                                            let! v8459 = v8459 
                                            let v8511 : Choice<bool, exn> = v8459 
                                            let v8512 : unit = ()
                                            
#if FABLE_COMPILER || WASM || CONTRACT
                                            
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                            let v8513 : US7 = null |> unbox<US7>
                                            let _v8512 = v8513 
                                            #endif
#if FABLE_COMPILER_RUST && WASM
                                            let v8516 : US7 = null |> unbox<US7>
                                            let _v8512 = v8516 
                                            #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                            let v8519 : US7 = null |> unbox<US7>
                                            let _v8512 = v8519 
                                            #endif
#if FABLE_COMPILER_TYPESCRIPT
                                            let v8522 : US7 = null |> unbox<US7>
                                            let _v8512 = v8522 
                                            #endif
#if FABLE_COMPILER_PYTHON
                                            let v8525 : US7 = null |> unbox<US7>
                                            let _v8512 = v8525 
                                            #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                            let v8528 : (bool -> US7) = method19()
                                            let v8529 : (exn -> US7) = method20()
                                            let v8530 : US7 = match v8511 with Choice1Of2 x -> v8528 x | Choice2Of2 x -> v8529 x
                                            let _v8512 = v8530 
                                            #endif
#else
                                            let v8531 : (bool -> US7) = method19()
                                            let v8532 : (exn -> US7) = method20()
                                            let v8533 : US7 = match v8511 with Choice1Of2 x -> v8531 x | Choice2Of2 x -> v8532 x
                                            let _v8512 = v8533 
                                            #endif
                                            let v8534 : US7 = _v8512 
                                            return v8534 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8539 : Async<US7> = _v8510 
                                    let _v8464 = v8539 
                                    #endif
                                    let v8540 : Async<US7> = _v8464 
                                    let v8545 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8546 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8545 = v8546 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8549 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8545 = v8549 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8552 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8545 = v8552 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8555 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8545 = v8555 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8558 : Async<US8> = null |> unbox<Async<US8>>
                                    let _v8545 = v8558 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8561 : unit = ()
                                    let _v8561 =
                                        async {
                                            let! v8540 = v8540 
                                            let v8562 : US7 = v8540 
                                            let v8568 : US8 =
                                                match v8562 with
                                                | US7_0(v8563) -> (* C1of2 *)
                                                    US8_0(v8563)
                                                | US7_1(v8565) -> (* C2of2 *)
                                                    US8_1(v8565)
                                            return v8568 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8569 : Async<US8> = _v8561 
                                    let _v8545 = v8569 
                                    #endif
#else
                                    let v8570 : unit = ()
                                    let _v8570 =
                                        async {
                                            let! v8540 = v8540 
                                            let v8571 : US7 = v8540 
                                            let v8577 : US8 =
                                                match v8571 with
                                                | US7_0(v8572) -> (* C1of2 *)
                                                    US8_0(v8572)
                                                | US7_1(v8574) -> (* C2of2 *)
                                                    US8_1(v8574)
                                            return v8577 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8578 : Async<US8> = _v8570 
                                    let _v8545 = v8578 
                                    #endif
                                    let v8579 : Async<US8> = _v8545 
                                    let v8584 : unit = ()
                                    
#if FABLE_COMPILER || WASM || CONTRACT
                                    
#if FABLE_COMPILER_RUST && !WASM && !CONTRACT
                                    let v8585 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8584 = v8585 
                                    #endif
#if FABLE_COMPILER_RUST && WASM
                                    let v8588 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8584 = v8588 
                                    #endif
#if FABLE_COMPILER_RUST && CONTRACT
                                    let v8591 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8584 = v8591 
                                    #endif
#if FABLE_COMPILER_TYPESCRIPT
                                    let v8594 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8584 = v8594 
                                    #endif
#if FABLE_COMPILER_PYTHON
                                    let v8597 : Async<US6> = null |> unbox<Async<US6>>
                                    let _v8584 = v8597 
                                    #endif
#if !FABLE_COMPILER_RUST && !FABLE_COMPILER_TYPESCRIPT && !FABLE_COMPILER_PYTHON
                                    let v8600 : unit = ()
                                    let _v8600 =
                                        async {
                                            let! v8579 = v8579 
                                            let v8601 : US8 = v8579 
                                            let v8725 : US6 =
                                                match v8601 with
                                                | US8_1(v8604) -> (* Error *)
                                                    let v8605 : string = $"%A{v8604}"
                                                    let v8608 : string = "System.TimeoutException"
                                                    let v8609 : bool = v8605.Contains v8608 
                                                    if v8609 then
                                                        let v8612 : unit = ()
                                                        let v8613 : (unit -> unit) = closure16(v4698)
                                                        let v8614 : unit = (fun () -> v8613 (); v8612) ()
                                                        US6_1
                                                    else
                                                        let v8655 : unit = ()
                                                        let v8656 : (unit -> unit) = closure17(v4698, v8604)
                                                        let v8657 : unit = (fun () -> v8656 (); v8655) ()
                                                        US6_1
                                                | US8_0(v8602) -> (* Ok *)
                                                    US6_0(v8602)
                                            return v8725 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8726 : Async<US6> = _v8600 
                                    let _v8584 = v8726 
                                    #endif
#else
                                    let v8727 : unit = ()
                                    let _v8727 =
                                        async {
                                            let! v8579 = v8579 
                                            let v8728 : US8 = v8579 
                                            let v8852 : US6 =
                                                match v8728 with
                                                | US8_1(v8731) -> (* Error *)
                                                    let v8732 : string = $"%A{v8731}"
                                                    let v8735 : string = "System.TimeoutException"
                                                    let v8736 : bool = v8732.Contains v8735 
                                                    if v8736 then
                                                        let v8739 : unit = ()
                                                        let v8740 : (unit -> unit) = closure16(v4698)
                                                        let v8741 : unit = (fun () -> v8740 (); v8739) ()
                                                        US6_1
                                                    else
                                                        let v8782 : unit = ()
                                                        let v8783 : (unit -> unit) = closure17(v4698, v8731)
                                                        let v8784 : unit = (fun () -> v8783 (); v8782) ()
                                                        US6_1
                                                | US8_0(v8729) -> (* Ok *)
                                                    US6_0(v8729)
                                            return v8852 
                                            (*
                                            ()
                                        *)
                                        }
                                        (*
                                        ()
                                    *)
                                    let v8853 : Async<US6> = _v8727 
                                    let _v8584 = v8853 
                                    #endif
                                    let v8854 : Async<US6> = _v8584 
                                    return! v8854 
                                    (*
                                    ()
                                *)
                                }
                                (*
                                ()
                            *)
                            let v8859 : Async<US6> = _v8414 
                            let _v7952 = v8859 
                            #endif
                            let v8860 : Async<US6> = _v7952 
                            let _v7023 = v8860 
                            #endif
                            let v8865 : Async<US6> = _v7023 
                            let! v8865 = v8865 
                            let v8870 : US6 = v8865 
                            let v8873 : bool =
                                match v8870 with
                                | US6_1 -> (* None *)
                                    false
                                | US6_0(v8871) -> (* Some *)
                                    v8871
                            return v8873 
                            (*
                            ()
                        *)
                        }
                        (*
                        ()
                    *)
                    let v8874 : Async<bool> = _v6795 
                    let _v4699 = v8874 
                    #endif
                    let v8875 : Async<bool> = _v4699 
                    v8875
            let! v8881 = v8881 
            let v8882 : bool = v8881 
            let v8883 : bool = v8882 = false
            if v8883 then
                return v2 
                (*
                ()
            else
                *) else
                let v8884 : int32 = v2 + 1
                let v8885 : Async<int32> = method30(v0, v1, v8884)
                return! v8885 
                (*
                ()
            *)
            (*
            ()
        *)
        }
        (*
        ()
    *)
    let v8886 : Async<int32> = _v4453 
    let _v3 = v8886 
    #endif
    let v8887 : Async<int32> = _v3 
    v8887
and closure26 (v0 : int32 option, v1 : string) (v2 : int32) : Async<int32> =
    method30(v0, v1, v2)
and closure25 (v0 : int32 option) (v1 : string) : (int32 -> Async<int32>) =
    closure26(v0, v1)
and closure24 () (v0 : int32 option) : (string -> (int32 -> Async<int32>)) =
    closure25(v0)
let v0 : unit = ()
let v1 : (unit -> unit) = closure0()
let v2 : unit = (fun () -> v1 (); v0) ()
let v16 : (string -> (int32 -> Async<bool>)) = closure3()
let test_port_open x = v16 x
let v17 : (int32 -> (string -> (int32 -> Async<bool>))) = closure11()
let test_port_open_timeout x = v17 x
let v18 : (int32 option -> (bool -> (string -> (int32 -> Async<int64>)))) = closure18()
let wait_for_port_access x = v18 x
let v19 : (int32 option -> (string -> (int32 -> Async<int32>))) = closure24()
let get_available_port x = v19 x
()
