open rust_operators

nominal async t = $"Async<`t>"
nominal future t = $"Future<`t>"
type future_pin t = rust.pin (rust.box (rust.dyn' (future t)))

inl future_init forall t. (depth : u8) (flag : u8) (x : () -> t) : future_pin t =
    if flag = 1
    then !\($'"let __future_init = Box::pin(async move { //"')
    else !\($'"let __future_init = Box::pin(async { //"')

    let x' = x ()
    inl x' = join x'

    if depth = 1
    then !\($'"!x' })"')
    elif depth = 2
    then !\($'"!x' }})"')
    elif depth = 3
    then !\($'"!x' }}); { //"')
    elif depth = 4
    then !\($'"!x' }}}); {{ //"')
    elif depth = 5
    then !\($'"!x' }}}}); {{{ //"')
    elif depth = 6
    then !\($'"!x' }}}}); {{{{ //"')
    elif depth = 7
    then !\($'"!x' }}}}}); {{{{{ //"')
    !\($'"__future_init"')

inl await forall t. (x : future_pin t) : t =
    !\($'"!x.await"')
