open sm'_operators
open leptos
open rust

type props =
    {
        class : () -> string
        cols_class : () -> string
        dd_class : () -> string
        padding_class : () -> string
    }

inl props () : props =
    {
        class = fun () => ""
        padding_class = fun () => "pt-[9px] pr-[10px] pb-[11px] pl-[10px]"
        cols_class = fun () => "sm:grid-cols-[150px_repeat(2,minmax(0,1fr))]"
        dd_class = fun () => "[overflow:auto]"
    }

inl render props_fn left right : _ dl =
    inl props : props = props () |> props_fn
    inl left = join left
    inl right = join right
    inl class = props.class |> rust.emit
    inl padding_class = props.padding_class |> rust.emit
    inl cols_class = props.cols_class |> rust.emit

    dl [
        $'"class=move || \\\"grid gap-[1px] flex-1 even:bg-gray-50 [inline-size:max-content] [width:100%] [grid-auto-columns:max-content] \\\".to_owned() + &!cols_class(()) + \\\" \\\" + &!padding_class(()) + \\\" \\\" + &!class(())"'
    ] fun () =>
        inl dd_class = props.dd_class |> rust.emit
        :>(;[
            dt [
                $'"class=\\\"[font-size:12px] text-gray-400\\\""'
            ] left
            |> element_to_view

            dd [
                $'"class=move || \\\"text-gray-700 sm:col-span-2 flex flex-1 \\\".to_owned () + &!dd_class(())"'
            ] right
            |> element_to_view
        ])
