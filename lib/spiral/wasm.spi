open rust_operators

inl types () =
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"js_sys::Function\")>]\n#endif\ntype js_sys_Function = class end"
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"rexie::Error\")>]\n#endif\ntype rexie_Error = class end"
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"rexie::Rexie\")>]\n#endif\ntype rexie_Rexie = class end"
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"rexie::Store\")>]\n#endif\ntype rexie_Store = class end"
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"rexie::Transaction\")>]\n#endif\ntype rexie_Transaction = class end"
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"wasm_bindgen::JsValue\")>]\n#endif\ntype wasm_bindgen_JsValue = class end"
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"wasm_bindgen::closure::Closure<$0>\")>]\n#endif\ntype wasm_bindgen_closure_Closure<'T> = class end"
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"web_sys::Document\")>]\n#endif\ntype web_sys_Document = class end"
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"web_sys::HtmlElement\")>]\n#endif\ntype web_sys_HtmlElement = class end"
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"web_sys::Storage\")>]\n#endif\ntype web_sys_Storage = class end"
    global "#if FABLE_COMPILER\n[<Fable.Core.Erase; Fable.Core.Emit(\"web_sys::Window\")>]\n#endif\ntype web_sys_Window = class end"

nominal rexie = $"rexie_Rexie"
nominal rexie_store = $"rexie_Store"
nominal rexie_transaction = $"rexie_Transaction"
nominal rexie_error = $"rexie_Error"
nominal js_value = $"wasm_bindgen_JsValue"
nominal closure t = $"wasm_bindgen_closure_Closure<`t>"
nominal js_function = $"js_sys_Function"
nominal window = $"web_sys_Window"
nominal document = $"web_sys_Document"
nominal html_element = $"web_sys_HtmlElement"
nominal storage = $"web_sys_Storage"

inl closure_wrap forall t. (x : rust.box t) : closure t =
    inl x = join x
    !\($'"wasm_bindgen::closure::Closure::wrap(!x)"')

inl closure_forget forall t. (closure : closure t) =
    !\($'"!closure.forget()"') : ()

inl closure_as_ref forall t. (closure : closure t) : rust.ref' js_value =
    !\($'"wasm_bindgen::closure::Closure::as_ref(&!closure)"')

inl unchecked_ref (ref : rust.ref' js_value) : rust.ref' js_function =
    !\($'"wasm_bindgen::JsCast::unchecked_ref(!ref)"')

inl set_inner_html (html : string) (el : html_element) =
    inl html = join html
    inl html = html |> sm'.as_str
    inl el = join el
    !\($'"!el.set_inner_html(!html)"')

inl from_js_value (value : js_value) : resultm.result' (optionm'.option' sm'.json_value) sm'.std_string =
    inl value = join value
    !\($'"serde_wasm_bindgen::from_value(!value)"')
    |> resultm.map_error' fun (x : sm'.serde_wasm_bindgen_error) => x |> sm'.format'
